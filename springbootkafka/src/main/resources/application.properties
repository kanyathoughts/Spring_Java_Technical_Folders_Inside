spring.application.name=springbootkafka

# configure kafka consumer 
spring.kafka.consumer.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=myGroup
# if no initial offset present in kafka or if current offset doesn't exist anymore in kafka
spring.kafka.consumer.auto-offset-reset=earliest
# we are using StringDeserializer class in apache kafka to deserialize the key in message
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
# we are using StringDeserializer class in apache kafka to deserialize the value in message
# spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
# we can deserialize from all the classes inside all packages
spring.kafka.consumer.properties.spring.json.trusted.packages=*

# configure kafka producer
spring.kafka.producer.bootstrap-servers=localhost:9092
# we are using StringDeserializer class in apache kafka to serialize the key in message
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
# we are using StringDeserializer class in apache kafka to serialize the value in message
# spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer