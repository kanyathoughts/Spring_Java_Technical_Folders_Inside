-- Creates StatementTypeEnum, Statement and SqlStatement tables

CREATE CLASS StatementTypeEnum IF NOT EXISTS EXTENDS V;
CREATE PROPERTY StatementTypeEnum.name IF NOT EXISTS STRING (NOTNULL, MANDATORY TRUE);
ALTER CLASS StatementTypeEnum STRICTMODE TRUE;

CREATE INDEX StatementTypeEnum_name_idx IF NOT EXISTS ON StatementTypeEnum (name) UNIQUE;

CREATE SEQUENCE Statement_Sequence IF NOT EXISTS TYPE ORDERED START 0 INCREMENT 1;

CREATE CLASS Statement IF NOT EXISTS EXTENDS V;
CREATE PROPERTY Statement.id IF NOT EXISTS LONG (NOTNULL, MANDATORY TRUE);
CREATE PROPERTY Statement.projectLink IF NOT EXISTS LINK Project (NOTNULL, MANDATORY TRUE);
CREATE PROPERTY Statement.moduleLink IF NOT EXISTS LINK Module (NOTNULL, MANDATORY TRUE);
CREATE PROPERTY Statement.technologyLink IF NOT EXISTS LINK TechnologyEnum (NOTNULL, MANDATORY TRUE);
CREATE PROPERTY Statement.statementTypeLink IF NOT EXISTS LINK StatementTypeEnum (NOTNULL, MANDATORY TRUE);
CREATE PROPERTY Statement.text IF NOT EXISTS STRING (NOTNULL, MANDATORY TRUE);
ALTER CLASS Statement STRICTMODE TRUE;

CREATE INDEX Statement_id_idx IF NOT EXISTS ON Statement (id) UNIQUE;
CREATE INDEX Statement_technology_type_idx IF NOT EXISTS ON Statement (projectLink, technologyLink, statementTypeLink) NOTUNIQUE;

CREATE CLASS SqlStatement IF NOT EXISTS EXTENDS Statement;
CREATE PROPERTY SqlStatement.customComplexity IF NOT EXISTS INTEGER (NOTNULL, MANDATORY TRUE);
CREATE PROPERTY SqlStatement.distinctTables IF NOT EXISTS INTEGER (NOTNULL, MANDATORY TRUE);
CREATE PROPERTY SqlStatement.halsteadComplexity IF NOT EXISTS FLOAT (NOTNULL, MANDATORY TRUE);
CREATE PROPERTY SqlStatement.halsteadDifficulty IF NOT EXISTS FLOAT (NOTNULL, MANDATORY TRUE);
CREATE PROPERTY SqlStatement.sqlLength IF NOT EXISTS INTEGER (NOTNULL, MANDATORY TRUE);
CREATE PROPERTY SqlStatement.tables IF NOT EXISTS INTEGER (NOTNULL, MANDATORY TRUE);
ALTER CLASS SqlStatement STRICTMODE TRUE;