--################################################################################################
-- Sequences 
--################################################################################################
CREATE SEQUENCE Client_Sequence TYPE ORDERED START 0 INCREMENT 1;
CREATE SEQUENCE Project_Sequence TYPE ORDERED START 0 INCREMENT 1;
CREATE SEQUENCE Module_Sequence TYPE ORDERED START 0 INCREMENT 1;
CREATE SEQUENCE AnnotationCategory_Sequence TYPE ORDERED START 0 INCREMENT 1;
CREATE SEQUENCE Annotation_Sequence TYPE ORDERED START 0 INCREMENT 1;
CREATE SEQUENCE DataDictionaryEntry_Sequence TYPE ORDERED START 0 INCREMENT 1;
CREATE SEQUENCE Reference_Sequence TYPE ORDERED START 0 INCREMENT 1;
CREATE SEQUENCE Taxonomy_Sequence TYPE ORDERED START 0 INCREMENT 1;

--################################################################################################
-- User
--################################################################################################
CREATE CLASS User;
CREATE PROPERTY User.userId String (NOTNULL, MANDATORY TRUE);
CREATE PROPERTY User.password String (NOTNULL, MANDATORY TRUE);
CREATE INDEX User_user_id_idx ON User (userId) UNIQUE;
CREATE INDEX User_userid_ft ON User(userId) FULLTEXT ENGINE LUCENE METADATA{"allowLeadingWildcard": true};
INSERT INTO User SET userId="admin", password="$2a$10$.1stH06O0tY5jQQDG2vfn.aMmoXLhYgR8jrLNnpoKNSi3gHou9sva";
INSERT INTO User SET userId="system_user", password="";

--################################################################################################
-- Client
--################################################################################################
-- Create Client & Project Classes
CREATE CLASS Client EXTENDS V;
CREATE PROPERTY Client.id LONG (NOTNULL, MANDATORY TRUE);
CREATE PROPERTY Client.name STRING (NOTNULL, MANDATORY TRUE);
CREATE INDEX Client_id_idx ON Client (id) UNIQUE;
CREATE INDEX Client_name_idx ON Client (name) UNIQUE;
INSERT INTO Client SET id=0, name="SYSTEM";
ALTER CLASS Client STRICTMODE TRUE;

--################################################################################################
-- Project
--################################################################################################
CREATE CLASS Project EXTENDS V;
CREATE PROPERTY Project.id LONG (NOTNULL, MANDATORY TRUE);
CREATE PROPERTY Project.name STRING (NOTNULL, MANDATORY TRUE);
CREATE PROPERTY Project.clientLink LINK Client (NOTNULL, MANDATORY TRUE);
CREATE INDEX Project_id_idx ON Project (id) UNIQUE;
CREATE INDEX Project_name_idx ON Project (name, clientLink) UNIQUE;
ALTER CLASS Project STRICTMODE TRUE;
INSERT INTO Project SET id=0, name="SYSTEM", clientLink=(SELECT FROM Client WHERE id=0);

--################################################################################################
-- Technology Enum
--################################################################################################
CREATE CLASS TechnologyEnum EXTENDS V;
CREATE PROPERTY TechnologyEnum.name STRING (NOTNULL, MANDATORY TRUE);
INSERT INTO TechnologyEnum set name="COBOL";
INSERT INTO TechnologyEnum set name="BMS";
INSERT INTO TechnologyEnum set name="NATURAL";
INSERT INTO TechnologyEnum set name="PL1";
INSERT INTO TechnologyEnum set name="JCL";
INSERT INTO TechnologyEnum set name="ASSEMBLER";
INSERT INTO TechnologyEnum set name="RESOURCE";
INSERT INTO TechnologyEnum set name="DATABASE";
INSERT INTO TechnologyEnum set name="CSD";
INSERT INTO TechnologyEnum set name="NONE";
INSERT INTO TechnologyEnum set name="UNKNOWN";
INSERT INTO TechnologyEnum set name="XML";
INSERT INTO TechnologyEnum set name="BINARY";
INSERT INTO TechnologyEnum set name="EASYTRIEVE";
INSERT INTO TechnologyEnum set name="IMS";
CREATE INDEX TechnologyEnum_name_idx ON TechnologyEnum (name) UNIQUE;

--################################################################################################
-- Type Enum
--################################################################################################
CREATE CLASS TypeEnum EXTENDS V;
CREATE PROPERTY TypeEnum.name STRING (NOTNULL, MANDATORY TRUE);
INSERT INTO TypeEnum set name="ADAPTER";
INSERT INTO TypeEnum set name="ADAPTVIEW";
INSERT INTO TypeEnum set name="ALT_PCB";
INSERT INTO TypeEnum set name="ARCHDEF";
INSERT INTO TypeEnum set name="ASSEMBLER";
INSERT INTO TypeEnum set name="BINARY";
INSERT INTO TypeEnum set name="BMS_MAP";
INSERT INTO TypeEnum set name="BMS_MAPSET";
INSERT INTO TypeEnum set name="CFG";
INSERT INTO TypeEnum set name="CLASS";
INSERT INTO TypeEnum set name="COBOL";
INSERT INTO TypeEnum set name="CONTROLCARD";
INSERT INTO TypeEnum set name="COPYBOOK";
INSERT INTO TypeEnum set name="COPYCODE";
INSERT INTO TypeEnum set name="CPM";
INSERT INTO TypeEnum set name="CSD";
INSERT INTO TypeEnum set name="DATABASE";
INSERT INTO TypeEnum set name="DBD";
INSERT INTO TypeEnum set name="DBD_COMPRTN";
INSERT INTO TypeEnum set name="DBD_DATASET";
INSERT INTO TypeEnum set name="DDM";
INSERT INTO TypeEnum set name="DIALOG";
INSERT INTO TypeEnum set name="DIALOG_PRIV_RES";
INSERT INTO TypeEnum set name="EASYTRIEVE";
INSERT INTO TypeEnum set name="ERROR_MESSAGE";
INSERT INTO TypeEnum set name="EXEC";
INSERT INTO TypeEnum set name="EXEC_PGM";
INSERT INTO TypeEnum set name="EXTRACT";
INSERT INTO TypeEnum set name="FILE";
INSERT INTO TypeEnum set name="FUNCTION";
INSERT INTO TypeEnum set name="GDA";
INSERT INTO TypeEnum set name="HDAMPARM";
INSERT INTO TypeEnum set name="HELP";
INSERT INTO TypeEnum set name="INCLUDE";
INSERT INTO TypeEnum set name="INFO";
INSERT INTO TypeEnum set name="INLINE_PROC";
INSERT INTO TypeEnum set name="INSTREAM";
INSERT INTO TypeEnum set name="JCL";
INSERT INTO TypeEnum set name="JOB";
INSERT INTO TypeEnum set name="LDA";
INSERT INTO TypeEnum set name="LIST";
INSERT INTO TypeEnum set name="MAINPROGRAM";
INSERT INTO TypeEnum set name="MAP";
INSERT INTO TypeEnum set name="MFS";
INSERT INTO TypeEnum set name="NATURAL";
INSERT INTO TypeEnum set name="NONE";
INSERT INTO TypeEnum set name="PCB";
INSERT INTO TypeEnum set name="PDA";
INSERT INTO TypeEnum set name="PSB";
INSERT INTO TypeEnum set name="PGM";
INSERT INTO TypeEnum set name="PL1";
INSERT INTO TypeEnum set name="PROC";
INSERT INTO TypeEnum set name="PROGRAM";
INSERT INTO TypeEnum set name="RESOURCE";
INSERT INTO TypeEnum set name="SUBPROGRAM";
INSERT INTO TypeEnum set name="SUBROUTINE";
INSERT INTO TypeEnum set name="TABLE";
INSERT INTO TypeEnum set name="TEXT";
INSERT INTO TypeEnum set name="TRANSACTION";
INSERT INTO TypeEnum set name="UNDISCOVERED";
INSERT INTO TypeEnum set name="UNKNOWN";
INSERT INTO TypeEnum set name="URI";
INSERT INTO TypeEnum set name="URL";
INSERT INTO TypeEnum set name="UTILITY";
INSERT INTO TypeEnum set name="XML";
CREATE INDEX TypeEnum_name_idx ON TypeEnum (name) UNIQUE;

--################################################################################################
-- Storage Enum
--################################################################################################
CREATE CLASS StorageEnum EXTENDS V;
CREATE PROPERTY StorageEnum.name STRING (NOTNULL, MANDATORY TRUE);
INSERT INTO StorageEnum SET name="FILE";
INSERT INTO StorageEnum SET name="FILE_SECTION";
INSERT INTO StorageEnum SET name="DATABASE";
INSERT INTO StorageEnum SET name="NETWORK";
INSERT INTO StorageEnum SET name="UNDEFINED";
INSERT INTO StorageEnum SET name="SYSTEM";
CREATE INDEX StorageEnum_name_idx ON StorageEnum (name) UNIQUE;

--################################################################################################
-- Origin Enum
--################################################################################################
CREATE CLASS OriginEnum EXTENDS V;
CREATE PROPERTY OriginEnum.name STRING (NOTNULL, MANDATORY TRUE);
INSERT INTO OriginEnum SET name="CUSTOM";
INSERT INTO OriginEnum SET name="ENVIRONMENT";
CREATE INDEX OriginEnum_name_idx ON OriginEnum (name) UNIQUE;

--################################################################################################
-- Object Type
--################################################################################################
CREATE CLASS ObjectType EXTENDS V;
CREATE PROPERTY ObjectType.technologyLink LINK TechnologyEnum (NOTNULL, MANDATORY TRUE);
CREATE PROPERTY ObjectType.typeLink LINK TypeEnum (NOTNULL, MANDATORY TRUE);
CREATE PROPERTY ObjectType.storageLink LINK StorageEnum (NOTNULL, MANDATORY TRUE);
CREATE PROPERTY ObjectType.originLink LINK OriginEnum (NOTNULL, MANDATORY TRUE);
CREATE INDEX ObjectType_idx ON ObjectType (technologyLink, typeLink, storageLink, originLink) UNIQUE;

INSERT INTO ObjectType SET technologyLink=(SELECT FROM TechnologyEnum WHERE name="COBOL"), typeLink=(SELECT FROM TypeEnum WHERE name="COPYBOOK"), storageLink=(SELECT FROM StorageEnum WHERE name="FILE"), originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT");
INSERT INTO ObjectType SET technologyLink=(SELECT FROM TechnologyEnum WHERE name="UNKNOWN"), typeLink=(SELECT FROM TypeEnum WHERE name="PROGRAM"), storageLink=(SELECT FROM StorageEnum WHERE name="FILE"), originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT");

--################################################################################################
-- Taxonomy Enum
--################################################################################################
CREATE CLASS TaxonomyEnum EXTENDS V;
CREATE PROPERTY TaxonomyEnum.name STRING (NOTNULL, MANDATORY TRUE);
CREATE PROPERTY TaxonomyEnum.projectLink LINK Project (NOTNULL, MANDATORY TRUE);
CREATE INDEX TaxonomyEnum_name_idx ON TaxonomyEnum (name, projectLink) UNIQUE;

--################################################################################################
-- Database Access Enum
--################################################################################################
CREATE CLASS DatabaseAccessEnum EXTENDS V;
CREATE PROPERTY DatabaseAccessEnum.name STRING (NOTNULL, MANDATORY TRUE);
CREATE INDEX DatabaseAccessEnum_name_idx ON DatabaseAccessEnum (name) UNIQUE;

INSERT INTO DatabaseAccessEnum SET name="DECLARE_TABLE";
INSERT INTO DatabaseAccessEnum SET name="DELETE_TABLE";
INSERT INTO DatabaseAccessEnum SET name="INSERT_TABLE";
INSERT INTO DatabaseAccessEnum SET name="LOCK_TABLE";
INSERT INTO DatabaseAccessEnum SET name="UPDATE_TABLE";
INSERT INTO DatabaseAccessEnum SET name="DECLARE_CURSOR_TABLE";
INSERT INTO DatabaseAccessEnum SET name="SELECT_TABLE";
INSERT INTO DatabaseAccessEnum SET name="UNDEFINED";

--################################################################################################
-- Taxonomy
--################################################################################################
CREATE CLASS Taxonomy EXTENDS V;
CREATE PROPERTY Taxonomy.id LONG (NOTNULL, MANDATORY TRUE);
CREATE PROPERTY Taxonomy.name STRING (NOTNULL, MANDATORY TRUE);
CREATE PROPERTY Taxonomy.projectLink LINK Project (NOTNULL, MANDATORY TRUE);
CREATE PROPERTY Taxonomy.typeLink LINK TaxonomyEnum (NOTNULL, MANDATORY TRUE);
CREATE INDEX Taxonomy_id_idx ON Taxonomy (id) UNIQUE;
CREATE INDEX Taxonomy_name_idx ON Taxonomy (projectLink, typeLink, name) UNIQUE;
ALTER CLASS Taxonomy STRICTMODE TRUE;

--################################################################################################
-- Identification Enum
--################################################################################################
CREATE CLASS IdentificationEnum EXTENDS V;
CREATE PROPERTY IdentificationEnum.name STRING (NOTNULL, MANDATORY TRUE);
INSERT INTO IdentificationEnum SET name="IDENTIFIED";
INSERT INTO IdentificationEnum SET name="MISSING";
CREATE INDEX IdentificationEnum_name_idx ON IdentificationEnum (name) UNIQUE;

--################################################################################################
-- Source Attachment
--################################################################################################
CREATE CLASS SourceAttachment EXTENDS V;
CREATE PROPERTY SourceAttachment.content STRING (NOTNULL, MANDATORY TRUE);

--################################################################################################
-- Module
--################################################################################################
CREATE CLASS Module EXTENDS V;
CREATE PROPERTY Module.id LONG (NOTNULL, MANDATORY TRUE);
CREATE PROPERTY Module.name STRING (NOTNULL, MANDATORY TRUE);
CREATE PROPERTY Module.path STRING;
CREATE PROPERTY Module.objectTypeLink LINK ObjectType (NOTNULL, MANDATORY TRUE);
CREATE PROPERTY Module.projectLink LINK Project (NOTNULL, MANDATORY TRUE);
CREATE PROPERTY Module.identificationLink LINK IdentificationEnum (NOTNULL, MANDATORY TRUE);
CREATE PROPERTY Module.info EMBEDDEDMAP STRING;
CREATE PROPERTY Module.description STRING;
CREATE PROPERTY Module.linesOfCode INTEGER;
CREATE PROPERTY Module.linesOfComment INTEGER;
CREATE PROPERTY Module.complexity INTEGER;
CREATE PROPERTY Module.sourceAttachmentLink LINK SourceAttachment;
CREATE INDEX Module_id_idx ON Module (id) UNIQUE;
CREATE INDEX Module_projectLink_idx ON Module (projectLink) NOTUNIQUE;
CREATE INDEX Module_description_ft ON Module(description) FULLTEXT ENGINE LUCENE METADATA {"default" : "org.apache.lucene.analysis.en.EnglishAnalyzer"};
CREATE INDEX Module_name_ft ON Module(name) FULLTEXT ENGINE LUCENE METADATA{"allowLeadingWildcard": true};
ALTER CLASS Module STRICTMODE TRUE;

--################################################################################################
-- Module Location
--################################################################################################
CREATE CLASS ModuleLocation EXTENDS V;
CREATE PROPERTY ModuleLocation.offset INTEGER (NOTNULL, MANDATORY TRUE);
CREATE PROPERTY ModuleLocation.length INTEGER (NOTNULL, MANDATORY TRUE);

--################################################################################################
-- Annotation State Enum
--################################################################################################
CREATE CLASS AnnotationStateEnum EXTENDS V;
CREATE PROPERTY AnnotationStateEnum.name STRING (NOTNULL, MANDATORY TRUE);
INSERT INTO AnnotationStateEnum SET name="CANDIDATE";
INSERT INTO AnnotationStateEnum SET name="IN_ANALYSIS";
INSERT INTO AnnotationStateEnum SET name="FOR_REVIEW";
INSERT INTO AnnotationStateEnum SET name="REJECTED";
INSERT INTO AnnotationStateEnum SET name="APPROVED";
INSERT INTO AnnotationStateEnum SET name="INVALID";

CREATE INDEX AnnotationStateEnum_name_idx ON AnnotationStateEnum (name) UNIQUE;

--################################################################################################
-- Annotation Type Enum
--################################################################################################
CREATE CLASS AnnotationTypeEnum EXTENDS V;
CREATE PROPERTY AnnotationTypeEnum.name STRING (NOTNULL, MANDATORY TRUE);
INSERT INTO AnnotationTypeEnum set name="DATABASE";
INSERT INTO AnnotationTypeEnum set name="DEAD_CODE";
INSERT INTO AnnotationTypeEnum set name="EXCLUDE";
INSERT INTO AnnotationTypeEnum set name="RULE";
CREATE INDEX AnnotationTypeEnum_name ON AnnotationTypeEnum (name) UNIQUE;

--################################################################################################
-- Annotation Category
--################################################################################################
CREATE CLASS AnnotationCategory EXTENDS V;
CREATE PROPERTY AnnotationCategory.id LONG (NOTNULL, MANDATORY TRUE);
CREATE PROPERTY AnnotationCategory.name STRING (NOTNULL, MANDATORY TRUE);
CREATE PROPERTY AnnotationCategory.projectLink LINK Project (NOTNULL, MANDATORY TRUE);
CREATE INDEX AnnotationCategory_id_idx ON AnnotationCategory (id) UNIQUE;
CREATE INDEX AnnotationCategory_name_idx ON AnnotationCategory (name, projectLink) UNIQUE;
ALTER CLASS AnnotationCategory STRICTMODE TRUE;

--################################################################################################
-- Annotation
--################################################################################################
CREATE CLASS Annotation EXTENDS V;
CREATE PROPERTY Annotation.id LONG (NOTNULL, MANDATORY TRUE);
CREATE PROPERTY Annotation.name STRING (NOTNULL, MANDATORY TRUE);
CREATE PROPERTY Annotation.stateLink LINK AnnotationStateEnum (NOTNULL, MANDATORY TRUE);
CREATE PROPERTY Annotation.typeLink LINK AnnotationTypeEnum (NOTNULL, MANDATORY TRUE);
CREATE PROPERTY Annotation.categoryLink LINK AnnotationCategory;
CREATE PROPERTY Annotation.sourceAttachmentLink LINK SourceAttachment;
CREATE PROPERTY Annotation.projectLink LINK Project (NOTNULL, MANDATORY TRUE);
CREATE PROPERTY Annotation.createdByUserLink LINK User (NOTNULL, MANDATORY TRUE);
CREATE PROPERTY Annotation.updatedByUserLink LINK User;
CREATE INDEX Annotation_id_idx ON Annotation (id) UNIQUE;
CREATE INDEX Annotation_name_ft ON Annotation(name) FULLTEXT ENGINE LUCENE ;
ALTER CLASS Annotation STRICTMODE TRUE;

--################################################################################################
-- Data Dictionary Variable Format Enum
--################################################################################################
CREATE CLASS DataDictionaryVariableFormatEnum EXTENDS V;
CREATE PROPERTY DataDictionaryVariableFormatEnum.name STRING (NOTNULL, MANDATORY TRUE);
INSERT INTO DataDictionaryVariableFormatEnum set name="GROUP";
INSERT INTO DataDictionaryVariableFormatEnum set name="PIC9";
INSERT INTO DataDictionaryVariableFormatEnum set name="PICX";
INSERT INTO DataDictionaryVariableFormatEnum set name="UNKNOWN";
CREATE INDEX DataDictionaryVariableFormatEnum_name_idx ON DataDictionaryVariableFormatEnum (name) UNIQUE;

--################################################################################################
-- Data Dictionary Variable Scope Enum
--################################################################################################
CREATE CLASS DataDictionaryVariableScopeEnum EXTENDS V;
CREATE PROPERTY DataDictionaryVariableScopeEnum.name STRING (NOTNULL, MANDATORY TRUE);
INSERT INTO DataDictionaryVariableScopeEnum SET name="FILE";
INSERT INTO DataDictionaryVariableScopeEnum SET name="DATABASE";
INSERT INTO DataDictionaryVariableScopeEnum SET name="UI";
INSERT INTO DataDictionaryVariableScopeEnum SET name="OTHER";
INSERT INTO DataDictionaryVariableScopeEnum SET name="PARAMETER";
CREATE INDEX DataDictionaryVariableScopeEnum_name_idx ON DataDictionaryVariableScopeEnum (name) UNIQUE;

--################################################################################################
-- Data Dictionary Other Scope Enum
--################################################################################################
CREATE CLASS DataDictionaryOtherScopeEnum EXTENDS V;
CREATE PROPERTY DataDictionaryOtherScopeEnum.name STRING (NOTNULL, MANDATORY TRUE);
CREATE PROPERTY DataDictionaryOtherScopeEnum.projectLink LINK Project (NOTNULL, MANDATORY TRUE);
CREATE INDEX DataDictionaryOtherScopeEnum_idx ON DataDictionaryOtherScopeEnum (name, projectLink) UNIQUE;

--################################################################################################
-- Data Dictionary
--################################################################################################
CREATE CLASS DataDictionaryEntry EXTENDS V;
CREATE PROPERTY DataDictionaryEntry.id LONG (NOTNULL, MANDATORY TRUE);
CREATE PROPERTY DataDictionaryEntry.dataElementName STRING (NOTNULL, MANDATORY TRUE);
CREATE PROPERTY DataDictionaryEntry.description STRING (NOTNULL, MANDATORY TRUE);
CREATE PROPERTY DataDictionaryEntry.formatLink LINK DataDictionaryVariableFormatEnum;
CREATE PROPERTY DataDictionaryEntry.length LONG;
CREATE PROPERTY DataDictionaryEntry.createdByUserLink LINK User (NOTNULL, MANDATORY TRUE);
CREATE PROPERTY DataDictionaryEntry.updatedByUserLink LINK User;
CREATE PROPERTY DataDictionaryEntry.scopeLink LINKLIST DataDictionaryVariableScopeEnum;
CREATE PROPERTY DataDictionaryEntry.otherScopeLink LINK DataDictionaryOtherScopeEnum;
CREATE PROPERTY DataDictionaryEntry.dataset STRING;
CREATE PROPERTY DataDictionaryEntry.tables STRING;
CREATE PROPERTY DataDictionaryEntry.mapset STRING;
CREATE PROPERTY DataDictionaryEntry.mapname STRING;
CREATE PROPERTY DataDictionaryEntry.source STRING;
CREATE PROPERTY DataDictionaryEntry.attributes EMBEDDEDMAP STRING;
CREATE INDEX DataDictionaryEntry_id_idx ON DataDictionaryEntry (id) UNIQUE;
CREATE INDEX DataDictionaryEntry_dataElementName_idx ON DataDictionaryEntry (dataElementName) NOTUNIQUE;
CREATE INDEX DataDictionaryEntry_description_ft ON DataDictionaryEntry(description) FULLTEXT ENGINE LUCENE METADATA {"default" : "org.apache.lucene.analysis.en.EnglishAnalyzer"};
ALTER CLASS DataDictionaryEntry STRICTMODE TRUE;

--################################################################################################
-- Reference
--################################################################################################
CREATE CLASS Reference EXTENDS E ABSTRACT;
CREATE PROPERTY Reference.id LONG (NOTNULL, MANDATORY TRUE);
CREATE PROPERTY Reference.fromModuleLocationLink LINK ModuleLocation;
CREATE PROPERTY Reference.toModuleLocationLink LINK ModuleLocation;
CREATE PROPERTY Reference.properties EMBEDDEDMAP STRING;
CREATE INDEX Reference_id_idx ON Reference (id) UNIQUE;

CREATE CLASS Calls EXTENDS Reference;
CREATE PROPERTY Module.out_Calls LINKLIST Calls;
CREATE PROPERTY Module.in_Calls LINKLIST Calls;
CREATE PROPERTY Calls.out LINK Module (NOTNULL, MANDATORY TRUE);
CREATE PROPERTY Calls.in LINK Module (NOTNULL, MANDATORY TRUE);
CREATE INDEX Calls_in_out_idx ON Calls (in, out) NOTUNIQUE;
CREATE INDEX Calls_out_idx ON Calls (out) NOTUNIQUE;

CREATE CLASS Includes EXTENDS Reference;
CREATE PROPERTY Module.out_Includes LINKLIST Includes;
CREATE PROPERTY Module.in_Includes LINKLIST Includes;
CREATE PROPERTY Includes.out LINK Module (NOTNULL, MANDATORY TRUE);
CREATE PROPERTY Includes.in LINK Module (NOTNULL, MANDATORY TRUE);
CREATE INDEX Includes_in_out_idx ON Includes (in, out) NOTUNIQUE;
CREATE INDEX Includes_out_idx ON Includes (out) NOTUNIQUE;

CREATE CLASS References EXTENDS Reference;
CREATE PROPERTY Module.out_References LINKLIST References;
CREATE PROPERTY Module.in_References LINKLIST References;
CREATE PROPERTY References.out LINK Module (NOTNULL, MANDATORY TRUE);
CREATE PROPERTY References.in LINK Module (NOTNULL, MANDATORY TRUE);
CREATE INDEX References_in_out_idx ON References (in, out) NOTUNIQUE;
CREATE INDEX References_out_idx ON References (out) NOTUNIQUE;

CREATE CLASS ReadsWrites EXTENDS Reference;
CREATE PROPERTY Module.out_ReadsWrites LINKLIST ReadsWrites;
CREATE PROPERTY Module.in_ReadsWrites LINKLIST ReadsWrites;
CREATE PROPERTY ReadsWrites.out LINK Module (NOTNULL, MANDATORY TRUE);
CREATE PROPERTY ReadsWrites.in LINK Module (NOTNULL, MANDATORY TRUE);
CREATE PROPERTY ReadsWrites.accessTypes LINKLIST DatabaseAccessEnum;
CREATE INDEX ReadsWrites_in_out_idx ON ReadsWrites (in, out) NOTUNIQUE;
CREATE INDEX ReadsWrites_out_idx ON ReadsWrites (out) NOTUNIQUE;

CREATE CLASS None EXTENDS Reference;
CREATE PROPERTY Module.out_None LINKLIST None;
CREATE PROPERTY Module.in_None LINKLIST None;
CREATE PROPERTY None.out LINK Module (NOTNULL, MANDATORY TRUE);
CREATE PROPERTY None.in LINK Module (NOTNULL, MANDATORY TRUE);
CREATE INDEX None_in_out_idx ON None (in, out) NOTUNIQUE;
CREATE INDEX None_out_idx ON None (out) NOTUNIQUE;

CREATE CLASS HasAnnotation EXTENDS Reference;
-- use list to avoid log message in OVertexDelegate: Error detaching edge: the vertex collection field is of type null
CREATE PROPERTY Annotation.in_HasAnnotation LINKLIST HasAnnotation (MIN 0, MAX 1);
CREATE PROPERTY Module.out_HasAnnotation LINKLIST HasAnnotation;
CREATE PROPERTY HasAnnotation.out LINK Module (NOTNULL, MANDATORY TRUE);
CREATE PROPERTY HasAnnotation.in LINK Annotation (NOTNULL, MANDATORY TRUE);
CREATE INDEX HasAnnotation_out_idx ON HasAnnotation (out) NOTUNIQUE;

CREATE CLASS HasTaxonomy EXTENDS Reference;
CREATE PROPERTY Taxonomy.in_HasTaxonomy LINKLIST HasTaxonomy;
CREATE PROPERTY Module.out_HasTaxonomy LINKLIST HasTaxonomy;
CREATE PROPERTY HasTaxonomy.out LINK Module (NOTNULL, MANDATORY TRUE);
CREATE PROPERTY HasTaxonomy.in LINK Taxonomy (NOTNULL, MANDATORY TRUE);
CREATE INDEX HasTaxonomy_composite_idx ON HasTaxonomy (out, in) UNIQUE;
CREATE INDEX HasTaxonomy_out_idx ON HasTaxonomy (out) NOTUNIQUE;

CREATE CLASS HasDataDictionaryEntry EXTENDS Reference;
-- use list to avoid log message in OVertexDelegate: Error detaching edge: the vertex collection field is of type null
CREATE PROPERTY DataDictionaryEntry.in_HasDataDictionaryEntry LINKLIST HasDataDictionaryEntry (MIN 0, MAX 1);
CREATE PROPERTY Module.out_HasDataDictionaryEntry LINKLIST HasDataDictionaryEntry;
CREATE PROPERTY HasDataDictionaryEntry.out LINK Module (NOTNULL, MANDATORY TRUE);
CREATE PROPERTY HasDataDictionaryEntry.in LINK DataDictionaryEntry (NOTNULL, MANDATORY TRUE);
CREATE INDEX HasDataDictionaryEntry_in_out_idx ON HasDataDictionaryEntry (in, out) UNIQUE;
CREATE INDEX HasDataDictionaryEntry_out_idx ON HasDataDictionaryEntry (out) NOTUNIQUE;

--################################################################################################
-- AST
--################################################################################################
CREATE CLASS AstNode EXTENDS V;
CREATE PROPERTY AstNode.type STRING (NOTNULL, MANDATORY TRUE);
CREATE PROPERTY AstNode.module LINK Module (NOTNULL, MANDATORY TRUE);
CREATE PROPERTY AstNode.moduleLocation LINK ModuleLocation (NOTNULL, MANDATORY TRUE);
CREATE PROPERTY AstNode.inclusionCalleeModule LINK Module;
CREATE PROPERTY AstNode.parent LINK AstNode;
CREATE PROPERTY AstNode.children LINKLIST AstNode;
CREATE PROPERTY AstNode.nextSibling LINK AstNode;
CREATE PROPERTY AstNode.previousSibling LINK AstNode;
CREATE PROPERTY AstNode.properties EMBEDDEDMAP STRING;
CREATE PROPERTY AstNode.superTypes EMBEDDEDSET STRING;
CREATE INDEX AstNode_type_idx ON AstNode (type) NOTUNIQUE;
CREATE INDEX AstNode_module_idx ON AstNode (module) NOTUNIQUE;

-- Relates the Module to the root of the AST
CREATE CLASS HasAst EXTENDS E;
CREATE PROPERTY HasAst.out LINK Module (NOTNULL, MANDATORY TRUE);
CREATE PROPERTY HasAst.in LINK AstNode (NOTNULL, MANDATORY TRUE);
CREATE PROPERTY Module.out_HasAst LINKLIST HasAst;
-- use list to avoid log message in OVertexDelegate: Error detaching edge: the vertex collection field is of type null
CREATE PROPERTY AstNode.in_HasAst LINKLIST HasAst (MIN 0, MAX 1);

-- Unites edges that describe relationships between AstNode vertices
CREATE CLASS AstEdge Extends E ABSTRACT;
  
-- Relates References to Field Definitions
CREATE CLASS RefersTo EXTENDS AstEdge;
CREATE PROPERTY RefersTo.out LINK AstNode (NOTNULL, MANDATORY TRUE);
CREATE PROPERTY RefersTo.in LINK AstNode (NOTNULL, MANDATORY TRUE);
-- use list to avoid log message in OVertexDelegate: Error detaching edge: the vertex collection field is of type null
CREATE PROPERTY AstNode.out_RefersTo LINKLIST RefersTo (MIN 0, MAX 1);
CREATE PROPERTY AstNode.in_RefersTo LINKList RefersTo;
  
-- Relates Field Definitions to other Field Definitions they redefine
CREATE CLASS Redefines EXTENDS AstEdge;
CREATE PROPERTY Redefines.out LINK AstNode (NOTNULL, MANDATORY TRUE);
CREATE PROPERTY Redefines.in LINK AstNode (NOTNULL, MANDATORY TRUE);
-- use list to avoid log message in OVertexDelegate: Error detaching edge: the vertex collection field is of type null
CREATE PROPERTY AstNode.out_Redefines LINKLIST Redefines (MIN 0, MAX 1);
CREATE PROPERTY AstNode.in_Redefines LINKLIST Redefines;

--################################################################################################
-- Control Flow / Data Flow	
--################################################################################################
-- When we traverse a control flow graph, we often don't care whether the node may/must flow control.
-- Referring to them both as "CfgEdge" will be more succinct
CREATE CLASS CfgEdge EXTENDS E ABSTRACT;
CREATE CLASS FlowsControl EXTENDS CfgEdge;
CREATE CLASS MayFlowControl EXTENDS CfgEdge;
 
-- If we ever need another DFG edge than this we can introduce a DfgEdge superclass
CREATE CLASS FlowsData EXTENDS E;
 
CREATE CLASS OutputSink EXTENDS V;
CREATE PROPERTY OutputSink.sink STRING (NOTNULL, MANDATORY TRUE);
INSERT INTO OutputSink set sink="sysout";
 
CREATE CLASS InputTap EXTENDS V;
CREATE PROPERTY InputTap.tap STRING (NOTNULL, MANDATORY TRUE);
INSERT INTO InputTap set tap="initialValues";
 
CREATE CLASS EntryPoint EXTENDS V;
 
CREATE CLASS ExitPoint EXTENDS V ABSTRACT;
CREATE CLASS ReturnPoint EXTENDS ExitPoint;
CREATE CLASS HaltPoint EXTENDS ExitPoint;
 
-- Control-flow related properties are nullable and not mandatory since we may have modules without a CFG
CREATE PROPERTY Module.entryPointLink LINK EntryPoint;
CREATE PROPERTY Module.returnPointLink LINK ReturnPoint;
CREATE PROPERTY Module.haltPointLink LINK HaltPoint;

--################################################################################################
-- oAuth token classes for spring security
--################################################################################################
CREATE CLASS oauth_client_details ;
CREATE PROPERTY oauth_client_details.client_id String;
CREATE PROPERTY oauth_client_details.resource_ids String;
CREATE PROPERTY oauth_client_details.client_secret String;
CREATE PROPERTY oauth_client_details.scope String;
CREATE PROPERTY oauth_client_details.authorized_grant_types String;
CREATE PROPERTY oauth_client_details.web_server_redirect_uri String;
CREATE PROPERTY oauth_client_details.authorities String;
CREATE PROPERTY oauth_client_details.access_token_validity INTEGER;
CREATE PROPERTY oauth_client_details.refresh_token_validity INTEGER;
CREATE PROPERTY oauth_client_details.additional_information String;
CREATE PROPERTY oauth_client_details.autoapprove String;
CREATE INDEX oauth_client_details_client_id_idx ON oauth_client_details (client_id) UNIQUE;

CREATE CLASS oauth_access_token ;
CREATE PROPERTY oauth_access_token.token_id String;
CREATE PROPERTY oauth_access_token.token Binary;
CREATE PROPERTY oauth_access_token.authentication_id String;
CREATE PROPERTY oauth_access_token.user_name String;
CREATE PROPERTY oauth_access_token.client_id String;
CREATE PROPERTY oauth_access_token.authentication Binary;
CREATE PROPERTY oauth_access_token.refresh_token String;
CREATE INDEX oauth_access_token_authentication_id_idx ON oauth_access_token (authentication_id) UNIQUE;
CREATE INDEX oauth_access_token_token_id_idx ON oauth_access_token (token_id) UNIQUE;

CREATE CLASS oauth_refresh_token ;
CREATE PROPERTY oauth_refresh_token.token_id String;
CREATE PROPERTY oauth_refresh_token.token Binary;
CREATE PROPERTY oauth_refresh_token.authentication Binary ;

CREATE CLASS oauth_client_token ;
CREATE PROPERTY oauth_client_token.token_id String;
CREATE PROPERTY oauth_client_token.token Binary;
CREATE PROPERTY oauth_client_token.authentication_id String;
CREATE PROPERTY oauth_client_token.user_name String;
CREATE PROPERTY oauth_client_token.client_id String;

CREATE CLASS oauth_code ;
CREATE PROPERTY oauth_code.code String ;
CREATE PROPERTY oauth_code.authentication Binary;

CREATE CLASS oauth_approvals ;
CREATE PROPERTY oauth_approvals.userId String;
CREATE PROPERTY oauth_approvals.clientId String;
CREATE PROPERTY oauth_approvals.scope String;
CREATE PROPERTY oauth_approvals.status String;
CREATE PROPERTY oauth_approvals.expiresAt String;
CREATE PROPERTY oauth_approvals.lastModifiedAt String;

CREATE CLASS SqlHistory EXTENDS V;
CREATE PROPERTY SqlHistory.timestamp Datetime (NOTNULL, MANDATORY TRUE);
CREATE PROPERTY SqlHistory.command STRING (NOTNULL, MANDATORY TRUE);
CREATE PROPERTY SqlHistory.executedByUserLink LINK User (NOTNULL, MANDATORY TRUE);
ALTER CLASS SqlHistory STRICTMODE TRUE;

UPDATE ObjectType SET technologyLink=(SELECT FROM TechnologyEnum WHERE name="COBOL"), typeLink=(SELECT FROM TypeEnum WHERE name="COPYBOOK"), storageLink=(SELECT FROM StorageEnum WHERE name="FILE"), originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT") UPSERT WHERE technologyLink=(SELECT FROM TechnologyEnum WHERE name="COBOL") AND typeLink=(SELECT FROM TypeEnum WHERE name="COPYBOOK") AND storageLink=(SELECT FROM StorageEnum WHERE name="FILE") AND originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT");
UPDATE ObjectType SET technologyLink=(SELECT FROM TechnologyEnum WHERE name="UNKNOWN"), typeLink=(SELECT FROM TypeEnum WHERE name="UNKNOWN"), storageLink=(SELECT FROM StorageEnum WHERE name="UNDEFINED"), originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT") UPSERT WHERE technologyLink=(SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink=(SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink=(SELECT FROM StorageEnum WHERE name="UNDEFINED") AND originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT");
--################################################################################################
-- Removed Utility Modules in project 0 as they are migrated to project specific modules as part of WMIN-6693
--################################################################################################
-- UPDATE Module SET id=sequence('Module_Sequence').next(), name="ABEND", info={"comments":"","prefix":"ABE","description":"Abnormally terminate a task","packageName":"Enterprise COBOL for z/OS","taxonomy":"Coding Syntax","infoOrigin":"https://www.ibm.com/support/knowledgecenter/SS6SG3_3.4.0/com.ibm.entcobol.doc_3.4/igym1mst.pdf","supported":"false"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="ABEND" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), name="ADRDSSU", info={"comments":"Backup and Recovery - use OS facilities","prefix":"ADR","description":"ADRDSSU is a direct access storage device data and space management utility. ADRDSSU is usually used to backup, restore datasets or volume.","packageName":"DF/DSS (Data Facility/Data Set Service) shipped with IBM OS/390.","taxonomy":"Database Management","infoOrigin":"https://www.scribd.com/doc/24221679/ADRDSSU-Introduction and\nhttps://www.ibm.com/support/knowledgecenter/SS6SG3_3.4.0/com.ibm.entcobol.doc_3.4/igym1mst.pdf","supported":"false"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="ADRDSSU" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), name="AIBTDLI", info={"comments":"","prefix":"AIB","description":"AIBTDLI (and AIB in general) is the interface between COBOL applications and IMS. The AIB is really to a block for controlling the interface and the AIBTDLIÂ  call is to establish connection with remote IMS. When using the AIBTDLI Interface, one must specify the program communication block (PCB) requested for the call by placing the PCB name (as defined by PSBGEN) in the resource name field of the AIB.","packageName":"IBM IMS - Specifically the Application Interface Block (AIB)","taxonomy":"None","infoOrigin":"http://ibmmainframes.com/about8436.html, https://www.ibm.com/support/knowledgecenter/en/SSEPH2_13.1.0/com.ibm.ims13.doc.apg/ims_aibtdliinterface.htm","supported":"false"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="AIBTDLI" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), name="AOPBATCH", info={"comments":"Execute Unix Commands in MVS JCLs","prefix":"AOP","description":"AOPBATCH is the utility program that Infoprint Server provides. It lets you use MVSâ„¢ job control language (JCL) to run a program that resides in a z/OSÂ® UNIX file","packageName":"z/OS Infoprint Server","taxonomy":"Batch Interface Program","infoOrigin":"https://www.ibm.com/support/knowledgecenter/en/SSLTBW_2.1.0/com.ibm.zos.v2r1.aops000/appbat.htm","supported":"false"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="AOPBATCH" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), name="ARCPEDIT", info={"comments":"Backup and Recovery - use OS facilities","prefix":"ARC","description":"The ARCPEDIT program is to analyze, edit, and print the selected log records produced by the ARCPRLOG program.","packageName":"IBM DFSMShsm utility","taxonomy":"Storage Management","infoOrigin":"https://www.ibm.com/support/knowledgecenter/en/SSLTBW_2.2.0/com.ibm.zos.v2r2.arcf000/prntlog.htm","supported":"false"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="ARCPEDIT" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), name="ASMA90", info={"comments":"","prefix":"ASM","description":"IBM Assembler","packageName":"None","taxonomy":"None","infoOrigin":"None","supported":"false"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="ASMA90" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), name="BPXBATCH", info={"comments":"see AOPBATCH","prefix":"BPX","description":"BPXBATCH is a utility that you can use to run shell commands or executable files through the batch facility.","packageName":"IBM z/OS  UNIX System","taxonomy":"Batch Interface Program","infoOrigin":"https://www.ibm.com/support/knowledgecenter/en/SSLTBW_2.1.0/com.ibm.zos.v2r1.bpxa400/xbat.htm","supported":"false"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="BPXBATCH" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), name="CBLTDI", info={"comments":"","prefix":"CBL","description":"IBM IMS","packageName":"IBM IMS","taxonomy":"None","infoOrigin":"None","supported":"false"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="CBLTDI" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), name="CBLTDLI", info={"comments":"","prefix":"CBL","description":"This is an IMS command for establishing the connection from COBOL to DLI. CBLTDLI can be read as COBOL to DLI and is used from making calls to the IMS database","packageName":"IBM IMS","taxonomy":"None","infoOrigin":"https://www.tutorialspoint.com/ims_db/ims_db_dli_functions.htm, http://ibmmainframes.com/about31076.html","supported":"false"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="CBLTDLI" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), name="CEEISEC", info={"comments":"","prefix":"CEE","description":"CEEISEC converts binary integers that represent year, month, day, hour, minute, second, and millisecond to a number that represents the number of seconds since 00:00:00 14 October 1582.","packageName":"IBM Date and Time Callable Services","taxonomy":"None","infoOrigin":"https://www.ibm.com/support/knowledgecenter/en/SS6SGM_4.1.1/com.ibm.cobol.aix.doc/PGandLR/ref/rpsrv23.html","supported":"false"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="CEEISEC" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), name="CHAR", info={"comments":"","prefix":"CHA","description":"The CHAR function returns a fixed-length character string representation of the argument.","packageName":"DB/2 for Z/OS","taxonomy":"Database Management","infoOrigin":"https://www.ibm.com/support/knowledgecenter/en/SSEPEK_10.0.0/sqlref/src/tpc/db2z_bif_char.html","supported":"false"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="CHAR" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), name="CMALLC", info={"comments":"","prefix":"CMA","description":"CMALLC is a C function to establish a conversation with a partner program specified by a TP_name and \"Partner_LU_name\" characteristics in C. This function is only for mapped conversations.","packageName":"z/Transaction Processing Facility Enterprise Edition","taxonomy":"None","infoOrigin":"https://www.ibm.com/support/knowledgecenter/en/SSB23S_1.1.0.14/gtpc2/cpp_cmallc.html","supported":"false"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="CMALLC" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), name="CMCFM", info={"comments":"","prefix":"CMC","description":"A program uses the Confirm (CMCFM) call to send a confirmation request to its partner program and then to wait for a reply. If all is well, the partner responds with a Confirmed (CMCFMD) call. These two calls working together can help programs synchronize their processing of data. The program can call the Confirm routine only when the conversation associated with the specified \"\"conversation_ID\"\" has its sync_level characteristic set to \"\"CM_CONFIRM\"\" or \"\"CM_SYNC_POINT\"\"","packageName":"z/VM","taxonomy":"None","infoOrigin":"https://www.ibm.com/support/knowledgecenter/SSB27U_6.2.0/com.ibm.zvm.v620.hcpb5/cmcfm.htm","supported":"false"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="CMCFM" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), name="CMDEAL", info={"comments":"","prefix":"CMD","description":"The Deallocate (CMDEAL) call ends a conversation with a partner program. When the Deallocate call completes successfully, the conversation_ID is no longer assigned","packageName":"z/VM","taxonomy":"None","infoOrigin":"https://www.ibm.com/support/knowledgecenter/SSB27U_6.2.0/com.ibm.zvm.v620.hcpb5/cdeal.htm","supported":"false"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="CMDEAL" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), name="CMECS", info={"comments":"","prefix":"CME","description":"The Extract_Conversation_State (CMECS) call returns a value indicating the local programs current conversation state for a given conversation. This routine is meant for use when a program is working with protected conversations (conversations with the sync_level characteristic set to CM_SYNC_POINT). It is also useful for debugging and error handling.","packageName":"z/VM","taxonomy":"None","infoOrigin":"https://www.ibm.com/support/knowledgecenter/SSB27U_6.2.0/com.ibm.zvm.v620.hcpb5/cmecs.htm","supported":"false"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="CMECS" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), name="CMFLUS", info={"comments":"","prefix":"CMF","description":"This function allows an application to transmit any data from the local Logical Units (LUs) data buffer, including an ATTACH from the cmallc function","packageName":"z/Transaction Processing Facility Enterprise Edition","taxonomy":"None","infoOrigin":"https://www.ibm.com/support/knowledgecenter/en/SSB23S_1.1.0.14/gtpc2/cpp_cmflus.html","supported":"false"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="CMFLUS" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), name="CMINIT", info={"comments":"","prefix":"CMI","description":"The purpose of the Initialize_Conversation (CMINIT) routine is to handle the first step in the process initiating a conversation. Before communication can begin, we must initiate a conversation and there are two steps involved in initiating a CPI Communications conversation: initialization of conversation characteristics and allocation of the conversation. CMINIT takes care of the first","packageName":"z/VM","taxonomy":"None","infoOrigin":"https://www.ibm.com/support/knowledgecenter/SSB27U_6.2.0/com.ibm.zvm.v620.hcpb5/cinit.htm","supported":"false"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="CMINIT" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), name="CMPTR", info={"comments":"","prefix":"CMP","description":"The Prepare_To_Receive (CMPTR) call changes a conversation from Send to Receive state in preparation for receiving data. As a result of the Prepare_To_Receive call, the local Logical Units (LUs) send buffer may be flushed.. One advantage of the Prepare_To_Receive call is that the calling program is not held up waiting for the partner to respond with data or status, as would be the case with the Receive call.","packageName":"z/VM","taxonomy":"None","infoOrigin":"https://www.ibm.com/support/knowledgecenter/SSB27U_6.2.0/com.ibm.zvm.v620.hcpb5/cmptr.htm","supported":"false"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="CMPTR" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), name="CMQGMOV", info={"comments":"","prefix":"CMQ","description":"Get message options structure","packageName":"IBM MQ","taxonomy":"Code Translation/Interface","infoOrigin":"https://www.ibm.com/support/knowledgecenter/en/SSFKSJ_9.0.0/com.ibm.mq.ref.dev.doc/q093790_.htm","supported":"false"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="CMQGMOV" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), name="CMQMDV", info={"comments":"","prefix":"CMQ","description":"Message descriptor structure","packageName":"IBM MQ","taxonomy":"Code Translation/Interface","infoOrigin":"https://www.ibm.com/support/knowledgecenter/en/SSFKSJ_9.0.0/com.ibm.mq.ref.dev.doc/q093790_.htm","supported":"false"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="CMQMDV" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), name="CMQODV", info={"comments":"","prefix":"CMQ","description":"Object descriptor structure","packageName":"IBM MQ","taxonomy":"Code Translation/Interface","infoOrigin":"https://www.ibm.com/support/knowledgecenter/en/SSFKSJ_9.0.0/com.ibm.mq.ref.dev.doc/q093790_.htm","supported":"false"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="CMQODV" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), name="CMQPMOV", info={"comments":"","prefix":"CMQ","description":"Put message options structure","packageName":"IBM MQ","taxonomy":"Code Translation/Interface","infoOrigin":"https://www.ibm.com/support/knowledgecenter/en/SSFKSJ_9.0.0/com.ibm.mq.ref.dev.doc/q093790_.htm","supported":"false"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="CMQPMOV" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), name="CMQTMC2L", info={"comments":"","prefix":"CMQ","description":"Trigger message structure (character format) version 2","packageName":"IBM MQ","taxonomy":"Code Translation/Interface","infoOrigin":"https://www.ibm.com/support/knowledgecenter/en/SSFKSJ_9.0.0/com.ibm.mq.ref.dev.doc/q093790_.htm","supported":"false"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="CMQTMC2L" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), name="CMQV", info={"comments":"","prefix":"CMQ","description":"IBM MQ","packageName":"IBM MQ","taxonomy":"Code Translation/Interface","infoOrigin":"None","supported":"false"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="CMQV" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), name="CSQCOPEN", info={"comments":"","prefix":"CSQ","description":"Dynamic Call reference to MQ Stud Program for CICS","packageName":"IBM MQ","taxonomy":"Code Translation/Interface","infoOrigin":"https://www.ibm.com/support/knowledgecenter/SSFKSJ_7.1.0/com.ibm.mq.doc/fg16820_.htm","supported":"false"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="CSQCOPEN" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), name="CMRCV", info={"comments":"","prefix":"CMR","description":"The Receive (CMRCV) call receives information from an established conversation. The information received can be a data record, conversation status, or both.","packageName":"z/VM","taxonomy":"None","infoOrigin":"https://www.ibm.com/support/knowledgecenter/SSB27U_6.2.0/com.ibm.zvm.v620.hcpb5/crcv.htm","supported":"false"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="CMRCV" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), name="CMSCT", info={"comments":"","prefix":"CMS","description":"The Set_Conversation_Type (CMSCT) call specifies the conversation identifier of the desired conversation. This specifies the type of conversation to be allocated when CMALLC is issued","packageName":"Workload Simulator for z/OS and OS/390","taxonomy":"None","infoOrigin":"https://www.ibm.com/support/knowledgecenter/en/SSL28L_1.1.0/scriptguide/dcvl8mst275.html","supported":"false"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="CMSCT" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), name="CMSDT", info={"comments":"","prefix":"CMS","description":"The Set_Deallocate_Type (CMSDT) call sets the deallocate_type characteristic for a given conversation and overrides the value assigned with either the Initialize_Conversation (CMINIT) or Accept_Conversation (CMACCP) call.","packageName":"z/VM","taxonomy":"None","infoOrigin":"https://www.ibm.com/support/knowledgecenter/SSB27U_6.2.0/com.ibm.zvm.v620.hcpb5/hcsg7c0031.htm","supported":"false"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="CMSDT" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), name="CMSED", info={"comments":"","prefix":"CMS","description":"The Set_Error_Direction (CMSED) call sets the error_direction characteristic for a given conversation, overriding the value assigned by the Initialize_Conversation (CMINIT) or Accept_Conversation (CMACCP) call. A program should issue Set_Error_Direction before calling Send_Error (CMSERR) for a conversation in Send-Pending state. Send-Pending state arises when a Receive (CMRCV) call completes with both data and a conversation status of CM_SEND_RECEIVED. This call lets a program indicate to its partner whether the error is in the data just received, or is a local processing error","packageName":"z/VM","taxonomy":"None","infoOrigin":"https://www.ibm.com/support/knowledgecenter/en/SSB27U_6.4.0/com.ibm.zvm.v640.hcpb5/cmsed.htm","supported":"false"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="CMSED" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), name="CMSEND", info={"comments":"","prefix":"CMS","description":"The Send_Data (CMSEND) call sends up to 32767 bytes of data to the remote program. When issued during a mapped conversation (which we are using), this call sends one data record to the remote program. In this context, a data record is the contents of the buffer passed on the Send_Data call.","packageName":"z/VM","taxonomy":"None","infoOrigin":"https://www.ibm.com/support/knowledgecenter/SSB27U_6.2.0/com.ibm.zvm.v620.hcpb5/csend.htm. https://www.ibm.com/support/knowledgecenter/en/SSL28L_1.1.0/scriptguide/dcvl8mst278.html","supported":"false"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="CMSEND" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), name="CMSERR", info={"comments":"","prefix":"CMS","description":"A program can use the Send_Error (CMSERR) call to inform its partner that it detected an error during a conversation. If the conversation is in Send state when Send_Error is issued, the call forces the LU to flush its send buffer. Upon completion of a successful Send_Error call, the local program is in Send state and the remote program is in Receive state. A program can use this routine to truncate an incomplete logical record it is sending, to inform the remote program of an error detected in received data, or to reject a confirmation request. In some situations, it may be useful to follow this call with a Send_Data (CMSEND) call to provide further information to the partner","packageName":"z/VM","taxonomy":"None","infoOrigin":"https://www.ibm.com/support/knowledgecenter/SSB27U_6.2.0/com.ibm.zvm.v620.hcpb5/cmserr.htm","supported":"false"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="CMSERR" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), name="CMSF", info={"comments":"","prefix":"CMS","description":"The Set_Fill (CMSF) call sets the fill characteristic for a given conversation, overriding the value assigned with the Initialize_Conversation (CMINIT) or Accept_Conversation (CMACCP) calls. The Set_Fill call is valid only for basic conversations. Use the Set_Fill call to specify that you want to receive data independent of its logical record format. In other words, each logical record will not necessarily be presented to your program as it arrives, but rather will be buffered. The amount of data received will be equal to or less than the length specified by the requested_length parameter of the Receive call","packageName":"z/VM","taxonomy":"None","infoOrigin":"https://www.ibm.com/support/knowledgecenter/en/SSB27U_6.4.0/com.ibm.zvm.v640.hcpb5/cmsf.htm","supported":"false"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="CMSF" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), name="CMSLD", info={"comments":"","prefix":"CMS","description":"The Set_Log_Data (CMSLD) call sets the log_data and log_data_length characteristics for a given conversation, overriding the values assigned with the Initialize_Conversation (CMINIT) or Accept_Conversation (CMACCP) calls. The Set_Log_Data call is valid only for basic conversations. Log data is program-unique error information that is to be logged. The data supplied by the program is any data the program wants to have logged, such as information that can help identify the cause of the error. The data is sent on a Send_Error call or a Deallocate call when deallocate_type is CM_DEALLOCATE_ABEND","packageName":"z/VM","taxonomy":"None","infoOrigin":"https://www.ibm.com/support/knowledgecenter/SSB27U_6.2.0/com.ibm.zvm.v620.hcpb5/cmsld.htm","supported":"false"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="CMSLD" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), name="CMSMN", info={"comments":"","prefix":"CMS","description":"The Set_Mode_Name (CMSMN) call sets the mode_name and mode_name_length characteristics for a given conversation, overriding the value originally obtained from side information using the sym_dest_name. The mode name designates network properties for the session to be allocated for the conversation. Network properties include, for example, the class of service to be used and whether data is to be encrypted. The mode name is needed only when allocating a conversation to a partner in the SNA network. Only the program initiating a conversation (using the Initialize_Conversation (CMINIT) call) can issue Set_Mode_Name. The call must be issued while in Initialize state, prior to the Allocate (CMALLC) call for the specified conversation","packageName":"z/VM","taxonomy":"None","infoOrigin":"https://www.ibm.com/support/knowledgecenter/SSB27U_6.2.0/com.ibm.zvm.v620.hcpb5/cmsmn.htm, https://www.ibm.com/support/knowledgecenter/SSL28L_1.1.0/scriptguide/dcvl8mst283.html","supported":"false"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="CMSMN" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), name="CMSPLN", info={"comments":"","prefix":"CMS","description":"The Set_Partner_LU_Name (CMSPLN) call sets the partner_LU_name characteristic for a given conversation, overriding the partner LU name obtained from side information using the sym_dest_name. This call does not change any data in the side information, and the new partner_LU_name value will be known only for this particular conversation. Only the program initializing a conversation (using the Initialize_Conversation (CMINIT) call) can issue Set_Partner_LU_Name. The call must be issued while in Initialize state, prior to the Allocate (CMALLC) call for the specified conversation. Partner location information is usually kept in side information. This call might be included if a particular program did not want to use the partner_LU_name acquired from side information, or if the program wanted to ensure that the partner_LU_name it used would not be affected by a change to the :luname. tag in the communications directory. Explicitly setting the partner_LU_name may decrease the portability of the program to other SAA platforms because VM uses a space as a delimiter rather than a period.","packageName":"z/VM","taxonomy":"None","infoOrigin":"https://www.ibm.com/support/knowledgecenter/SSB27U_6.2.0/com.ibm.zvm.v620.hcpb5/cmspln.htm","supported":"false"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="CMSPLN" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), name="CMSPTR", info={"comments":"","prefix":"CMS","description":"The Set_Prepare_To_Receive_Type (CMSPTR) call sets the prepare_to_receive_type conversation characteristic for a given conversation and overrides the value assigned by the Initialize_Conversation (CMINIT) or Accept_Conversation (CMACCP) call","packageName":"z/VM","taxonomy":"None","infoOrigin":"https://www.ibm.com/support/knowledgecenter/SSB27U_6.2.0/com.ibm.zvm.v620.hcpb5/cmsptr.htm","supported":"false"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="CMSPTR" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), name="CMSRC", info={"comments":"","prefix":"CMS","description":"This function sets the return_control characteristic. It overrides the default value set by the cminit function","packageName":"z/Transaction Processing Facility Enterprise Edition","taxonomy":"None","infoOrigin":"https://www.ibm.com/support/knowledgecenter/SSB23S_1.1.0.14/gtpc2/cpp_cmsrc.html","supported":"false"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="CMSRC" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), name="CSQCPUT", info={"comments":"","prefix":"CSQ","description":"Dynamic Call reference to MQ Stud Program for CICS","packageName":"IBM MQ","taxonomy":"Code Translation/Interface","infoOrigin":"https://www.ibm.com/support/knowledgecenter/SSFKSJ_7.1.0/com.ibm.mq.doc/fg16820_.htm","supported":"false"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="CSQCPUT" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), name="CMSSL", info={"comments":"","prefix":"CMS","description":"The Set_Sync_Level (CMSSL) call sets the sync_level characteristic for a given conversation and overrides the sync level assigned with the Initialize_Conversation (CMINIT) call. The sync_level characteristic specifies the level of synchronization processing between the two programs. It determines whether the programs support no synchronization, confirmation-level synchronization, or sync-point-level synchronization. Only a program initiating a conversation (using the Initialize_Conversation call) can issue the Set_Sync_Level call. The call must be issued while in Initialize state, prior to the Allocate (CMALLC) call for the specified conversation.","packageName":"z/VM","taxonomy":"None","infoOrigin":"https://www.ibm.com/support/knowledgecenter/en/SSB27U_6.3.0/com.ibm.zvm.v630.hcpb5/cmssl.htm","supported":"false"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="CMSSL" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), name="CMSST", info={"comments":"","prefix":"CMS","description":"The Set_Send_Type (CMSST) call sets the send_type characteristic for a given conversation and overrides the value that was assigned with the Initialize_Conversation (CMINIT) or Accept_Conversation (CMALLC) call.","packageName":"z/VM","taxonomy":"None","infoOrigin":"https://www.ibm.com/support/knowledgecenter/SSB27U_6.2.0/com.ibm.zvm.v620.hcpb5/cmsst.htm","supported":"false"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="CMSST" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), name="CMSTPN", info={"comments":"","prefix":"CMS","description":"The Set_TP_Name (CMSTPN) call sets the TP_name characteristic for a given conversation, overriding the transaction program (TP) name obtained from side information using the sym_dest_name. Executing this call does not change the transaction program name provided with the :tpn. tag in the communications directory. It only changes the value of the TP_name characteristic for this particular conversation. Only the program initializing a conversation (using the Initialize_Conversation (CMINIT) call) can issue Set_TP_Name. The call must be issued while in Initialize state, prior to the Allocate (CMALLC) call for the specified conversation.","packageName":"z/VM","taxonomy":"None","infoOrigin":"https://www.ibm.com/support/knowledgecenter/SSB27U_6.3.0/com.ibm.zvm.v630.hcpb5/cmstpn.htm","supported":"false"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="CMSTPN" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), name="CMTRTS", info={"comments":"","prefix":"CMT","description":"The Test_Request_To_Send_Received call (function name cmtrts) determines whether a request-to-send notification has been received from the partner program","packageName":"Workload Simulator for z/OS and OS/390","taxonomy":"None","infoOrigin":"https://msdn.microsoft.com/en-us/library/dd769020(v=bts.10).aspx, https://www.ibm.com/support/knowledgecenter/SSL28L_1.1.0/scriptguide/cpie.html","supported":"false"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="CMTRTS" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), name="CSQBBACK", info={"comments":"","prefix":"CSQ","description":"Batch (Non-RRS) dynamic call name for MQI call (MQBACK)","packageName":"IBM MQ","taxonomy":"Code Translation/Interface","infoOrigin":"https://www.ibm.com/support/knowledgecenter/SSFKSJ_7.1.0/com.ibm.mq.doc/fg16820_.htm","supported":"false"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="CSQBBACK" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), name="CSQBCLOS", info={"comments":"","prefix":"CSQ","description":"Batch (non-RRS) dynamic call name","packageName":"IBM MQ","taxonomy":"Code Translation/Interface","infoOrigin":"https://www.ibm.com/support/knowledgecenter/SSFKSJ_7.1.0/com.ibm.mq.doc/fg16820_.htm","supported":"false"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="CSQBCLOS" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), name="CSQBCOMM", info={"comments":"","prefix":"CSQ","description":"Batch (non-RRS) dynamic call name","packageName":"IBM MQ","taxonomy":"Code Translation/Interface","infoOrigin":"https://www.ibm.com/support/knowledgecenter/SSFKSJ_7.1.0/com.ibm.mq.doc/fg16820_.htm","supported":"false"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="CSQBCOMM" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), name="CSQBCONN", info={"comments":"","prefix":"CSQ","description":"Batch (non-RRS) dynamic call name","packageName":"IBM MQ","taxonomy":"Code Translation/Interface","infoOrigin":"https://www.ibm.com/support/knowledgecenter/SSFKSJ_7.1.0/com.ibm.mq.doc/fg16820_.htm","supported":"false"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="CSQBCONN" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), name="CSQBDISC", info={"comments":"","prefix":"CSQ","description":"Batch (non-RRS) dynamic call name","packageName":"IBM MQ","taxonomy":"Code Translation/Interface","infoOrigin":"https://www.ibm.com/support/knowledgecenter/SSFKSJ_7.1.0/com.ibm.mq.doc/fg16820_.htm","supported":"false"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="CSQBDISC" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), name="CSQBGET", info={"comments":"","prefix":"CSQ","description":"Batch (Non-RRS) dynamic call name for MQI call (MQGET)","packageName":"IBM MQ","taxonomy":"Code Translation/Interface","infoOrigin":"https://www.ibm.com/support/knowledgecenter/SSFKSJ_7.1.0/com.ibm.mq.doc/fg16820_.htm","supported":"false"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="CSQBGET" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), name="CSQBINQ", info={"comments":"","prefix":"CSQ","description":"IBM MQ","packageName":"IBM MQ","taxonomy":"Code Translation/Interface","infoOrigin":"https://www.ibm.com/support/knowledgecenter/SSFKSJ_7.1.0/com.ibm.mq.doc/fg16820_.htm","supported":"false"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="CSQBINQ" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), name="CSQBOPEN", info={"comments":"","prefix":"CSQ","description":"Batch (non-RRS) dynamic call names","packageName":"IBM MQ","taxonomy":"Code Translation/Interface","infoOrigin":"https://www.ibm.com/support/knowledgecenter/SSFKSJ_7.1.0/com.ibm.mq.doc/fg16820_.htm","supported":"false"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="CSQBOPEN" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), name="CSQBPUT", info={"comments":"","prefix":"CSQ","description":"Batch (Non-RRS) dynamic call name for MQI call (MQPUT)","packageName":"IBM MQ","taxonomy":"Code Translation/Interface","infoOrigin":"https://www.ibm.com/support/knowledgecenter/SSFKSJ_7.1.0/com.ibm.mq.doc/fg16820_.htm","supported":"false"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="CSQBPUT" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), name="CSQBPUT1", info={"comments":"","prefix":"CSQ","description":"IBM MQ","packageName":"IBM MQ","taxonomy":"Code Translation/Interface","infoOrigin":"https://www.ibm.com/support/knowledgecenter/SSFKSJ_7.1.0/com.ibm.mq.doc/fg16820_.htm","supported":"false"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="CSQBPUT1" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), name="CSQCBACK", info={"comments":"","prefix":"CSQ","description":"Syncpoint backout before issuing BACKOUT to WebSphere MQ for z/OS. This is due to an explicit backout request from the application.","packageName":"IBM MQ","taxonomy":"CICS adapter trace","infoOrigin":"https://www.ibm.com/support/knowledgecenter/en//SSFKSJ_7.0.1/com.ibm.mq.csqzal.doc/fg16850_.htm","supported":"false"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="CSQCBACK" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), name="CSQCCLOS", info={"comments":"","prefix":"CSQ","description":"IBM MQ","packageName":"IBM MQ","taxonomy":"None","infoOrigin":"None","supported":"false"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="CSQCCLOS" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), name="CSQCCOMM", info={"comments":"","prefix":"CSQ","description":"Syncpoint backout before issuing BACKOUT to WebSphere MQ for z/OS. This is due to an explicit backout request from the application.","packageName":"IBM MQ","taxonomy":"CICS adapter trace","infoOrigin":"https://www.ibm.com/support/knowledgecenter/en//SSFKSJ_7.0.1/com.ibm.mq.csqzal.doc/fg16850_.htm","supported":"false"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="CSQCCOMM" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), name="CSQCCONN", info={"comments":"","prefix":"CSQ","description":"Dynamic Call reference to MQ Stud Program for CICS","packageName":"IBM MQ","taxonomy":"Code Translation/Interface","infoOrigin":"https://www.ibm.com/support/knowledgecenter/en/SSFKSJ_7.0.1/com.ibm.mq.csqzal.doc/fg16790_.htm","supported":"false"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="CSQCCONN" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), name="CSQCDISC", info={"comments":"","prefix":"CSQ","description":"Dynamic Call reference to MQ Stud Program for CICS","packageName":"IBM MQ","taxonomy":"Code Translation/Interface","infoOrigin":"https://www.ibm.com/support/knowledgecenter/SSFKSJ_7.1.0/com.ibm.mq.doc/fg16820_.htm","supported":"false"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="CSQCDISC" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), name="CSQCGET", info={"comments":"","prefix":"CSQ","description":"Dynamic Call reference to MQ Stud Program for CICS","packageName":"IBM MQ","taxonomy":"Code Translation/Interface","infoOrigin":"https://www.ibm.com/support/knowledgecenter/SSFKSJ_7.1.0/com.ibm.mq.doc/fg16820_.htm","supported":"false"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="CSQCGET" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), name="CSQCPUT1", info={"comments":"","prefix":"CSQ","description":"Dynamic Call reference to MQ Stud Program for CICS","packageName":"IBM MQ","taxonomy":"Code Translation/Interface","infoOrigin":"https://www.ibm.com/support/knowledgecenter/SSFKSJ_7.1.0/com.ibm.mq.doc/fg16820_.htm","supported":"false"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="CSQCPUT1" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), name="CSQUTIL", info={"comments":"","prefix":"CSQ","description":"None","packageName":"None","taxonomy":"None","infoOrigin":"None","supported":"false"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="CSQUTIL" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), name="ESP", info={"comments":"","prefix":"ESP","description":"None","packageName":"None","taxonomy":"Scheduler","infoOrigin":"None","supported":"false"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="ESP" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), name="DFHAID", info={"comments":"","prefix":"DFH","description":"The standard attention identifier list simplifies the testing of the contents of the EIBAID field after a Basic Mapping Support (BMS) or terminal control input operation.","packageName":"TXSeries for Multiplatforms (BMS)","taxonomy":"Code Testing","infoOrigin":"https://www.ibm.com/support/knowledgecenter/SSAL2T_9.1.0/com.ibm.cics.tx.doc/reference/r_attn_idntfr_consts_lst.html","supported":"false"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="DFHAID" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), name="DFHBMSCA", info={"comments":"","prefix":"DFH","description":"The standard list DFHBMSCA makes it simpler to provide field attributes and printer control characters.","packageName":"CICS Transaction","taxonomy":"Printing","infoOrigin":"https://www.ibm.com/support/knowledgecenter/SSGMCP_5.2.0/com.ibm.cics.ts.applicationprogramming.doc/topics/dfhp4_bmsconstants.html","supported":"false"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="DFHBMSCA" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), name="DFHEAP1$", info={"comments":"","prefix":"DFH","description":"IBM Assembler-Language translator for CICS","packageName":"None","taxonomy":"None","infoOrigin":"None","supported":"false"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="DFHEAP1$" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), name="DFHECP1$", info={"comments":"","prefix":"DFH","description":"IBM COBOL translator for CICS","packageName":"None","taxonomy":"None","infoOrigin":"None","supported":"false"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="DFHECP1$" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), name="DFHEIBLC", info={"comments":"","prefix":"DFH","description":"This new copybook is a lower case version of the existing DFHEIBLK copybook. It provides an interface between a COBOL application program and CICS","packageName":"CICS Interface","taxonomy":"Code Translation/Interface","infoOrigin":"https://www.ibm.com/support/knowledgecenter/en/SSGMCP_5.2.0/com.ibm.cics.ts.applicationprogramming.doc/topics/dfhp4b00137.html","supported":"false"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="DFHEIBLC" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), name="DFHJUP", info={"comments":"see $CRUTIL","prefix":"DFH","description":"DFHJUP processes CICS journal data in MVS system logger log streams. It can also process journal data in SMF data sets. You may use multiple input log streams or SMF data sets, and format the output for multiple output data sets.","packageName":"IBM  CICS utility programs","taxonomy":"Journaling","infoOrigin":"https://www.ibm.com/support/knowledgecenter/en/SSGMGV_3.1.0/com.ibm.cics.ts31.doc/dfha6/dfha67t.htm","supported":"false"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="DFHJUP" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), name="DFHSTUP", info={"comments":"see $CRUTIL","prefix":"DFH","description":"The statistics utility program, DFHSTUP, prepares and prints reports offline, using the CICS statistics data recorded on the MVS system management facilities (SMF) SYS1.MANx data sets.","packageName":"IBM CICS Statistics utility program","taxonomy":"Report Printing","infoOrigin":"https://www.ibm.com/support/knowledgecenter/en/SSGMCP_5.3.0/com.ibm.cics.ts.doc/dfha6/topics/dfha62i.html","supported":"false"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="DFHSTUP" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), name="DFHTCUDS", info={"comments":"","prefix":"DFH","description":"CICS","packageName":"CICS","taxonomy":"None","infoOrigin":"None","supported":"false"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="DFHTCUDS" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), name="DFHWBTDO", info={"comments":"","prefix":"DFH","description":"These files give language-specific information about the data types of the fields in the communication area (specifically the parameters for COBOL)","packageName":"CICS Analyzer programs; CICS\nTransaction Server for OS/390","taxonomy":"Communication/Business Logic Interface/Program Conversion","infoOrigin":"http://examples.oreilly.com/cics/CDROM/pdfs/cicsts/dfhtl00.pdf","supported":"false"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="DFHWBTDO" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), name="DFHWBUCO", info={"comments":"","prefix":"DFH","description":"These files give language-specific information about the data types of the fields in the communication area (specifically the constants for COBOL)","packageName":"CICS Analyzer programs; CICS\nTransaction Server for OS/390","taxonomy":"Communication/Business Logic Interface/Program Conversion","infoOrigin":"http://examples.oreilly.com/cics/CDROM/pdfs/cicsts/dfhtl00.pdf","supported":"false"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="DFHWBUCO" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), name="DFSORT", info={"comments":"","prefix":"DFS","description":"Sorts things","packageName":"None","taxonomy":"None","infoOrigin":"None","supported":"false"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="DFSORT" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), name="DGADBATC", info={"comments":"","prefix":"DGA","description":"This allows one to request Sterling Connect:Direct services in the batch environment","packageName":"Sterling Connect:Direct","taxonomy":"Batch Interface Program","infoOrigin":"https://www.ibm.com/support/knowledgecenter/en/SSFGBN_5.2.0/com.ibm.help.cdzos.user.doc/ZOS_Intro_Batch_Interface.html","supported":"false"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="DGADBATC" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), name="DMBATCH", info={"comments":"Use DMBATCH to PRINT AUTH FILE TO DISK, eg.","prefix":"DMB","description":"You request CONNECT:Direct services in the batch environment through the Batch Interface program DMBATCH. When you submit a job that contains the CONNECT:Direct commands as SYSIN input, DMBATCH reads the input stream and processes the requested functions. DMBATCH supports all CONNECT:Direct commands.","packageName":"Sterling Connect:Direct for z/OS","taxonomy":"Batch Interface Program","infoOrigin":"ftp://ftp.software.ibm.com/software/commerce/doc/mft/cdzos/50/CDzOSUserGuide.pdf","supported":"false"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="DMBATCH" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), name="DNSTIAR", info={"comments":"","prefix":"DNS","description":"It allows one to send SQL messages online to an application. DSNTIAR helps you to obtain a formatted form of the SQLCA and a text message that is based on the SQLCODE field of the SQLCA","packageName":"DB2 for z/OS","taxonomy":"Database Management","infoOrigin":"https://www.ibm.com/support/knowledgecenter/en/SSEPEK_11.0.0/apsg/src/tpc/db2z_dsntiar.html","supported":"false"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="DNSTIAR" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), name="DSNHPC", info={"comments":"","prefix":"DSN","description":"IBM DB2 Precompiler","packageName":"None","taxonomy":"None","infoOrigin":"None","supported":"false"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="DSNHPC" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), name="DSNTIAR", info={"comments":"","prefix":"DSN","description":"It allows one to send SQL messages online to an application.","packageName":"CICS SQLCA formatting routine. IBM-supplied SQLCODE message formatting procedure.","taxonomy":"None","infoOrigin":"None","supported":"false"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="DSNTIAR" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), name="DSNUTILB", info={"comments":"Use utiliies of DB/2 for Unix","prefix":"DSN","description":"A utility control program","packageName":"IBM DB2 for z/OS","taxonomy":"Utility Invocation","infoOrigin":"http://publib.boulder.ibm.com/cgi-bin/bookmgr/download/dsnugh14.pdf?ACTION=SAVE&DT=20030507154051","supported":"false"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="DSNUTILB" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), name="DSPURX00", info={"comments":"","prefix":"DSP","description":"Database Recovery Control utility (DSPURX00) - IBM","packageName":"None","taxonomy":"IBM Utility Program","infoOrigin":"https://www.ibm.com/support/knowledgecenter/en/SSEPH2_13.1.0/com.ibm.ims13.doc.sur/ims_dspurx00.htm","supported":"false"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="DSPURX00" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), name="EZACIC04", info={"comments":"","prefix":"EZA","description":"The EZACIC04 program is used to translate EBCDIC data to ASCII data.","packageName":"IBM","taxonomy":"Utility program","infoOrigin":"None","supported":"false"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="EZACIC04" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), name="EZACFSM1", info={"comments":"","prefix":"EZA","description":"EZACFSM1 reads an input file and writes to an output file, translating any symbols in the process.","packageName":"z/OS Communications Server: IP Configuration","taxonomy":"Utility program","infoOrigin":"https://www.ibm.com/support/knowledgecenter/SSLTBW_1.13.0/com.ibm.zos.r13.halz002/head6.htm","supported":"false"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="EZACFSM1" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), name="EDGHSKP", info={"comments":"Backup and Recovery - use OS facilities","prefix":"EDG","description":"DFSMSrmm utility EDGHSKP helps to perform inventory management. The default processing for EDGHSKP is to run all inventory management functions in sequence as described in EXEC parameters for EDGHSKP.","packageName":"IBM z/OS DFSMS Utility","taxonomy":"Utility program","infoOrigin":"https://www.ibm.com/support/knowledgecenter/en/SSLTBW_2.1.0/com.ibm.zos.v2r1.idarc00/hset.htm","supported":"false"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="EDGHSKP" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), name="EDGRPTD", info={"comments":"see EDGHSKP","prefix":"EDG","description":"The DFSMSrmm utility EDGRPTD produces reports from the extract data set created using the EDGHSKP utility.","packageName":"IBM z/OS DFSMSrmm Reporting","taxonomy":"Utility program","infoOrigin":"https://www.ibm.com/support/knowledgecenter/en/SSLTBW_2.1.0/com.ibm.zos.v2r1.idarr00/rdis.htm","supported":"false"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="EDGRPTD" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), name="EZACIC05", info={"comments":"","prefix":"EZA","description":"The EZACIC05 program is used to translate ASCII data to EBCDIC data. EBCDIC data is required by COBOL, PL/I, and assembly language programs.","packageName":"IBM z/OS","taxonomy":"Utility program","infoOrigin":"None","supported":"false"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="EZACIC05" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), name="EZACIC06", info={"comments":"","prefix":"EZA","description":"Translates bit-masks into character arrays and character arrays into bit-masks","packageName":"IBM","taxonomy":"Utility program","infoOrigin":"None","supported":"false"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="EZACIC06" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), name="EZACICAL", info={"comments":"","prefix":"EZA","description":"COBOL API provided with TCP/IP Version 2.2.1 for MVS","packageName":"Enterprise COBOL for z/OS","taxonomy":"None","infoOrigin":"None","supported":"false"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="EZACICAL" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), name="EZASOKET", info={"comments":"","prefix":"EZA","description":"One of the MVS major programming interfaces to TCP/IP. Micro Focus EZASOKET is designed to emulate, as closely as possible, the IBM implementation documented in SC31-8518-01, OS/390 SecureWay Communications Server: IP CICS Sockets Guide Version 2 Release 8 (1999). It also supports some, though not all, of the features introduced in the z/OS implementation documented in SC31-8807-02, z/OS Communications Server: IP CICS Sockets Guide Version 1 Release 5 (2004).","packageName":"Micro Focus","taxonomy":"None","infoOrigin":"None","supported":"false"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="EZASOKET" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), name="EZTPA00", info={"comments":"","prefix":"EZT","description":"Migration Utility EZTPA00 program","packageName":"IBM  z/OS","taxonomy":"Utility program","infoOrigin":"None","supported":"false"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="EZTPA00" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), name="FDRDSF", info={"comments":"","prefix":"FDR","description":"Fast Dump Restore (FDR). Utility to backup and restore disks and disk datasets. Dataset-level backup component called FDRDSF.","packageName":"IBM  z/OS","taxonomy":"Utility program","infoOrigin":"http://www.lookupmainframesoftware.com/soft_detail/dispsoft/656","supported":"false"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="FDRDSF" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), name="FTP", info={"comments":"already exists","prefix":"FTP","description":"FTP is usually run interactively by starting and entering commands from your terminal. You can also run FTP as a batch job, but you must supply the JCL file. You can use batch when you know what functions you want to perform, when you want a hardcopy of the results, or when you want to perform an FTP function many times.","packageName":"z/OS Communications Server","taxonomy":"None","infoOrigin":"None","supported":"true"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="FTP" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), name="GJTRMAIV", info={"comments":"Use OS facilities","prefix":"GJT","description":"utility which produces an output SYSPRINT file. The SYSPRINT file represents all applications that are ready and scheduled for the current date.","packageName":"IBM z/OS","taxonomy":"Utility program","infoOrigin":"None","supported":"false"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="GJTRMAIV" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), name="HCONFIG", info={"comments":"","prefix":"HCO","description":"Vendor Provided Solution - Health Care Operations","packageName":"Optum","taxonomy":"Anthem - Copybook","infoOrigin":"Anthem SME","supported":"false"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="HCONFIG" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), name="HPSRRC00", info={"comments":"","prefix":"HPS","description":"None","packageName":"None","taxonomy":"IMS - Utility","infoOrigin":"None","supported":"false"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="HPSRRC00" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), name="ICEGENER", info={"comments":"","prefix":"ICE","description":"ICEGENER is a DFSORT utility that can be used to replace IEBGENER. IEBGENER is a system utility","packageName":"IBM z/OS DFSORT","taxonomy":"Utility program","infoOrigin":"None","supported":"false"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="ICEGENER" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), name="ICEMAN", info={"comments":"","prefix":"ICE","description":"a multipurpose DFSORT utility that uses the capabilities of DFSORT to perform multiple operations on one or more data sets in a single step.","packageName":"IBM z/OS DFSORT","taxonomy":"Utility program","infoOrigin":"https://www.ibm.com/support/knowledgecenter/en/SSLTBW_2.1.0/com.ibm.zos.v2r1.iceg200/ice.htm","supported":"false"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="ICEMAN" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), name="ICETOOL", info={"comments":"partly existing","prefix":"ICE","description":"ICETOOL is a multipurpose DFSORT utility that uses the capabilities of DFSORT to perform multiple operations on one or more data sets in a single step.","packageName":"IBM z/OS DFSORT","taxonomy":"Utility program","infoOrigin":"None","supported":"true"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="ICETOOL" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), name="IDCAMS", info={"comments":"already exists","prefix":"IDC","description":"A utility used to create, delete, load, backup and print VSAM files. It is also used to create alternate indexes.","packageName":"z/OS RMF, DFSMS","taxonomy":"None","infoOrigin":"None","supported":"true"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="IDCAMS" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), name="IDIUTIL", info={"comments":"rough estimation","prefix":"IDI","description":"A number of different functions are required to help manage fault history files. The most obvious of these is the ability in a batch utility to delete a set of entries based on some criteria such as date, in order to keep the number of entries in the history file at a manageable level.\nSuch a utility program is provided with Fault Analyzer as a load module named IDIUTIL. It is a batch history file utility that can be used to perform history file management functions, such as listing and deleting history file fault entries.","packageName":"IBM z/OS Fault Analyzer","taxonomy":"None","infoOrigin":"None","supported":"false"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="IDIUTIL" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), name="IEBCOMPR", info={"comments":"","prefix":"IEB","description":"Compare records in sequential or partitioned data sets, or PDSEs","packageName":"IBM z/OS DFSMSdfp Utilities","taxonomy":"Utility program","infoOrigin":"https://www.ibm.com/support/knowledgecenter/en/SSLTBW_2.2.0/com.ibm.zos.v2r2.idau100/u1239.htm","supported":"true"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="IEBCOMPR" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), name="IEBCOPY", info={"comments":"already exists","prefix":"IEB","description":"IEBCOPY is a data set utility that is used to copy or merge members between one or more partitioned data sets, or partitioned data sets extended (PDSEs), in full or in part.","packageName":"IBM z/OS","taxonomy":"Utility program","infoOrigin":"None","supported":"true"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="IEBCOPY" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), name="IEBDG", info={"comments":"","prefix":"IEB","description":"The IEBDG utility provides a pattern of test data to be used as a programming debugging aid. This pattern of data can then be analyzed quickly for predictable results.","packageName":"IBM z/OS","taxonomy":"Utility program","infoOrigin":"None","supported":"false"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="IEBDG" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), name="IEBGENER", info={"comments":"already exists","prefix":"IEB","description":"The IEBGENER utility is a copy program that has been part of the operating system since the first release of OS/360. One of its many uses is to copy a sequential data set, a member of a partitioned data set (PDS) or PDSE, or a z/OS UNIX System Services (z/OS UNIX) file such as a HFS file.","packageName":"IBM z/OS","taxonomy":"Utility program","infoOrigin":"None","supported":"true"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="IEBGENER" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), name="ISPLINK", info={"comments":"","prefix":"ISP","description":"Invoking ISPF services with program functions","packageName":"IBM z/OS Security Server RACF Macros and Interfaces","taxonomy":"None","infoOrigin":"None","supported":"false"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="ISPLINK" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), name="IEBPTPCH", info={"comments":"","prefix":"IEB","description":"You can use IEBPTPCH to print or punch all, or selected portions, of a sequential or partitioned data set or PDSE. Data can also be printed or punched to disk or tape. IEBPTPCH can be used to print or punch: A sequential or partitioned data set or PDSE, in its entirety Selected members from a partitioned data set or PDSE Selected records from a sequential or partitioned data set or PDSE The directory of a partitioned data set or PDSE An edited version of a sequential or partitioned data set or PDSE A data set containing double-byte character set data","packageName":"IBM z/OS DFSMSdfp Utilities","taxonomy":"Utility program","infoOrigin":"None","supported":"false"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="IEBPTPCH" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), name="IEBUPDTE", info={"comments":"","prefix":"IEB","description":"You can use IEBUPDTE to create or modify sequential or partitioned data sets or PDSEs. However, the program can be used only with data sets containing fixed-length records of no more than 80 bytes. (It is used primarily for updating procedure, source, and macro libraries, such as those containing JCL.) You can use IEBUPDTE to perform these tasks: Incorporate IBM or your source language modifications into sequential or partitioned data sets, or PDSEs. Create and update data set libraries. Modify existing sequential data sets or members of partitioned data sets or PDSEs. Change the organization of a data set from sequential to partitioned or PDSE, or the reverse.","packageName":"IBM z/OS","taxonomy":"Utility program","infoOrigin":"None","supported":"false"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="IEBUPDTE" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), name="IEFBR14", info={"comments":"already exists","prefix":"IEF","description":"The utility program IEFBR14 performs no action other than return a completion code of 0; however, running this utility invokes other system components that perform useful tasks.","packageName":"OS/360, including z/OS.","taxonomy":"Utility program","infoOrigin":"None","supported":"true"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="IEFBR14" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), name="IEHINITT", info={"comments":"Backup and Recovery - use OS facilities","prefix":"IEH","description":"IEHINITT is a system utility used to place standard volume label sets onto any number of magnetic tapes mounted on one or more tape units. They can be ISO/ANSI Version 3 or ISO/ANSI Version 4 volume label sets written in ASCII (American Standard Code for Information Interchange) or IBM standard labels written in EBCDIC.","packageName":"z/OS DFSMSdfp Utilities","taxonomy":"Utility program","infoOrigin":"None","supported":"false"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="IEHINITT" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), name="IEHPROGM", info={"comments":"","prefix":"IEH","description":"IEHPROGM is a system utility that is used to modify system control data and to maintain data sets at an organizational level.","packageName":"z/OS DFSMSdfp Utilities","taxonomy":"Utility program","infoOrigin":"https://www.ibm.com/support/knowledgecenter/en/SSLTBW_2.2.0/com.ibm.zos.v2r2.idau100/iehprog.htm","supported":"true"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="IEHPROGM" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), name="IERRCO00", info={"comments":"","prefix":"IER","description":"None","packageName":"None","taxonomy":"None","infoOrigin":"None","supported":"false"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="IERRCO00" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), name="IEV90", info={"comments":"","prefix":"IEV","description":"IBM Assembler H","packageName":"None","taxonomy":"None","infoOrigin":"None","supported":"false"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="IEV90" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), name="IEWL", info={"comments":"","prefix":"IEW","description":"IBM Link Editor","packageName":"None","taxonomy":"None","infoOrigin":"None","supported":"false"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="IEWL" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), name="IFASMFDP", info={"comments":"Use OS facilities","prefix":"IFA","description":"When notified by the system that a full data set needs to be dumped, the operator uses the SMF data set dump program (IFASMFDP) to transfer the contents of the full SMF data set to another data set, and to reset the status of the dumped data set to empty so that SMF can use it again for recording data.","packageName":"z/OS MVS","taxonomy":"None","infoOrigin":"None","supported":"false"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="IFASMFDP" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), name="IGYCRCTL", info={"comments":"","prefix":"IGY","description":"IBM COBOL Compiler","packageName":"None","taxonomy":"None","infoOrigin":"None","supported":"false"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="IGYCRCTL" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), name="IKJEFT01", info={"comments":"already exists","prefix":"IKJ","description":"When a command completes with a non-zero return code, the program goes to the next command. When a command abends, the step ends with a condition code of 12 (XC).","packageName":"z/OS TSO/E","taxonomy":"None","infoOrigin":"None","supported":"true"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="IKJEFT01" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), name="IKJEFT1A", info={"comments":"","prefix":"IKJ","description":"If a command or program being processed by IKJEFT1A ends with a system abend, IKJEFT1A causes the job step to terminate with a X04C system completion code. IKJEFT1A also returns to the caller the completion code from the command or program in register 15.","packageName":"z/OS TSO/E","taxonomy":"None","infoOrigin":"None","supported":"false"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="IKJEFT1A" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), name="IKJEFT1B", info={"comments":"see IKJEFT1A","prefix":"IKJ","description":"If a command or program being processed by IKJEFT1B ends with a system or user abend, IKJEFT1B causes the job step to terminate with a X04C system completion code. IKJEFT1B also returns to the caller the completion code from the command or program in register 15.","packageName":"z/OS TSO/E","taxonomy":"None","infoOrigin":"None","supported":"false"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="IKJEFT1B" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), name="IRXJCL", info={"comments":"Execute Rexx procedures. There are Rexx executors for Unix. If Procs make use of MVS utilities and commands the procs will not be executable despite a Unix Rexx Interpreter! Without further insight in Rexx procs: Rough estimation!","prefix":"IRX","description":"Exec processing routines","packageName":"z/OS TSO","taxonomy":"None","infoOrigin":"None","supported":"false"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="IRXJCL" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), name="ISRSUPC", info={"comments":"Use OS facilities","prefix":"ISR","description":"SuperC (data set comparison) program module","packageName":"z/OS ISPF","taxonomy":"None","infoOrigin":"None","supported":"false"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="ISRSUPC" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), name="JVMLDM50", info={"comments":"","prefix":"JVM","description":"None","packageName":"None","taxonomy":"Batch Launcher","infoOrigin":"None","supported":"false"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="JVMLDM50" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), name="MQCLOSE", info={"comments":"","prefix":"MQC","description":"IBM MQ","packageName":"IBM MQ","taxonomy":"None","infoOrigin":"None","supported":"false"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="MQCLOSE" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), name="MQCMIT", info={"comments":"","prefix":"MQC","description":"The MQCMIT call indicates to the queue manager that the application has reached a sync point, and that all the message gets and puts that have occurred since the last sync point are to be made permanent","packageName":"IBM MQ","taxonomy":"None","infoOrigin":"None","supported":"false"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="MQCMIT" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), name="MQCONN", info={"comments":"","prefix":"MQC","description":"The MQCONN call connects an application program to a queue manager.","packageName":"IBM MQ","taxonomy":"None","infoOrigin":"None","supported":"false"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="MQCONN" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), name="MQDISC", info={"comments":"","prefix":"MQD","description":"When a program that has connected to a queue manager using the MQCONN or MQCONNX call has finished all interaction with the queue manager, it breaks the connection using the MQDISC","packageName":"IBM MQ","taxonomy":"None","infoOrigin":"None","supported":"false"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="MQDISC" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), name="MQGET", info={"comments":"","prefix":"MQG","description":"IBM MQ","packageName":"IBM MQ","taxonomy":"None","infoOrigin":"None","supported":"false"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="MQGET" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), name="MQOPEN", info={"comments":"","prefix":"MQO","description":"IBM MQ","packageName":"IBM MQ","taxonomy":"None","infoOrigin":"None","supported":"false"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="MQOPEN" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), name="MQPUT1", info={"comments":"","prefix":"MQP","description":"The MQPUT1 call puts one message on a queue, or distribution list, or to a topic","packageName":"IBM MQ","taxonomy":"None","infoOrigin":"https://www.ibm.com/support/knowledgecenter/en/SSFKSJ_7.5.0/com.ibm.mq.ref.dev.doc/q101890_.htm","supported":"false"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="MQPUT1" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), name="PKUNZIP", info={"comments":"Use OS facilities","prefix":"PKU","description":"Secure ZIP for z/OS","packageName":"PKWare","taxonomy":"None","infoOrigin":"https://www.pkware.com/zip-reader","supported":"false"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="PKUNZIP" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), name="PKZIP", info={"comments":"see PKUNZIP","prefix":"PKZ","description":"Secure ZIP for z/OS","packageName":"PKWare","taxonomy":"None","infoOrigin":"https://www.pkware.com/zip-reader","supported":"false"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="PKZIP" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), name="PUTENV", info={"comments":"","prefix":"PUT","description":"Change or add environment variable","packageName":"IBM I V5R4","taxonomy":"None","infoOrigin":"https://www.ibm.com/support/knowledgecenter/ssw_i5_54/apis/evputenv.htm","supported":"false"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="PUTENV" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), name="QEXRACF", info={"comments":"Use OS facilities","prefix":"QEX","description":"IBM Security QRadar uses scripts to audit events from IBM RACF installations. which are collected by using the Log File protocol","packageName":"IBM QRadar Security Intelligence Platform","taxonomy":"IBM QRadar on Cloud","infoOrigin":"https://www.ibm.com/support/knowledgecenter/SSKMKU/com.ibm.dsm.doc/t_DSM_guide_IBM_RACF_integrate.html","supported":"false"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="QEXRACF" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), name="SASSBSTR", info={"comments":"","prefix":"SAS","description":"Batch Terminal Interface program used to send command(s) to CA 7 in batch and receive the output from the command(s) in SYSPRINT format.","packageName":"CA 7","taxonomy":"None","infoOrigin":"https://www.ca.com/us/services-support/ca-support/ca-support-online/knowledge-base-articles.tec484518.html","supported":"false"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="SASSBSTR" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), name="SETRC", info={"comments":"","prefix":"SET","description":"Use the SETRC function to set the job step return code to a specified value.","packageName":"IBM File Manager for z/OS 13.1.0","taxonomy":"File Manager Functions","infoOrigin":"https://www.ibm.com/support/knowledgecenter/en/SSXJAV_13.1.0/com.ibm.filemanager.doc_13.1/base/funcsetrc.html","supported":"false"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="SETRC" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), name="SORT", info={"comments":"already exists. Estimated workload is for options not yet implemented","prefix":"SOR","description":"DB2 Tool that provides high-speed utility sort processing for data that is stored in DB2 for z/OS databases.","packageName":"DB2","taxonomy":"None","infoOrigin":"https://www.ibm.com/support/knowledgecenter/en/SSLJYE_2.1.0/topics/cnkucon_overview.html","supported":"true"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="SORT" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), name="SQLCA", info={"comments":"","prefix":"SQL","description":"","packageName":"Embedded SQL/SQLCA (Communications Area)","taxonomy":"None","infoOrigin":"None","supported":"false"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="COBOL") AND typeLink IN (SELECT FROM TypeEnum WHERE name="COPYBOOK") AND storageLink IN (SELECT FROM StorageEnum WHERE name="FILE") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="SQLCA" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), name="SQLDA", info={"comments":"","prefix":"SQL","description":"An SQLDA is a set of variables that is used for execution of the SQL DESCRIBE statement, and it may optionally be used by the PREPARE, OPEN, CALL, FETCH, and EXECUTE statements.","packageName":"IBM Database","taxonomy":"None","infoOrigin":"None","supported":"false"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="SQLDA" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), name="SYNCGENR", info={"comments":"","prefix":"SYN","description":"SYNCGENR module will intercept calls to IEBGENER and determine whether the particular copy application should be processed by SyncSort.","packageName":"BetterGener Utility Program","taxonomy":"IBM Utility Program","infoOrigin":"None","supported":"false"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="SYNCGENR" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), name="MQPUT", info={"comments":"","prefix":"MQ","description":"https://www.ibm.com/support/knowledgecenter/en/SSB23S_1.1.0.14/gtpc2/cpp_mqput.html","packageName":"","taxonomy":"","infoOrigin":"Google","supported":"false"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="MQPUT" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), name="WTO", info={"comments":"","prefix":"WTO","description":"Write to Operator.","packageName":"IBM","taxonomy":"None","infoOrigin":"https://www.ibm.com/support/knowledgecenter/en/SSLTBW_2.1.0/com.ibm.zos.v2r1.iata600/iat2n2_The_MVS_WTO_and_WTOR_Macros.htm","supported":"false"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="WTO" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), name="CMQDLHV", info={"comments":"","prefix":"CBL","description":"http://www.mqseries.net/manuals/intercommunication/csqzae067a.htm","packageName":"","taxonomy":"","infoOrigin":"Google","supported":"false"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="CMQDLHV" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), name="MQINQ", info={"comments":"","prefix":"MQ","description":"https://www.ibm.com/support/knowledgecenter/en/SSB23S_1.1.0.13/gtpc2/cpp_mqinq.html","packageName":"","taxonomy":"","infoOrigin":"Google","supported":"false"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="MQINQ" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), name="CSDFILDE", info={"comments":"","prefix":"CSD","description":"Encryption Services batch programs CSDFILEN and CSDFILDE can make use of a symmetric key that is randomly generated to protect System z format data.","packageName":"","taxonomy":"","infoOrigin":"https://www.ibm.com/support/knowledgecenter/en/SSLTBW_2.2.0/com.ibm.zos.v2r2.csde100/csde10017.htm","supported":"false"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="CSDFILDE" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), name="CSDFILEN", info={"comments":"","prefix":"CSD","description":"Encryption Services batch programs CSDFILEN and CSDFILDE can make use of a symmetric key that is randomly generated to protect System z format data.","packageName":"","taxonomy":"","infoOrigin":"https://www.ibm.com/support/knowledgecenter/en/SSLTBW_2.2.0/com.ibm.zos.v2r2.csde100/csde10017.htm","supported":"false"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="CSDFILEN" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), name="ARCINBAK", info={"comments":"","prefix":"ARC","description":"You can use the ARCINBAK program to make a quick backup that can be used in a later step (of the same job).","packageName":"","taxonomy":"","infoOrigin":"https://www.ibm.com/support/knowledgecenter/en/SSLTBW_2.3.0/com.ibm.zos.v2r3.arcf000/inbak.htm","supported":"false"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="ARCINBAK" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), name="EQQDELDS", info={"comments":"","prefix":"EQQ","description":"EQQDELDS/EQQCLEAN tries to load the EQQUXCAT exit. If the exit module is successfully loaded, EQQDELDS/EQQCLEAN calls it before executing the catalog action for each involved data set.","packageName":"","taxonomy":"","infoOrigin":"https://www.ibm.com/support/knowledgecenter/en/SSRULV_9.3.0/com.ibm.tivoli.itws.doc_9.3/zos/src_cust/eqqc1EQQDELDS.htm","supported":"false"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="EQQDELDS" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), name="DFHTIOA", info={"comments":"","prefix":"DFH","description":"TIOA Terminal input/output area","packageName":"","taxonomy":"","infoOrigin":"https://www.ibm.com/support/knowledgecenter/en/SSGMCP_4.2.0/com.ibm.cics.ts.doc/dfhs4/DFHTIOAK.html","supported":"false"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="DFHTIOA" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), name="DFHURLDS", info={"comments":"","prefix":"DFH","description":"URL - User supplied route list entry","packageName":"","taxonomy":"","infoOrigin":"https://www.ibm.com/support/knowledgecenter/en/SSGMCP_5.4.0/reference/data-areas/DFHURLKS.html","supported":"false"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="DFHURLDS" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), name="DFHXCALL", info={"comments":"","prefix":"DFH","description":"EXEC-level API macro. Invoked by the CICS® translator when processing EXCI EXEC-level requests.","packageName":"","taxonomy":"","infoOrigin":"https://www.ibm.com/support/knowledgecenter/en/SSGMCP_5.1.0/com.ibm.cics.ts.doc/dfhs3/topics/dfhs3c00346.html","supported":"false"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="DFHXCALL" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), name="DFHXCDMP", info={"comments":"","prefix":"DFH","description":"dump services. Calls the CICS SVC to issue SDUMP macro requests, to take an SDUMP of the EXCI address space.","packageName":"","taxonomy":"","infoOrigin":"https://www.ibm.com/support/knowledgecenter/en/SSGMCP_5.1.0/com.ibm.cics.ts.doc/dfhs3/topics/dfhs3c00346.html","supported":"false"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="DFHXCDMP" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), name="DFHXCSTB", info={"comments":"","prefix":"DFH","description":"stub link-edited with applications that want to use EXCI.","packageName":"","taxonomy":"","infoOrigin":"https://www.ibm.com/support/knowledgecenter/en/SSGMCP_5.1.0/com.ibm.cics.ts.doc/dfhs3/topics/dfhs3c00346.html","supported":"false"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="DFHXCSTB" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), name="DFHXCEIP", info={"comments":"","prefix":"DFH","description":"EXEC-level API handler. The main EXCI module that processes EXCI EXEC-level requests.","packageName":"","taxonomy":"","infoOrigin":"https://www.ibm.com/support/knowledgecenter/en/SSGMCP_5.1.0/com.ibm.cics.ts.doc/dfhs3/topics/dfhs3c00346.html","supported":"false"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="DFHXCEIP" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), name="DFHXCO", info={"comments":"","prefix":"DFH","description":"options macro for generating the DFHXCOPT options table.","packageName":"","taxonomy":"","infoOrigin":"https://www.ibm.com/support/knowledgecenter/en/SSGMCP_5.1.0/com.ibm.cics.ts.doc/dfhs3/topics/dfhs3c00346.html","supported":"false"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="DFHXCO" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), name="DFHXCOPT", info={"comments":"","prefix":"DFH","description":"options table to customize the EXCI environment.","packageName":"","taxonomy":"","infoOrigin":"https://www.ibm.com/support/knowledgecenter/en/SSGMCP_5.1.0/com.ibm.cics.ts.doc/dfhs3/topics/dfhs3c00346.html","supported":"false"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="DFHXCOPT" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), name="DFHXCPLD", info={"comments":"","prefix":"DFH","description":"Assembler-language parameter list definitions. Copybook defining the parameters for use with the EXCI APIs.","packageName":"","taxonomy":"","infoOrigin":"https://www.ibm.com/support/knowledgecenter/en/SSGMCP_5.1.0/com.ibm.cics.ts.doc/dfhs3/topics/dfhs3c00346.html","supported":"false"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="DFHXCPLD" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), name="DFHXCPLH", info={"comments":"","prefix":"DFH","description":"C parameter list definitions. Copybook defining the parameters for use with the EXCI APIs.","packageName":"","taxonomy":"","infoOrigin":"https://www.ibm.com/support/knowledgecenter/en/SSGMCP_5.1.0/com.ibm.cics.ts.doc/dfhs3/topics/dfhs3c00346.html","supported":"false"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="DFHXCPLH" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), name="DFHXCPLL", info={"comments":"","prefix":"DFH","description":"PL/I parameter list definitions. Copybook defining the parameters for use with the EXCI APIs.","packageName":"","taxonomy":"","infoOrigin":"https://www.ibm.com/support/knowledgecenter/en/SSGMCP_5.1.0/com.ibm.cics.ts.doc/dfhs3/topics/dfhs3c00346.html","supported":"false"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="DFHXCPLL" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), name="DFHXCPLO", info={"comments":"","prefix":"DFH","description":"COBOL parameter list definitions. Copybook defining the parameters for use with the EXCI APIs.","packageName":"","taxonomy":"","infoOrigin":"https://www.ibm.com/support/knowledgecenter/en/SSGMCP_5.1.0/com.ibm.cics.ts.doc/dfhs3/topics/dfhs3c00346.html","supported":"false"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="DFHXCPLO" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), name="DFHXCPRH", info={"comments":"","prefix":"DFH","description":"program request handler The main EXCI module that processes EXCI CALL-level requests.","packageName":"","taxonomy":"","infoOrigin":"https://www.ibm.com/support/knowledgecenter/en/SSGMCP_5.1.0/com.ibm.cics.ts.doc/dfhs3/topics/dfhs3c00346.html","supported":"false"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="DFHXCPRH" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), name="DFHXCRCD", info={"comments":"","prefix":"DFH","description":"Assembler-language return code definitions. Copybook defining the return codes for use with the EXCI APIs.","packageName":"","taxonomy":"","infoOrigin":"https://www.ibm.com/support/knowledgecenter/en/SSGMCP_5.1.0/com.ibm.cics.ts.doc/dfhs3/topics/dfhs3c00346.html","supported":"false"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="DFHXCRCD" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), name="DFHXCRCH", info={"comments":"","prefix":"DFH","description":"C return code definitions. Copybook defining the return codes for use with the EXCI APIs.","packageName":"","taxonomy":"","infoOrigin":"https://www.ibm.com/support/knowledgecenter/en/SSGMCP_5.1.0/com.ibm.cics.ts.doc/dfhs3/topics/dfhs3c00346.html","supported":"false"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="DFHXCRCH" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), name="DFHXCRCL", info={"comments":"","prefix":"DFH","description":"PL/I return code definitions. Copybook defining the return codes for use with the EXCI APIs.","packageName":"","taxonomy":"","infoOrigin":"https://www.ibm.com/support/knowledgecenter/en/SSGMCP_5.1.0/com.ibm.cics.ts.doc/dfhs3/topics/dfhs3c00346.html","supported":"false"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="DFHXCRCL" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), name="DFHXCRCO", info={"comments":"","prefix":"DFH","description":"COBOL return code definitions. Copybook defining the return codes for use with the EXCI APIs.","packageName":"","taxonomy":"","infoOrigin":"https://www.ibm.com/support/knowledgecenter/en/SSGMCP_5.1.0/com.ibm.cics.ts.doc/dfhs3/topics/dfhs3c00346.html","supported":"false"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="DFHXCRCO" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), name="DFHXCSVC", info={"comments":"","prefix":"DFH","description":"SVC services. Invoked by the CICS SVC to issue an SDUMP macro to take an SDUMP of the EXCI address space.","packageName":"","taxonomy":"","infoOrigin":"https://www.ibm.com/support/knowledgecenter/en/SSGMCP_5.1.0/com.ibm.cics.ts.doc/dfhs3/topics/dfhs3c00346.html","supported":"false"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="DFHXCSVC" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), name="DFHXCTAB", info={"comments":"","prefix":"DFH","description":"language table. Copybook defining the syntax of the EXCI EXEC language for use by the CICS translator.","packageName":"","taxonomy":"","infoOrigin":"https://www.ibm.com/support/knowledgecenter/en/SSGMCP_5.1.0/com.ibm.cics.ts.doc/dfhs3/topics/dfhs3c00346.html","supported":"false"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="DFHXCTAB" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), name="DFHXCTRA", info={"comments":"","prefix":"DFH","description":"global trap program. The EXCI equivalent of the DFHTRAP module, providing the service with ability to collect extra diagnostic information.","packageName":"","taxonomy":"","infoOrigin":"https://www.ibm.com/support/knowledgecenter/en/SSGMCP_5.1.0/com.ibm.cics.ts.doc/dfhs3/topics/dfhs3c00346.html","supported":"false"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="DFHXCTRA" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), name="DFHXCTRD", info={"comments":"","prefix":"DFH","description":"local trap parameter list definition. Defines the parameter list passed to DFHXCTRA and all EXCI trace points used by DFHXCTRA.","packageName":"","taxonomy":"","infoOrigin":"https://www.ibm.com/support/knowledgecenter/en/SSGMCP_5.1.0/com.ibm.cics.ts.doc/dfhs3/topics/dfhs3c00346.html","supported":"false"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="DFHXCTRD" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), name="DFHXCTRP", info={"comments":"","prefix":"DFH","description":"trace services. Writes EXCI trace entries to the EXCI internal trace table.","packageName":"","taxonomy":"","infoOrigin":"https://www.ibm.com/support/knowledgecenter/en/SSGMCP_5.1.0/com.ibm.cics.ts.doc/dfhs3/topics/dfhs3c00346.html","supported":"false"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="DFHXCTRP" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), name="DFHXCTRI", info={"comments":"","prefix":"DFH","description":"trace initialization. Initializes EXCI trace services.","packageName":"","taxonomy":"","infoOrigin":"https://www.ibm.com/support/knowledgecenter/en/SSGMCP_5.1.0/com.ibm.cics.ts.doc/dfhs3/topics/dfhs3c00346.html","supported":"false"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="DFHXCTRI" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), name="DFHXCURM", info={"comments":"","prefix":"DFH","description":"User-replaceable program that allows the user to modify the applid of the CICS region to which the EXCI request is to be issued.","packageName":"","taxonomy":"","infoOrigin":"https://www.ibm.com/support/knowledgecenter/en/SSGMCP_5.1.0/com.ibm.cics.ts.doc/dfhs3/topics/dfhs3c00346.html","supported":"false"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="DFHXCURM" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), name="AERTDLI", info={"comments":"","prefix":"AER","description":"You can make database calls with AIBs in your ODBA applications using the AERTDLI interface.","packageName":"","taxonomy":"","infoOrigin":"https://www.ibm.com/support/knowledgecenter/en/SSEPH2_13.1.0/com.ibm.ims13.doc.apg/ims_imsdbaertldi.htm","supported":"false"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="AERTDLI" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), name="CEE3ABD", info={"comments":"","prefix":"CEE","description":"Terminate enclave with an abend","packageName":"","taxonomy":"","infoOrigin":"https://www.ibm.com/support/knowledgecenter/en/SSLTBW_2.1.0/com.ibm.zos.v2r1.ceea300/cee3abd.htm","supported":"false"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="CEE3ABD" AND projectLink.id=0;

--################################################################################################
-- oAuth entries for the admin API-KEY
--################################################################################################
INSERT INTO oauth_client_details SET access_token_validity=315576000, scope="read,write,trust", authorized_grant_types="password,authorization_code,refresh_token,implicit", client_secret="$2a$10$dINn2BnRsWXXEy6twwwTU.LVXjLOVpUP72F3Lg6QCFoqwlEtP14Wq", client_id="mining-plugin-client", refresh_token_validity=31536000;
INSERT INTO oauth_access_token SET refresh_token="127b3057047d635d26db807a27104f1d", token_id="afb57190e161ce727007f212353793ed", user_name="admin", authentication_id="9aee0eded85b3b39cdb7807b76652eb8", client_id="mining-plugin-client", token="rO0ABXNyAENvcmcuc3ByaW5nZnJhbWV3b3JrLnNlY3VyaXR5Lm9hdXRoMi5jb21tb24uRGVmYXVsdE9BdXRoMkFjY2Vzc1Rva2VuDLKeNhsk+s4CAAZMABVhZGRpdGlvbmFsSW5mb3JtYXRpb250AA9MamF2YS91dGlsL01hcDtMAApleHBpcmF0aW9udAAQTGphdmEvdXRpbC9EYXRlO0wADHJlZnJlc2hUb2tlbnQAP0xvcmcvc3ByaW5nZnJhbWV3b3JrL3NlY3VyaXR5L29hdXRoMi9jb21tb24vT0F1dGgyUmVmcmVzaFRva2VuO0wABXNjb3BldAAPTGphdmEvdXRpbC9TZXQ7TAAJdG9rZW5UeXBldAASTGphdmEvbGFuZy9TdHJpbmc7TAAFdmFsdWVxAH4ABXhwc3IAHmphdmEudXRpbC5Db2xsZWN0aW9ucyRFbXB0eU1hcFk2FIVa3OfQAgAAeHBzcgAOamF2YS51dGlsLkRhdGVoaoEBS1l0GQMAAHhwdwgAAAFxq+jJUXhzcgBMb3JnLnNwcmluZ2ZyYW1ld29yay5zZWN1cml0eS5vYXV0aDIuY29tbW9uLkRlZmF1bHRFeHBpcmluZ09BdXRoMlJlZnJlc2hUb2tlbi/fR2Od0Mm3AgABTAAKZXhwaXJhdGlvbnEAfgACeHIARG9yZy5zcHJpbmdmcmFtZXdvcmsuc2VjdXJpdHkub2F1dGgyLmNvbW1vbi5EZWZhdWx0T0F1dGgyUmVmcmVzaFRva2Vuc+EOCmNU1F4CAAFMAAV2YWx1ZXEAfgAFeHB0ACQ1MzE5NTI1OC0yZTlkLTQ0MTItOTg4ZS00OTJmMjZiZjBiZThzcQB+AAl3CAAAAXGr6MlKeHNyACVqYXZhLnV0aWwuQ29sbGVjdGlvbnMkVW5tb2RpZmlhYmxlU2V0gB2S0Y+bgFUCAAB4cgAsamF2YS51dGlsLkNvbGxlY3Rpb25zJFVubW9kaWZpYWJsZUNvbGxlY3Rpb24ZQgCAy173HgIAAUwAAWN0ABZMamF2YS91dGlsL0NvbGxlY3Rpb247eHBzcgAXamF2YS51dGlsLkxpbmtlZEhhc2hTZXTYbNdald0qHgIAAHhyABFqYXZhLnV0aWwuSGFzaFNldLpEhZWWuLc0AwAAeHB3DAAAAAQ/QAAAAAAAA3QABHJlYWR0AAV3cml0ZXQABXRydXN0eHQABmJlYXJlcnQAJGM4OTYwYzdhLTZkZjUtNGY2MC04ZjE4LTI0OTI2OGQ5YTU4MQ==", authentication="rO0ABXNyAEFvcmcuc3ByaW5nZnJhbWV3b3JrLnNlY3VyaXR5Lm9hdXRoMi5wcm92aWRlci5PQXV0aDJBdXRoZW50aWNhdGlvbr1ACwIWYlITAgACTAANc3RvcmVkUmVxdWVzdHQAPExvcmcvc3ByaW5nZnJhbWV3b3JrL3NlY3VyaXR5L29hdXRoMi9wcm92aWRlci9PQXV0aDJSZXF1ZXN0O0wAEnVzZXJBdXRoZW50aWNhdGlvbnQAMkxvcmcvc3ByaW5nZnJhbWV3b3JrL3NlY3VyaXR5L2NvcmUvQXV0aGVudGljYXRpb247eHIAR29yZy5zcHJpbmdmcmFtZXdvcmsuc2VjdXJpdHkuYXV0aGVudGljYXRpb24uQWJzdHJhY3RBdXRoZW50aWNhdGlvblRva2Vu06oofm5HZA4CAANaAA1hdXRoZW50aWNhdGVkTAALYXV0aG9yaXRpZXN0ABZMamF2YS91dGlsL0NvbGxlY3Rpb247TAAHZGV0YWlsc3QAEkxqYXZhL2xhbmcvT2JqZWN0O3hwAHNyACZqYXZhLnV0aWwuQ29sbGVjdGlvbnMkVW5tb2RpZmlhYmxlTGlzdPwPJTG17I4QAgABTAAEbGlzdHQAEExqYXZhL3V0aWwvTGlzdDt4cgAsamF2YS51dGlsLkNvbGxlY3Rpb25zJFVubW9kaWZpYWJsZUNvbGxlY3Rpb24ZQgCAy173HgIAAUwAAWNxAH4ABHhwc3IAE2phdmEudXRpbC5BcnJheUxpc3R4gdIdmcdhnQMAAUkABHNpemV4cAAAAAF3BAAAAAFzcgBCb3JnLnNwcmluZ2ZyYW1ld29yay5zZWN1cml0eS5jb3JlLmF1dGhvcml0eS5TaW1wbGVHcmFudGVkQXV0aG9yaXR5AAAAAAAAAf4CAAFMAARyb2xldAASTGphdmEvbGFuZy9TdHJpbmc7eHB0AAlST0xFX1VTRVJ4cQB+AAxwc3IAOm9yZy5zcHJpbmdmcmFtZXdvcmsuc2VjdXJpdHkub2F1dGgyLnByb3ZpZGVyLk9BdXRoMlJlcXVlc3QAAAAAAAAAAQIAB1oACGFwcHJvdmVkTAALYXV0aG9yaXRpZXNxAH4ABEwACmV4dGVuc2lvbnN0AA9MamF2YS91dGlsL01hcDtMAAtyZWRpcmVjdFVyaXEAfgAOTAAHcmVmcmVzaHQAO0xvcmcvc3ByaW5nZnJhbWV3b3JrL3NlY3VyaXR5L29hdXRoMi9wcm92aWRlci9Ub2tlblJlcXVlc3Q7TAALcmVzb3VyY2VJZHN0AA9MamF2YS91dGlsL1NldDtMAA1yZXNwb25zZVR5cGVzcQB+ABR4cgA4b3JnLnNwcmluZ2ZyYW1ld29yay5zZWN1cml0eS5vYXV0aDIucHJvdmlkZXIuQmFzZVJlcXVlc3Q2KHo+o3FpvQIAA0wACGNsaWVudElkcQB+AA5MABFyZXF1ZXN0UGFyYW1ldGVyc3EAfgASTAAFc2NvcGVxAH4AFHhwdAAUbWluaW5nLXBsdWdpbi1jbGllbnRzcgAlamF2YS51dGlsLkNvbGxlY3Rpb25zJFVubW9kaWZpYWJsZU1hcPGlqP509QdCAgABTAABbXEAfgASeHBzcgARamF2YS51dGlsLkhhc2hNYXAFB9rBwxZg0QMAAkYACmxvYWRGYWN0b3JJAAl0aHJlc2hvbGR4cD9AAAAAAAADdwgAAAAEAAAAAnQACmdyYW50X3R5cGV0AAhwYXNzd29yZHQACHVzZXJuYW1ldAAFYWRtaW54c3IAJWphdmEudXRpbC5Db2xsZWN0aW9ucyRVbm1vZGlmaWFibGVTZXSAHZLRj5uAVQIAAHhxAH4ACXNyABdqYXZhLnV0aWwuTGlua2VkSGFzaFNldNhs11qV3SoeAgAAeHIAEWphdmEudXRpbC5IYXNoU2V0ukSFlZa4tzQDAAB4cHcMAAAAED9AAAAAAAADdAAEcmVhZHQABXdyaXRldAAFdHJ1c3R4AXNxAH4AI3cMAAAAED9AAAAAAAAAeHNxAH4AGj9AAAAAAAAAdwgAAAAQAAAAAHhwcHNxAH4AI3cMAAAAED9AAAAAAAAAeHNxAH4AI3cMAAAAED9AAAAAAAAAeHNyAE9vcmcuc3ByaW5nZnJhbWV3b3JrLnNlY3VyaXR5LmF1dGhlbnRpY2F0aW9uLlVzZXJuYW1lUGFzc3dvcmRBdXRoZW50aWNhdGlvblRva2VuAAAAAAAAAf4CAAJMAAtjcmVkZW50aWFsc3EAfgAFTAAJcHJpbmNpcGFscQB+AAV4cQB+AAMBc3EAfgAHc3EAfgALAAAAAXcEAAAAAXEAfgAPeHEAfgAvc3IAF2phdmEudXRpbC5MaW5rZWRIYXNoTWFwNMBOXBBswPsCAAFaAAthY2Nlc3NPcmRlcnhxAH4AGj9AAAAAAAAGdwgAAAAIAAAAAnEAfgAccQB+AB1xAH4AHnEAfgAfeABwc3IAMm9yZy5zcHJpbmdmcmFtZXdvcmsuc2VjdXJpdHkuY29yZS51c2VyZGV0YWlscy5Vc2VyAAAAAAAAAf4CAAdaABFhY2NvdW50Tm9uRXhwaXJlZFoAEGFjY291bnROb25Mb2NrZWRaABVjcmVkZW50aWFsc05vbkV4cGlyZWRaAAdlbmFibGVkTAALYXV0aG9yaXRpZXNxAH4AFEwACHBhc3N3b3JkcQB+AA5MAAh1c2VybmFtZXEAfgAOeHABAQEBc3EAfgAgc3IAEWphdmEudXRpbC5UcmVlU2V03ZhQk5Xth1sDAAB4cHNyAEZvcmcuc3ByaW5nZnJhbWV3b3JrLnNlY3VyaXR5LmNvcmUudXNlcmRldGFpbHMuVXNlciRBdXRob3JpdHlDb21wYXJhdG9yAAAAAAAAAf4CAAB4cHcEAAAAAXEAfgAPeHB0AAVhZG1pbg==";
