--################################################################################################
-- Removed Utility Modules in project 0 as they are migrated to project specific modules as part of WMIN-6693
--################################################################################################

-- UPDATE Module SET id=sequence('Module_Sequence').next(), uid=-1, name="AIBTDLI", info={"comments":"","prefix":"AIB","description":"AIBTDLI (and AIB in general) is the interface between applications and IMS. The AIB controls the interface and the AIBTDLI call is to establish connection with IMS. When using the AIBTDLI Interface, one must specify the program communication block (PCB) requested for the call by placing the PCB name (as defined by PSBGEN) in the resource name field of the AIB.","taxonomy":"None","packageName":"IBM IMS - Specifically the Application Interface Block (AIB)","infoOrigin":"http://ibmmainframes.com/about8436.html, https://www.ibm.com/support/knowledgecenter/en/SSEPH2_13.1.0/com.ibm.ims13.doc.apg/ims_aibtdliinterface.htm","supported":"false"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="AIBTDLI" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), uid=-1, name="CBLTDLI", info={"comments":"","prefix":"CBL","description":"CBLTDLI is the interface between COBOL applications and IMS. CBLTDLI can be read as COBOL to DLI and is used for making calls to IMS transaction or database services","taxonomy":"None","packageName":"IBM IMS","infoOrigin":"https://www.tutorialspoint.com/ims_db/ims_db_dli_functions.htm, http://ibmmainframes.com/about31076.html","supported":"false"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="CBLTDLI" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), uid=-1, name="PLITDLI", info={"comments":"","prefix":"PLI","description":"PLITDLI is the interface between PL/I applications and IMS. PLITDLI can be read as PL/I to DLI and is used for making calls to the IMS transaction or database services","taxonomy":"None","packageName":"IBM IMS","infoOrigin":"https://www.ibm.com/docs/en/ims/13.1.0?topic=db-application-programming-pli","supported":"false"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="PLITDLI" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), uid=-1, name="CEETDLI", info={"comments":"","prefix":"CEE","description":"CEETDLI is a generic interface between applications and IMS. It can be used in combination with an AIB or PCB for calls to the IMS transaction or database services","taxonomy":"None","packageName":"IBM IMS","infoOrigin":"https://www.ibm.com/docs/en/zos/2.3.0?topic=services-ceetdliinvoke-ims","supported":"false"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="CEETDLI" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), uid=-1, name="CTDLI", info={"comments":"","prefix":"C","description":"CTDLI is the interface between C/C++ applications and IMS. CTDLI can be read as C to DLI and is used for making calls to the IMS transaction or database services","taxonomy":"None","packageName":"IBM IMS","infoOrigin":"https://www.ibm.com/docs/en/ims/15.1.0?topic=tm-application-programming-c-language","supported":"false"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="CTDLI" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), uid=-1, name="ASMTDLI", info={"comments":"","prefix":"ASM","description":"ASMTDLI is the interface between Assembler applications and IMS. ASMTDLI can be read as Assembler to DLI and is used for making calls to the IMS transaction or database services","taxonomy":"None","packageName":"IBM IMS","infoOrigin":"https://www.ibm.com/docs/en/ims/15.1.0?topic=tm-application-programming-assembler-language","supported":"false"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="ASMTDLI" AND projectLink.id=0;
-- UPDATE Module SET id=sequence('Module_Sequence').next(), uid=-1, name="DFSURGL0", info={"comments":"","prefix":"DFS","description":"DFSURGL0 is an IMS DB utility used to reload databases.","taxonomy":"Utility","packageName":"IBM IMS","infoOrigin":"https://www.ibm.com/docs/en/ims/14.1.0?topic=rcu-hd-reorganization-reload-utility-dfsurgl0","supported":"false","createDate":"2019-03-05T12:55:28.041-05:00"}, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="UNKNOWN") AND typeLink IN (SELECT FROM TypeEnum WHERE name="UNKNOWN") AND storageLink IN (SELECT FROM StorageEnum WHERE name="UNDEFINED") AND  originLink=(SELECT FROM OriginEnum WHERE name="ENVIRONMENT")), projectLink=(SELECT FROM Project WHERE id=0), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED") UPSERT WHERE name="DFSURGL0" AND projectLink.id=0;