<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>innowake.base</groupId>
		<artifactId>base-skeleton-spring-boot</artifactId>
		<version>2.1.0</version>
	</parent>

	<groupId>innowake.products.mining</groupId>
	<artifactId>mining-api-server</artifactId>
	<version>99.9.99-TRUNK-MINING-SNAPSHOT</version>
	<packaging>jar</packaging>

	<properties>
		<start-class>innowake.mining.server.MiningApiApplication</start-class>
		<!-- hazelcast is already provided through the dependency management of
			spring-boot. Therefore we have to override the version here to the newest
			one. -->
		<hazelcast.version>5.3.6</hazelcast.version>
		<ff4j.version>1.9</ff4j.version>
		<postgresql.version>42.5.0</postgresql.version>
		<!-- These are already provided through the dependency management of spring-boot,
			but the versions are not java 11 compatible. Therefore we override them to
			a newer version. -->
		<glassfish-jaxb.version>2.4.0-b180830.0438</glassfish-jaxb.version>
		<javax-jaxb.version>2.4.0-b180830.0359</javax-jaxb.version>
		<hppc.version>0.8.1</hppc.version>
		<maven-surefire-plugin.version>3.1.2</maven-surefire-plugin.version>
		<log4j2.version>2.17.1</log4j2.version>
		<springdoc.version>1.6.15</springdoc.version>
		<spring-graphql.version>1.0.3</spring-graphql.version>
		<tests-to-run></tests-to-run>
		<tests-not-to-run></tests-not-to-run>
		<mining-api-angular-client-snapshot>false</mining-api-angular-client-snapshot>
		<maven.compiler.source>17</maven.compiler.source>
		<maven.compiler.target>17</maven.compiler.target>
    	<mining-ui.node.version>v20.11.1</mining-ui.node.version>
    	<mining-ui.npm.version>8.19.4</mining-ui.npm.version>
    	<java.17.options>
            --add-opens=java.base/java.util=ALL-UNNAMED
            --add-opens=java.base/java.lang=ALL-UNNAMED
        </java.17.options>
	</properties>

	<profiles>
		<profile>
			<!-- This profile prevents test from execution in any product build (head, nightly, version etc.). -->
			<id>no-integration-tests</id>
			<properties>
				<dist-suffix></dist-suffix>
				<integration.tests.skip>true</integration.tests.skip>
			</properties>
		</profile>
		<profile>
			<!-- This profile prevents test from execution in any product build (head, nightly, version etc.). -->
			<id>dist-no-integration-tests</id>
			<properties>
				<dist-suffix>-dist</dist-suffix>
				<integration.tests.skip>true</integration.tests.skip>
			</properties>
		</profile>
		<profile>
			<id>jumpstart-integration-tests</id>
			<properties>
				<dist-suffix></dist-suffix>
				<integration.jumpstart.tests.run>true</integration.jumpstart.tests.run>
				<integration.tests.includes>innowake.mining.server.integration.discovery.IncrementalDiscoveryJumpstartTest</integration.tests.includes>
			</properties>
		</profile>
		<profile>
			<id>api-client-angular-snapshot-build</id>
			<properties>
				<mining-api-angular-client-snapshot>true</mining-api-angular-client-snapshot>
			</properties>
			<build>
				<plugins>
					<plugin>
						<groupId>com.github.eirslett</groupId>
						<artifactId>frontend-maven-plugin</artifactId>
						<!-- newer versions require maven 3.6 -->
						<version>1.15.0</version>
						<configuration>
							<nodeVersion>${mining-ui.node.version}</nodeVersion>
							<npmVersion>${mining-ui.npm.version}</npmVersion>
							<workingDirectory>target/generated-sources/openapi/</workingDirectory>
						</configuration>
						<executions>
							<execution>
								<id>install node and npm</id>
								<phase>package</phase>
								<goals>
									<goal>install-node-and-npm</goal>
								</goals>
							</execution>
							<execution>
								<id>Nexus login</id>
								<phase>package</phase>
								<goals>
									<goal>npx</goal>
								</goals>
								<configuration>
									<arguments>npm-login-noninteractive</arguments>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<!-- This profile execute the swagger client generation -->
		<profile>
			<id>generate-swagger-client</id>
			<properties>
				<dist-suffix></dist-suffix>
				<integration.tests.includes>innowake.mining.server.controller.GenerateSwaggerConfigTests</integration.tests.includes>
				<innowake.swagger.generate.config>true</innowake.swagger.generate.config>
			</properties>
			<dependencies>
				<dependency>
					<groupId>innowake.products.mining</groupId>
					<artifactId>mining-api-server-deps</artifactId>
					<version>99.9.99-TRUNK-MINING-SNAPSHOT</version>
					<!-- Fixes circular dependency, so we can create the api-angular client here a dependency of the mining-ui -->
					<exclusions>
						<exclusion>
							<groupId>innowake.products.mining</groupId>
							<artifactId>mining-ui</artifactId>
						</exclusion>
					</exclusions>
				</dependency>
			</dependencies>
			<build>
				<plugins>
					<plugin>
						<groupId>org.openapitools</groupId>
						<artifactId>openapi-generator-maven-plugin</artifactId>
						<version>7.4.0</version>
						<executions>
							<execution>
								<id>generate app client</id>
								<phase>prepare-package</phase>
								<goals>
									<goal>generate</goal>
								</goals>
								<configuration>
									<inputSpec>${project.basedir}/target/generated-sources/swagger-config.json</inputSpec>
									<!-- for mining-ui -->
									<generatorName>typescript-angular</generatorName>
									<!-- for mining-cli -->
									<!-- <generatorName>typescript-axios</generatorName> -->
									<skipValidateSpec>true</skipValidateSpec>
									<configOptions>
										<npmName>@innowake/mining-api-angular-client</npmName>
										<npmRepository>https://pd-nexus.deloitte.com/repository/npm-hosted</npmRepository>
										<npmVersion>${project.version}</npmVersion>
										<ngVersion>17</ngVersion>
										<snapshot>${mining-api-angular-client-snapshot}</snapshot>
										<enumPropertyNaming>original</enumPropertyNaming>
									</configOptions>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>com.github.eirslett</groupId>
						<artifactId>frontend-maven-plugin</artifactId>
						<!-- newer versions require maven 3.6 -->
						<version>1.15.0</version>
						<configuration>
							<nodeVersion>${mining-ui.node.version}</nodeVersion>
							<npmVersion>${mining-ui.npm.version}</npmVersion>
							<workingDirectory>target/generated-sources/openapi/</workingDirectory>
						</configuration>
						<executions>
							<execution>
								<id>install node and npm</id>
								<phase>package</phase>
								<goals>
									<goal>install-node-and-npm</goal>
								</goals>
							</execution>
							<execution>
								<id>install package dependencies</id>
								<phase>package</phase>
								<goals>
									<goal>npm</goal>
								</goals>
								<configuration>
									<arguments>install --verbose --registry=https://registry.npmjs.org/</arguments>
								</configuration>
							</execution>
							<execution>
								<id>build package</id>
								<phase>package</phase>
								<goals>
									<goal>npm</goal>
								</goals>
								<configuration>
									<arguments>run build</arguments>
								</configuration>
							</execution>
							<execution>
								<id>create tgz</id>
								<phase>package</phase>
								<goals>
									<goal>npm</goal>
								</goals>
								<configuration>
									<arguments>pack ./dist</arguments>
								</configuration>
							</execution>
							<execution>
								<id>npm publish</id>
								<phase>deploy</phase>
								<goals>
									<goal>npm</goal>
								</goals>
								<configuration>
									<arguments>publish ./dist</arguments>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-deploy-plugin</artifactId>
						<version>2.7</version>
						<executions>
							<execution>
								<id>default-deploy</id>
								<phase>none</phase>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-install-plugin</artifactId>
						<version>2.4</version>
						<executions>
							<execution>
								<id>default-install</id>
								<phase>none</phase>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>discovery-tests-only</id>
			<properties>
				<tests-to-run>Discovery</tests-to-run>
				<tests-not-to-run>Authorization</tests-not-to-run>
			</properties>
		</profile>
		<profile>
			<id>authorization-tests-only</id>
			<properties>
				<tests-to-run>Authorization</tests-to-run>
			</properties>
		</profile>
		<profile>
			<id>integration-tests-only</id>
			<properties>
				<tests-to-run>IntegrationTest</tests-to-run>
				<tests-not-to-run>Discovery, Authorization</tests-not-to-run>
			</properties>
		</profile>
		<profile>
			<id>regular-tests-only</id>
			<properties>
				<tests-to-run></tests-to-run>
				<tests-not-to-run>IntegrationTest, Discovery, Authorization</tests-not-to-run>
			</properties>
		</profile>
		<profile>
			<id>genai-server-integration-tests-only</id>
			<properties>
				<tests-to-run>GenAiServerIntegrationTest</tests-to-run>
				<tests-not-to-run>IntegrationTest, Discovery, Authorization</tests-not-to-run>
			</properties>
		</profile>
	</profiles>

	<dependencies>
		<!-- !!!! All internal non third-party dependencies must be declared in mining-api-server-deps for proper obfuscation !!!! -->
		<dependency>
			<groupId>innowake.products.mining</groupId>
			<artifactId>mining-api-server-deps${dist-suffix}</artifactId>
			<version>99.9.99-TRUNK-MINING-SNAPSHOT</version>
			<exclusions>
				<exclusion>
					<groupId>ognl</groupId>
					<artifactId>ognl</artifactId>
				</exclusion>
				<!-- Exclude all JUnit dependencies as they would have the 'compile' scope, which would bundle them in the final server bundle -->
				<exclusion>
					<groupId>junit</groupId>
					<artifactId>*</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.junit.vintage</groupId>
					<artifactId>*</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.junit.jupiter</groupId>
					<artifactId>*</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.junit.platform</groupId>
					<artifactId>*</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>innowake.products.mining</groupId>
			<artifactId>mining-data-plugin</artifactId>
			<version>99.9.99-TRUNK-MINING-SNAPSHOT</version>
			<classifier>bundle</classifier>
			<scope>test</scope>
			<exclusions>
				<!-- Exclude all JUnit dependencies as they would have the 'compile' scope, which would bundle them in the final server bundle -->
				<exclusion>
					<groupId>junit</groupId>
					<artifactId>*</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.junit.vintage</groupId>
					<artifactId>*</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.junit.jupiter</groupId>
					<artifactId>*</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.junit.platform</groupId>
					<artifactId>*</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- Unit tests -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>*</groupId>
					<artifactId>*</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-test</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>*</groupId>
					<artifactId>*</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-api</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-engine</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-params</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.graphql</groupId>
			<artifactId>spring-graphql-test</artifactId>
			<version>${spring-graphql.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-webflux</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
    		<groupId>org.springframework.boot</groupId>
    		<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<dependency>
			<groupId>io.micrometer</groupId>
			<artifactId>micrometer-registry-prometheus</artifactId>
		</dependency>
		<dependency>
			<groupId>org.skyscreamer</groupId>
			<artifactId>jsonassert</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.xmlunit</groupId>
			<artifactId>xmlunit-core</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- thirdparty dependencies -->
		<dependency>
			<groupId>javax.annotation</groupId>
			<artifactId>javax.annotation-api</artifactId>
			<scope>compile</scope>
			<exclusions>
				<exclusion>
					<groupId>*</groupId>
					<artifactId>*</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>javax.persistence</groupId>
			<artifactId>javax.persistence-api</artifactId>
			<scope>compile</scope>
			<exclusions>
				<exclusion>
					<groupId>*</groupId>
					<artifactId>*</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
			<scope>compile</scope>
			<exclusions>
				<exclusion>
					<groupId>*</groupId>
					<artifactId>*</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
			<scope>compile</scope>
			<exclusions>
				<exclusion>
					<groupId>*</groupId>
					<artifactId>*</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.datatype</groupId>
			<artifactId>jackson-datatype-jsr310</artifactId>
			<scope>compile</scope>
			<exclusions>
				<exclusion>
					<groupId>*</groupId>
					<artifactId>*</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-beans</artifactId>
			<scope>compile</scope>
			<exclusions>
				<exclusion>
					<groupId>*</groupId>
					<artifactId>*</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<scope>compile</scope>
			<exclusions>
				<exclusion>
					<groupId>*</groupId>
					<artifactId>*</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>antlr</groupId>
			<artifactId>antlr</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>com.fasterxml</groupId>
			<artifactId>classmate</artifactId>
			<scope>compile</scope>
			<exclusions>
				<exclusion>
					<groupId>*</groupId>
					<artifactId>*</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
			<scope>compile</scope>
			<exclusions>
				<exclusion>
					<groupId>*</groupId>
					<artifactId>*</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-aop</artifactId>
			<scope>compile</scope>
			<exclusions>
				<exclusion>
					<groupId>*</groupId>
					<artifactId>*</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aspects</artifactId>
			<scope>compile</scope>
			<exclusions>
				<exclusion>
					<groupId>*</groupId>
					<artifactId>*</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<scope>compile</scope>
			<exclusions>
				<exclusion>
					<groupId>*</groupId>
					<artifactId>*</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jdbc</artifactId>
			<scope>compile</scope>
			<exclusions>
				<exclusion>
					<groupId>*</groupId>
					<artifactId>*</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjweaver</artifactId>
			<scope>compile</scope>
			<exclusions>
				<exclusion>
					<groupId>*</groupId>
					<artifactId>*</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.jboss</groupId>
			<artifactId>jandex</artifactId>
			<version>2.0.5.Final</version>
			<scope>compile</scope>
			<exclusions>
				<exclusion>
					<groupId>*</groupId>
					<artifactId>*</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.module</groupId>
			<artifactId>jackson-module-parameter-names</artifactId>
			<scope>compile</scope>
			<exclusions>
				<exclusion>
					<groupId>*</groupId>
					<artifactId>*</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>commons-beanutils</groupId>
			<artifactId>commons-beanutils</artifactId>
			<version>1.9.4</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>2.11.0</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<scope>compile</scope>
			<exclusions>
				<exclusion>
					<groupId>*</groupId>
					<artifactId>*</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.jboss.logging</groupId>
			<artifactId>jboss-logging</artifactId>
			<scope>compile</scope>
			<exclusions>
				<exclusion>
					<groupId>*</groupId>
					<artifactId>*</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-core</artifactId>
			<scope>compile</scope>
			<exclusions>
				<exclusion>
					<groupId>*</groupId>
					<artifactId>*</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework.data</groupId>
			<artifactId>spring-data-commons</artifactId>
			<scope>compile</scope>
			<exclusions>
				<exclusion>
					<groupId>*</groupId>
					<artifactId>*</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.datatype</groupId>
			<artifactId>jackson-datatype-jdk8</artifactId>
			<scope>compile</scope>
			<exclusions>
				<exclusion>
					<groupId>*</groupId>
					<artifactId>*</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot</artifactId>
			<scope>compile</scope>
			<exclusions>
				<exclusion>
					<groupId>*</groupId>
					<artifactId>*</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.dom4j</groupId>
			<artifactId>dom4j</artifactId>
			<version>2.1.3</version>
			<scope>compile</scope>
			<exclusions>
				<exclusion>
					<groupId>*</groupId>
					<artifactId>*</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.apache.tomcat.embed</groupId>
			<artifactId>tomcat-embed-el</artifactId>
			<scope>compile</scope>
			<exclusions>
				<exclusion>
					<groupId>*</groupId>
					<artifactId>*</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-tx</artifactId>
			<scope>compile</scope>
			<exclusions>
				<exclusion>
					<groupId>*</groupId>
					<artifactId>*</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-config</artifactId>
			<scope>compile</scope>
			<exclusions>
				<exclusion>
					<groupId>*</groupId>
					<artifactId>*</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-autoconfigure</artifactId>
			<scope>compile</scope>
			<exclusions>
				<exclusion>
					<groupId>*</groupId>
					<artifactId>*</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
			<scope>compile</scope>
			<exclusions>
				<exclusion>
					<groupId>*</groupId>
					<artifactId>*</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-tomcat</artifactId>
			<scope>compile</scope>
			<exclusions>
				<exclusion>
					<groupId>*</groupId>
					<artifactId>*</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.javassist</groupId>
			<artifactId>javassist</artifactId>
			<version>3.27.0-GA</version>
			<scope>compile</scope>
			<exclusions>
				<exclusion>
					<groupId>*</groupId>
					<artifactId>*</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<scope>compile</scope>
			<exclusions>
				<exclusion>
					<groupId>*</groupId>
					<artifactId>*</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-logging</artifactId>
			<scope>compile</scope>
			<exclusions>
				<exclusion>
					<groupId>*</groupId>
					<artifactId>*</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jul-to-slf4j</artifactId>
			<scope>compile</scope>
			<exclusions>
				<exclusion>
					<groupId>*</groupId>
					<artifactId>*</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework.data</groupId>
			<artifactId>spring-data-jpa</artifactId>
			<scope>compile</scope>
			<exclusions>
				<exclusion>
					<groupId>*</groupId>
					<artifactId>*</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.yaml</groupId>
			<artifactId>snakeyaml</artifactId>
			<version>2.2</version>
			<scope>runtime</scope>
			<exclusions>
				<exclusion>
					<groupId>*</groupId>
					<artifactId>*</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
			<scope>compile</scope>
			<exclusions>
				<exclusion>
					<groupId>*</groupId>
					<artifactId>*</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>javax.validation</groupId>
			<artifactId>validation-api</artifactId>
			<scope>compile</scope>
			<exclusions>
				<exclusion>
					<groupId>*</groupId>
					<artifactId>*</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>javax.activation</groupId>
			<artifactId>javax.activation-api</artifactId>
			<scope>compile</scope>
			<exclusions>
				<exclusion>
					<groupId>*</groupId>
					<artifactId>*</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>commons-logging</groupId>
			<artifactId>commons-logging</artifactId>
			<version>1.2</version>
			<scope>compile</scope>
			<exclusions>
				<exclusion>
					<groupId>*</groupId>
					<artifactId>*</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-annotations</artifactId>
			<scope>compile</scope>
			<exclusions>
				<exclusion>
					<groupId>*</groupId>
					<artifactId>*</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>net.bytebuddy</groupId>
			<artifactId>byte-buddy</artifactId>
			<scope>compile</scope>
			<exclusions>
				<exclusion>
					<groupId>*</groupId>
					<artifactId>*</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.apache.tomcat.embed</groupId>
			<artifactId>tomcat-embed-websocket</artifactId>
			<scope>compile</scope>
			<exclusions>
				<exclusion>
					<groupId>*</groupId>
					<artifactId>*</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-core</artifactId>
			<scope>compile</scope>
			<exclusions>
				<exclusion>
					<groupId>*</groupId>
					<artifactId>*</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.apache.tomcat.embed</groupId>
			<artifactId>tomcat-embed-core</artifactId>
			<scope>compile</scope>
			<exclusions>
				<exclusion>
					<groupId>*</groupId>
					<artifactId>*</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<scope>compile</scope>
			<exclusions>
				<exclusion>
					<groupId>*</groupId>
					<artifactId>*</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>javax.transaction</groupId>
			<artifactId>javax.transaction-api</artifactId>
			<scope>compile</scope>
			<exclusions>
				<exclusion>
					<groupId>*</groupId>
					<artifactId>*</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.hibernate.validator</groupId>
			<artifactId>hibernate-validator</artifactId>
			<scope>compile</scope>
			<exclusions>
				<exclusion>
					<groupId>*</groupId>
					<artifactId>*</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-json</artifactId>
			<scope>compile</scope>
			<exclusions>
				<exclusion>
					<groupId>*</groupId>
					<artifactId>*</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-expression</artifactId>
			<scope>compile</scope>
			<exclusions>
				<exclusion>
					<groupId>*</groupId>
					<artifactId>*</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aop</artifactId>
			<scope>compile</scope>
			<exclusions>
				<exclusion>
					<groupId>*</groupId>
					<artifactId>*</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-text</artifactId>
			<version>1.3</version>
			<scope>compile</scope>
			<exclusions>
				<exclusion>
					<groupId>*</groupId>
					<artifactId>*</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-collections4</artifactId>
			<version>4.2</version>
			<scope>compile</scope>
			<exclusions>
				<exclusion>
					<groupId>*</groupId>
					<artifactId>*</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-web</artifactId>
			<scope>compile</scope>
			<exclusions>
				<exclusion>
					<groupId>*</groupId>
					<artifactId>*</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jcl</artifactId>
			<scope>compile</scope>
			<exclusions>
				<exclusion>
					<groupId>*</groupId>
					<artifactId>*</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>33.0.0-jre</version>
		</dependency>
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>failureaccess</artifactId>
			<version>1.0.1</version>
		</dependency>
		<dependency>
			<groupId>org.springdoc</groupId>
			<artifactId>springdoc-openapi-ui</artifactId>
			<version>${springdoc.version}</version>
		</dependency>
		<dependency>
			<groupId>org.ff4j</groupId>
			<artifactId>ff4j-core</artifactId>
			<version>${ff4j.version}</version>
		</dependency>
		<dependency>
			<groupId>org.ff4j</groupId>
			<artifactId>ff4j-web</artifactId>
			<version>${ff4j.version}</version>
			<exclusions>
				<exclusion>
					<groupId>javax.servlet</groupId>
					<artifactId>jstl</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.ff4j</groupId>
			<artifactId>ff4j-store-springjdbc</artifactId>
			<version>${ff4j.version}</version>
		</dependency>
		<dependency>
			<groupId>cz.jirutka.rsql</groupId>
			<artifactId>rsql-parser</artifactId>
			<version>2.1.0</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-oauth2-client</artifactId>
			<version>5.7.11</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-oauth2-jose</artifactId>
			<version>5.7.11</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-oauth2-resource-server</artifactId>
		</dependency>
		<dependency>
			<groupId>com.carrotsearch</groupId>
			<artifactId>hppc</artifactId>
			<version>${hppc.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-sleuth</artifactId>
			<exclusions>
				<exclusion>
					<groupId>io.zipkin.reporter2</groupId>
					<artifactId>zipkin-reporter-metrics-micrometer</artifactId>
				</exclusion>
				<exclusion>
					<groupId>io.zipkin.brave</groupId>
					<artifactId>brave-instrumentation-messaging</artifactId>
				</exclusion>
				<exclusion>
					<groupId>io.zipkin.brave</groupId>
					<artifactId>brave-instrumentation-rpc</artifactId>
				</exclusion>
				<exclusion>
					<groupId>io.zipkin.brave</groupId>
					<artifactId>brave-instrumentation-spring-rabbit</artifactId>
				</exclusion>
				<exclusion>
					<groupId>io.zipkin.brave</groupId>
					<artifactId>brave-instrumentation-kafka-clients</artifactId>
				</exclusion>
				<exclusion>
					<groupId>io.zipkin.brave</groupId>
					<artifactId>brave-instrumentation-kafka-streams</artifactId>
				</exclusion>
				<exclusion>
					<groupId>io.zipkin.brave</groupId>
					<artifactId>brave-instrumentation-jms</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.bouncycastle</groupId>
					<artifactId>bcprov-jdk15on</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>biz.paluch.logging</groupId>
			<artifactId>logstash-gelf</artifactId>
			<version>1.14.1</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.kafka</groupId>
			<artifactId>spring-kafka</artifactId>
		</dependency>


		<!-- Dependencies that are no longer part of JRE 11. -->
		<dependency>
			<groupId>org.jvnet.staxex</groupId>
			<artifactId>stax-ex</artifactId>
			<version>1.8.3</version>
		</dependency>
		<dependency>
			<groupId>com.sun.istack</groupId>
			<artifactId>istack-commons-runtime</artifactId>
			<version>3.0.11</version>
			<exclusions>
				<exclusion>
					<groupId>*</groupId>
					<artifactId>*</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.apache.xmlbeans</groupId>
			<artifactId>xmlbeans</artifactId>
			<version>3.1.0</version>
		</dependency>
		<!-- Also dependencies no longer part of JRE 11. We have to explicitly list them here, so that they are included in the final fat jar. -->
		<dependency>
			<groupId>javax.xml.bind</groupId>
			<artifactId>jaxb-api</artifactId>
		</dependency>
		<dependency>
			<groupId>com.sun.xml.bind</groupId>
			<artifactId>jaxb-impl</artifactId>
			<version>4.0.5</version>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jaxb</groupId>
			<artifactId>codemodel</artifactId>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jaxb</groupId>
			<artifactId>codemodel-annotation-compiler</artifactId>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jaxb</groupId>
			<artifactId>jaxb-jxc</artifactId>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jaxb</groupId>
			<artifactId>jaxb-runtime</artifactId>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jaxb</groupId>
			<artifactId>jaxb-xjc</artifactId>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jaxb</groupId>
			<artifactId>txw2</artifactId>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jaxb</groupId>
			<artifactId>txwc2</artifactId>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jaxb</groupId>
			<artifactId>xsom</artifactId>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.jayway.jsonpath</groupId>
			<artifactId>json-path</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-test-autoconfigure</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.testcontainers</groupId>
			<artifactId>postgresql</artifactId>
			<version>1.17.6</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.testcontainers</groupId>
			<artifactId>testcontainers</artifactId>
			<version>1.17.6</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>innowake.lib.flyway</groupId>
			<artifactId>lib-flyway-commandline</artifactId>
			<version>99.9.99-TRUNK-BASE-SNAPSHOT</version>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>*</groupId>
					<artifactId>*</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>net.bytebuddy</groupId>
			<artifactId>byte-buddy-agent</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>net.bytebuddy</groupId>
			<artifactId>byte-buddy</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.eclipse-iw.jdt</groupId>
			<artifactId>org.eclipse.jdt.core</artifactId>
			<version>3.24.0</version>
			<exclusions>
				<exclusion>
					<groupId>org.eclipse-iw.platform</groupId>
					<artifactId>org.eclipse.core.filesystem</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.eclipse-iw.platform</groupId>
					<artifactId>org.eclipse.text</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.eclipse-iw.platform</groupId>
					<artifactId>org.eclipse.core.expressions</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.eclipse-iw.platform</groupId>
					<artifactId>org.eclipse.equinox.registry</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.eclipse-iw.platform</groupId>
					<artifactId>org.eclipse.equinox.app</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>com.orientechnologies</groupId>
			<artifactId>orientdb-gremlin</artifactId>
			<version>3.1.6</version>
			<exclusions>
				<!-- Exclude TinkerPop due to vulnerabilities in shaded -->
				<exclusion>
					<groupId>org.apache.tinkerpop</groupId>
					<artifactId>gremlin-core</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.apache.tinkerpop</groupId>
					<artifactId>gremlin-groovy</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<!-- required by graphql controllers -->
		<dependency>
			<groupId>io.projectreactor</groupId>
			<artifactId>reactor-core</artifactId>
		</dependency>
		<!-- Include later TinkerPop version which shades jackson-databind in version -->
		<dependency>
			<groupId>org.apache.tinkerpop</groupId>
			<artifactId>gremlin-core</artifactId>
			<version>3.4.9</version>
		</dependency>
		<dependency>
			<groupId>org.apache.tinkerpop</groupId>
			<artifactId>gremlin-groovy</artifactId>
			<version>3.4.9</version>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.vintage</groupId>
			<artifactId>junit-vintage-engine</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.platform</groupId>
			<artifactId>junit-platform-launcher</artifactId>
			<scope>test</scope>
		</dependency>
	<dependency>
			<groupId>innowake.release.lib.junit</groupId>
			<artifactId>lib-junit</artifactId>
			<version>2.0.0</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>innowake.release.build</groupId>
				<artifactId>maven-innowake-plugin</artifactId>
				<version>2.0.1</version>
				<executions>
					<execution>
						<phase>validate</phase>
						<goals>
							<goal>pack-licenses</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>com.github.wvengen</groupId>
				<artifactId>proguard-maven-plugin</artifactId>
				<version>2.6.0</version>
				<executions>
					<execution>
						<phase>${dist-only-package-phase}</phase>
						<goals>
							<goal>proguard</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<proguardVersion>7.3.2</proguardVersion>
					<injar>${project.build.finalName}.jar</injar>
					<outjar>${project.build.finalName}.jar</outjar>
					<obfuscate>true</obfuscate>
					<putLibraryJarsInTempDir>true</putLibraryJarsInTempDir>
					<options>
						<option>-ignorewarnings</option>
						<option>-verbose</option>
						<option>-printseeds ${project.build.directory}/proguard.seeds</option>
						<option>-printmapping ${project.build.directory}/proguard.map</option>
						<option>-printusage ${project.build.directory}/proguard.usage</option>
						<option>-dontshrink</option>
						<option>-dontoptimize</option>
						<option>-adaptclassstrings</option>
						<option>-keepattributes
							Exceptions,InnerClasses,Signature,Deprecated,*Annotation*,EnclosingMethod</option>
						<option>-keepnames interface **</option>
						<option>-keepparameternames</option>
						<option>-keep interface * extends * { *; }</option>
						<option>-keep public class * {public protected *;}</option>
						<option>-keep public class innowake.mining.extensions.metadata.model.* {*;}</option>
						<option>-keepclassmembernames class * {java.lang.Class
							class$(java.lang.String);java.lang.Class class$(java.lang.String,
							boolean);}</option>
						<option>-keepclassmembers class * extends java.lang.Enum {public
							**[] values();}</option>
						<option>-keep class **.package-info { *;} </option>
						<option>-keep class innowake.mining.server.MiningApiApplication {
							*; }</option>
						<option>-keepclassmembers class
							innowake.mining.server.export.ModuleCsvModel { *; }</option>
					</options>
					<libs>
						<lib>${java.home}/jmods/java.base.jmod</lib>
						<lib>${java.home}/jmods/java.datatransfer.jmod</lib>
						<lib>${java.home}/jmods/java.prefs.jmod</lib>
						<lib>${java.home}/jmods/java.xml.jmod</lib>
						<lib>${java.home}/jmods/java.desktop.jmod</lib>
						<lib>${java.home}/jmods/java.sql.jmod</lib>
					</libs>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>com.guardsquare</groupId>
						<artifactId>proguard-core</artifactId>
						<version>9.0.8</version>
						<scope>runtime</scope>
					</dependency>
					<dependency>
						<groupId>com.guardsquare</groupId>
						<artifactId>proguard-base</artifactId>
						<version>7.3.2</version>
						<scope>runtime</scope>
					</dependency>
					<dependency>
						<groupId>com.guardsquare</groupId>
						<artifactId>proguard-ant</artifactId>
						<version>7.3.2</version>
						<scope>runtime</scope>
					</dependency>
					<dependency>
						<groupId>com.guardsquare</groupId>
						<artifactId>proguard-annotations</artifactId>
						<version>7.3.2</version>
						<scope>runtime</scope>
					</dependency>
					<dependency>
						<groupId>com.guardsquare</groupId>
						<artifactId>proguard-retrace</artifactId>
						<version>7.3.2</version>
						<scope>runtime</scope>
					</dependency>
				</dependencies>
			</plugin>
			<plugin>
				<artifactId>maven-antrun-plugin</artifactId>
				<dependencies>
					<dependency>
						<groupId>ant-contrib</groupId>
						<artifactId>ant-contrib</artifactId>
						<version>1.0b3</version>
						<exclusions>
							<exclusion>
								<groupId>ant</groupId>
								<artifactId>ant</artifactId>
							</exclusion>
						</exclusions>
					</dependency>
				</dependencies>
				<executions>
					<execution>
						<phase>${dist-only-package-phase}</phase>
						<configuration>
							<exportAntProperties>true</exportAntProperties>
							<tasks>
								<taskdef resource="net/sf/antcontrib/antcontrib.properties" classpathref="maven.plugin.classpath" />
								<zip destfile="${project.build.directory}${file.separator}proguard.zip" basedir="${project.build.directory}" includes="proguard.seeds proguard.map" />
								<if>
									<contains string="${project.version}" substring="snapshot" casesensitive="false" />
									<then>
										<property name="repo.url" value="https://pd-nexus2.deloitte.com/nexus/content/repositories/snapshots" />
										<property name="repo.id" value="snapshots" />
									</then>
									<else>
										<property name="repo.url" value="https://pd-nexus2.deloitte.com/nexus/content/repositories/releases" />
										<property name="repo.id" value="releases" />
									</else>
								</if>
							</tasks>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-install-plugin</artifactId>
				<version>2.4</version>
				<executions>
					<execution>
						<id>install-proguard</id>
						<goals>
							<goal>install-file</goal>
						</goals>
						<phase>${dist-only-install-phase}</phase>
						<configuration>
							<file>${project.build.directory}${file.separator}proguard.zip</file>
							<artifactId>${project.artifactId}${dist-suffix}</artifactId>
							<groupId>${project.groupId}</groupId>
							<version>${project.version}</version>
							<packaging>proguard.zip</packaging>
							<generatePom>false</generatePom>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-deploy-plugin</artifactId>
				<version>2.7</version>
				<executions>
					<execution>
						<id>deploy-proguard</id>
						<goals>
							<goal>deploy-file</goal>
						</goals>
						<phase>${dist-only-deploy-phase}</phase>
						<configuration>
							<file>${project.build.directory}${file.separator}proguard.zip</file>
							<artifactId>${project.artifactId}${dist-suffix}</artifactId>
							<groupId>${project.groupId}</groupId>
							<version>${project.version}</version>
							<packaging>proguard.zip</packaging>
							<repositoryId>${repo.id}</repositoryId>
							<url>${repo.url}</url>
							<generatePom>false</generatePom>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<!-- Used to create the spring boot executable fat jar for integration tests -->
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<jvmArguments>${java.17.options}</jvmArguments>
				</configuration>
				<executions>
					<execution>
						<id>repackage</id>
						<phase>none</phase>
					</execution>
					<execution>
						<id>dist-only-repackage</id>
						<phase>${dist-only-package-phase}</phase>
						<goals>
							<goal>repackage</goal>
						</goals>
					</execution>
					<execution>
						<id>normal-and-app-repackage</id>
						<phase>${non-dist-package-phase}</phase>
						<goals>
							<goal>repackage</goal>
						</goals>
						<configuration>
							<classifier>app</classifier>
						</configuration>
					</execution>
					<execution>
						<id>build-info</id>
						<goals>
							<goal>build-info</goal>
						</goals>
					</execution>
				</executions>
				<dependencies>
					<dependency>
						<groupId>commons-logging</groupId>
						<artifactId>commons-logging</artifactId>
						<version>1.2</version>
						<scope>compile</scope>
					</dependency>
				</dependencies>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<!-- These values are set in the profiles -->
					<groups>${tests-to-run}</groups>
					<excludedGroups>${tests-not-to-run}</excludedGroups>
					<statelessTestsetReporter implementation="org.apache.maven.plugin.surefire.extensions.junit5.JUnit5Xml30StatelessReporter">
						<disable>false</disable>
						<version>3.0</version>
						<usePhrasedFileName>true</usePhrasedFileName>
						<usePhrasedTestSuiteClassName>true</usePhrasedTestSuiteClassName>
						<usePhrasedTestCaseClassName>true</usePhrasedTestCaseClassName>
						<usePhrasedTestCaseMethodName>true</usePhrasedTestCaseMethodName>
					</statelessTestsetReporter>
					<consoleOutputReporter implementation="org.apache.maven.plugin.surefire.extensions.junit5.JUnit5ConsoleOutputReporter">
						<disable>false</disable>
						<encoding>UTF-8</encoding>
						<usePhrasedFileName>true</usePhrasedFileName>
					</consoleOutputReporter>
					<statelessTestsetInfoReporter implementation="org.apache.maven.plugin.surefire.extensions.junit5.JUnit5StatelessTestsetInfoReporter">
						<disable>false</disable>
						<usePhrasedFileName>true</usePhrasedFileName>
						<usePhrasedClassNameInRunning>true</usePhrasedClassNameInRunning>
						<usePhrasedClassNameInTestCaseSummary>true</usePhrasedClassNameInTestCaseSummary>
					</statelessTestsetInfoReporter>
					<systemPropertyVariables>
						<!-- The incremental discovery jumpstart test must never run in the
							mining-api-server or mining-api-server-dist job -->
						<innowake.integration.tests.skip>${integration.tests.skip}</innowake.integration.tests.skip>
						<innowake.integration.jumpstart.tests.run>${integration.jumpstart.tests.run}</innowake.integration.jumpstart.tests.run>
						<!-- Call swagger to generate the configuration only when required -->
						<innowake.swagger.generate.config>${innowake.swagger.generate.config}</innowake.swagger.generate.config>
					</systemPropertyVariables>
					<includes>
						<include>${integration.tests.includes}</include>
					</includes>
					<argLine>${java.17.options}</argLine>

				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>copy-download</id>
						<phase>process-resources</phase>
						<goals>
							<goal>copy</goal>
						</goals>
						<configuration>
							<artifactItems>
								<artifactItem>
									<groupId>innowake.products.modernization.dbcutter</groupId>
									<artifactId>dbcrawler</artifactId>
									<version>1.3.2</version>
									<type>jar</type>
									<outputDirectory>${project.build.outputDirectory}/static/download</outputDirectory>
									<destFileName>dbcrawler.jar</destFileName>
								</artifactItem>
							</artifactItems>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<executions>
					<execution>
						<id>copy-resources</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${basedir}/target/classes/resources</outputDirectory>
							<resources>
								<resource>
									<filtering>true</filtering>
									<directory>target/</directory>
									<includes>
										<include>licenses/**</include>
										<include>innoWake-Third-Party-Licenses.html</include>
									</includes>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											innowake.release.build
										</groupId>
										<artifactId>
											maven-innowake-plugin
										</artifactId>
										<versionRange>
											[1.0.0,)
										</versionRange>
										<goals>
											<goal>pack-licenses</goal>
											<goal>
												validate-dependencies
											</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.apache.maven.plugins
										</groupId>
										<artifactId>
											maven-toolchains-plugin
										</artifactId>
										<versionRange>
											[1.1,)
										</versionRange>
										<goals>
											<goal>toolchain</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-dependency-plugin</artifactId>
										<versionRange>[1,)</versionRange>
										<goals>
											<goal>copy</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<execute />
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
</project>
