**********************************************************************  00001000
*                                                                       00002000
*  S06RDB .... STATIC SQL READ MODULE                                   00003000
*                                                                       00004000
*  CREATION DATE: 04/25/16                                              00005000
*                                                                       00006000
*  FUNCTIONAL DESCRIPTION: THIS PROGRAM CONTAINS THE STATIC SQL         00007000
*  VECTORS REQUIRED TO SUPPORT I/O TO THE S06 TABLE.  IT IS LOADED      00008000
*  BY THE DB2 I/O MANAGER (BIPDB2X).  THIS PROGRAM WILL BE USED         00009000
*  IN BOTH A CICS AND BATCH ENVIRONMENT AND MUST BE RE-ENTRANT          00010000
*  AND VOID OF SVC CALLS.                                               00011000
*                                                                       00012000
*     ***************************************************************   00013000
*     *                                                             *   00013001
*     *                           NOTICE                            *   00013002
*     *                                                             *   00013003
*     *   THIS SOFTWARE IS THE PROPERTY OF AND CONTAINS             *   00013004
*     *   CONFIDENTIAL INFORMATION OF INFOR AND/OR ITS AFFILIATES   *   00013005
*     *   OR SUBSIDIARIES AND SHALL NOT BE DISCLOSED WITHOUT PRIOR  *   00013006
*     *   WRITTEN PERMISSION. LICENSED CUSTOMERS MAY COPY AND       *   00013007
*     *   ADAPT THIS SOFTWARE FOR THEIR OWN USE IN ACCORDANCE WITH  *   00013008
*     *   THE TERMS OF THEIR SOFTWARE LICENSE AGREEMENT.            *   00013009
*     *   ALL OTHER RIGHTS RESERVED.                                *   00013010
*     *                                                             *   00013011
*     *   (C) COPYRIGHT 2017 INFOR.  ALL RIGHTS RESERVED.           *   00013012
*     *   THE WORD AND DESIGN MARKS SET FORTH HEREIN ARE            *   00013013
*     *   TRADEMARKS AND/OR REGISTERED TRADEMARKS OF INFOR          *   00013014
*     *   AND/OR ITS AFFILIATES AND SUBSIDIARIES. ALL RIGHTS        *   00013015
*     *   RESERVED.  ALL OTHER TRADEMARKS LISTED HEREIN ARE         *   00013016
*     *   THE PROPERTY OF THEIR RESPECTIVE OWNERS.                  *   00013017
*     *                                                             *   00013018
*     ***************************************************************   00013019
*     *     Infopoint Relationship Pricing                          *   00013020
*     *     RP 5.0.01                                               *   00013021
*     ***************************************************************   00013022
*                                                                       00014000
**********************************************************************  00015000
* SQI COMMUNICATION AREA DSECT ADDRESSED BY REGISTER 11                 00016000
**********************************************************************  00017000
*                                                                       00018000
COM#AREA DSECT                         SQI COMMUNICATION AREA           00019000
SQW@CAF  DS    F                       ADDRESS OF CALL ATTACH FACILITY  00020000
SQW@RET  DS    F                       RETURN TO THIS SQI ADDRESS       00021000
SQWSQLCA DS    XL136                   SQLCA FOR I/O MODULE USE         00022000
         ORG   SQWSQLCA                                                 00023000
         EXEC  SQL INCLUDE SQLCA                                        00024000
SQWSQLDL DS    F                       LENGTH OF DYNAMIC SQLDSECT       00025000
SQWSQLD  DS    F                       DYNAMIC SQLDSECT                 00026000
SQW@SQRX DS    F                       SQI INTERFACE ROUTINE ADDRESS    00027000
SQWPARM1 DS    F                       SQI PARAMETER 1 (MODULE ADDRESS) 00028000
SQWINTHV DS    F                       INTEGER HOST VARIABLE            00029000
SQWCSRBR DS    F                       CURSOR ROUTINE BASE REGISTER     00030000
SQWCSRRA DS    F                       CURSOR ROUTINE RETURN ADDRESS    00031000
SQWRSFVC DS    H                       ROWSET FETCH SQLVAR COUNT        00032000
SQWKMRP  DS    CL1                     SQI KEY MASK / ROUTINE POINTER   00033000
         DS    CL5                     RESERVED                         00034000
SQWIOSI  DS    0CL24                   I/O MODULE STATE INFORMATION     00035000
SQWSQLDA DS    F                       ROWSET SQLDA STORAGE ADDRESS     00036000
SQWRSRMX DS    H                       ROWSET MAX NUMBER OF ROWS        00037000
SQWRSRCT DS    H                       ROWSET RETURNED ROW COUNT        00038000
SQWRSROC DS    H                       ROWSET ROW OCCURS COUNT          00039000
SQWRSFCD DS    H                       ROWSET FETCH SQLCODE             00040000
SQWCSRCA DS    F                       READ CURSOR CLOSE ROUTINE ADDR   00041000
SQWCSUCA DS    F                       UPDATE CURSOR CLOSE ROUTINE ADDR 00042000
SQWCSRLV DS    CL1                     CURSOR CASCADE LEVEL LIMIT       00043000
SQWCSRCC DS    CL1                     CURSOR CASCADE COUNT             00044000
SQWCSRSP DS    H                       CURSOR ROUTINE POINTER           00045000
         DS    CL4                     RESERVED                         00046000
SQWCMD   DS    CL2                     DBS COMMAND CODE                 00047000
SQWORG   DS    CL6                     RECORD ORG CODE                  00048000
ASMREC   DS    0F                      ASSEMBLER RECORD (ALIGNED)       00049000
INST     DS    CL4                                                      00050000
RECNBR   DS    CL4                                                      00051000
CATGCODE DS    CL6                                                      00052000
AUDDATE  DS    PL5'0.'                                                  00053000
AUDTIME  DS    PL5'0.'                                                  00054000
AUDUSER  DS    CL8                                                      00055000
AUDORG   DS    CL6                                                      00056000
DESCCD   DS    CL20                                                     00057000
BALCODE  DS    CL2                                                      00058000
BAENROLL DS    PL6'0.00'                                                00059000
BAINCEN  DS    PL6'0.00'                                                00060000
*                                                                       00061000
         ORG   ASMREC+(2000-L'SQWADATA) POINT TO ADDITIONAL DATA        00062000
SQWADATA DS    0CL400                  ADDITIONAL DATA PASSED TO MODULE 00063000
SQWSEGF  DS    CL102                   SEGMENTED FROM KEY VALUE         00064000
SQWSEGT  DS    CL102                   SEGMENTED TO KEY VALUE           00065000
SQWAUDIT DS    CL99                    CALLERS AUDIT DATA               00066000
         DS    CL97                    RESERVED                         00067000
*                                                                       00068000
INDVARS  DS    0H                      NULL INDICATOR VARIABLES         00069000
INDVARX  DS    0H                                                       00070000
INDVARL  EQU   INDVARX-INDVARS         NULL INDICATOR AREA LENGTH       00071000
*                                                                       00072000
*                                                                       00073000
**********************************************************************  00074000
* ROWSET SQLDA AREA ADDRESSED BY REGISTER 2                             00075000
**********************************************************************  00076000
*                                                                       00077000
SQDSQLDA DSECT                         ROWSET SQLDA AREA                00078000
*                                                                       00079000
**********************************************************************  00080000
* PROGRAM TABLE HEADER SECTION:                                         00081000
*   THIS SECTION CONTAINS STATIC DESCRIPTIVE FIELDS.                    00082000
**********************************************************************  00083000
*                                                                       00084000
S06RDB   CSECT                         PROGRAM TABLE SECTION            00085000
S06RDB   AMODE ANY                                                      00086000
S06RDB   RMODE ANY                                                      00087000
         DC    CL8'S06RDB  '           PROGRAM ID                       00088000
         DC    CL1' '                                                   00089000
         DC    CL8'&SYSDATE'           ASSEMBLY DATE                    00090000
         DC    CL1' '                                                   00091000
         DC    CL5'&SYSTIME'           ASSEMBLY TIME                    00092000
         DC    CL1' '                                                   00093000
         DC    A(SQLDLEN)              SQLDSECT SIZE                    00094000
         DC    5A(0)                   RESERVED                         00095000
         DC    AL2(0)                  RESERVED                         00096000
         DC    AL2(INDVARL)            NULL INDICATOR AREA LENGTH       00097000
         DC    A(CONVTAB1)             RECORD/HOST CONVERSION TABLE     00098000
         DC    A(CONVTAB2)             SQLDA DATA TYPE/LENGTH TABLE     00099000
         DC    A(STM#TAB)              STATEMENT TABLE ADDRESS          00100000
         DC    CL43'COPYRIGHT 2017 INFOR. ALL RIGHTS RESERVED. '        00101000
         DC    CL29'WWW.INFOR.COM                '                      00101001
*                                                                       00102000
**********************************************************************  00103000
* STATEMENT TABLE SECTION:                                              00104000
*   THIS SECTION DEFINES AN ENTRY VECTOR FOR EACH SQL STATEMENT.        00105000
**********************************************************************  00106000
*                                                                       00107000
STM#TAB  CSECT                         STATEMENT TABLE SECTION          00108000
STM#TAB  AMODE ANY                                                      00109000
STM#TAB  RMODE ANY                                                      00110000
         DC    A(SELIN0)               SELECT INTO (KEY 0)              00111000
         DC    A(SELIN1)               SELECT INTO (KEY 1)              00112000
         DC    A(SELIN2)               SELECT INTO (KEY 2)              00113000
         DC    A(SELIN3)               SELECT INTO (KEY 3)              00114000
         DC    12A(0)                  UDB MODULE VECTORS               00115000
         DC    A(SELXC0)               SELECT SEQ CURSOR (KEY 0)        00116000
         DC    A(SELXC1)               SELECT SEQ CURSOR (KEY 1)        00117000
         DC    A(SELXC2)               SELECT SEQ CURSOR (KEY 2)        00118000
         DC    A(SELXC3)               SELECT SEQ CURSOR (KEY 3)        00119000
         DC    A(FETDC0)               FETCH SEQ DATA CURSOR (KEY 0)    00120000
         DC    A(FETDC1)               FETCH SEQ DATA CURSOR (KEY 1)    00121000
         DC    A(FETDC2)               FETCH SEQ DATA CURSOR (KEY 2)    00122000
         DC    A(FETDC3)               FETCH SEQ DATA CURSOR (KEY 3)    00123000
         DC    A(FETKC0)               FETCH SEQ KEY CURSOR (KEY 0)     00124000
         DC    A(FETKC1)               FETCH SEQ KEY CURSOR (KEY 1)     00125000
         DC    A(FETKC2)               FETCH SEQ KEY CURSOR (KEY 2)     00126000
         DC    A(FETKC3)               FETCH SEQ KEY CURSOR (KEY 3)     00127000
         DC    A(CLSXC0)               CLOSE SEQ CURSOR (KEY 0)         00128000
         DC    A(CLSXC1)               CLOSE SEQ CURSOR (KEY 1)         00129000
         DC    A(CLSXC2)               CLOSE SEQ CURSOR (KEY 2)         00130000
         DC    A(CLSXC3)               CLOSE SEQ CURSOR (KEY 3)         00131000
         DC    A(SELKY0)               SELECT KEY (KEY 0)               00132000
         DC    A(SELKY1)               SELECT KEY (KEY 1)               00133000
         DC    A(SELKY2)               SELECT KEY (KEY 2)               00134000
         DC    A(SELKY3)               SELECT KEY (KEY 3)               00135000
         DC    10A(0)                  UDB MODULE VECTORS               00136000
         DC    4X'FF'                                                   00137000
*                                                                       00138000
**********************************************************************  00139000
* SQL STATEMENT SECTION:                                                00140000
*   THIS SECTION CONTAINS ALL THE STATIC SQL STATEMENTS REQUIRED        00141000
*     TO SUPPORT THIS TABLE.                                            00142000
*   THE INDICATED STATEMENTS MAY BE MODIFIED, AS LONG AS THE RESULTS    00143000
*     ARE EQUIVALENT.                                                   00144000
**********************************************************************  00145000
*                                                                       00146000
SQL#STMT CSECT                         SQL STATEMENT SECTION            00147000
SQL#STMT AMODE ANY                                                      00148000
SQL#STMT RMODE ANY                                                      00149000
         USING SQDSQLDA,2              ADDRESS ROWSET SQLDA AREA        00150000
         USING SQLDSECT,10             ADDRESS SQLDSECT                 00151000
         USING COM#AREA,11             ADDRESS COMMAREA                 00152000
*                                                                       00153000
**********************************************************************  00154000
* SELECT INTO STATEMENT BY PRIMARY KEY:                                 00155000
*   THIS STATEMENT SUPPORTS THE GET (WITHOUT LOCK) VERB.                00156000
**********************************************************************  00157000
*                                                                       00158000
SELIN0   DS    0H                                                       00159000
         USING SELIN0,12               ESTABLISH BASE REGISTER          00160000
         MVI   SQWKMRP,X'80'           MOVE RECORD TO HOST FOR KEY 0    00161000
         L     15,SQW@SQRX             LOAD INTERFACE ROUTINE ADDRESS   00162000
         BALR  14,15                   MOVE REQUESTED DATA              00163000
         EXEC  SQL SELECT                                              *00164000
                   AUDIT_DATE,                                         *00165000
                   AUDIT_TIME,                                         *00166000
                   AUDIT_USER,                                         *00167000
                   AUDIT_ORG,                                          *00168000
                   DESCRIPTION,                                        *00169000
                   BAL_CODE,                                           *00170000
                   BAL_REQD_ENROLL,                                    *00171000
                   BAL_REQD_INCEN                                      *00172000
                 INTO                                                  *00173000
                   :AUDDATE,                                           *00174000
                   :AUDTIME,                                           *00175000
                   :AUDUSER,                                           *00176000
                   :AUDORG,                                            *00177000
                   :DESCCD,                                            *00178000
                   :BALCODE,                                           *00179000
                   :BAENROLL,                                          *00180000
                   :BAINCEN                                            *00181000
                 FROM S06                                              *00182000
                 WHERE                                                 *00183000
                   INST_NBR = :INST AND                                *00184000
                   RECORD_NBR = :RECNBR AND                            *00185000
                   CATEGORY_CODE = :CATGCODE                           *00186000
                 FETCH FIRST 1 ROW ONLY                                 00187000
         MVI   SQWKMRP,X'03'           MOVE HOST VARIABLES TO RECORD    00188000
         L     15,SQW@SQRX             LOAD INTERFACE ROUTINE ADDRESS   00189000
         BALR  14,15                   MOVE REQUESTED DATA              00190000
         L     14,SQW@RET              LOAD RETURN ADDRESS              00191000
         BR    14                      RETURN TO CALLER                 00192000
         LTORG                                                          00193000
*                                                                       00194000
**********************************************************************  00195000
* SELECT COUNT STATEMENT BY PRIMARY KEY:                                00196000
*   THIS STATEMENT SUPPORTS THE LOCATE VERB.                            00197000
**********************************************************************  00198000
*                                                                       00199000
SELKY0   DS    0H                                                       00200000
         USING SELKY0,12               ESTABLISH BASE REGISTER          00201000
         MVI   SQWKMRP,X'80'           MOVE RECORD TO HOST FOR KEY 0    00202000
         L     15,SQW@SQRX             LOAD INTERFACE ROUTINE ADDRESS   00203000
         BALR  14,15                   MOVE REQUESTED DATA              00204000
         EXEC  SQL SELECT                                              *00205000
                   COUNT(*)                                            *00206000
                 INTO                                                  *00207000
                   :SQWINTHV                                           *00208000
                 FROM S06                                              *00209000
                 WHERE                                                 *00210000
                   INST_NBR = :INST AND                                *00211000
                   RECORD_NBR = :RECNBR AND                            *00212000
                   CATEGORY_CODE = :CATGCODE                           *00213000
                 FETCH FIRST 1 ROW ONLY                                 00214000
         L     14,SQW@RET              LOAD RETURN ADDRESS              00215000
         CLC   SQLCODE,=F'0'           GOOD RETURN FROM SQL?            00216000
         BNER  14                      NO - RETURN TO CALLER            00217000
         CLC   SQWINTHV,=F'0'          ANY ROWS MATCH WHERE CLAUSE?     00218000
         BNER  14                      YES - RETURN ZERO SQLCODE        00219000
         MVC   SQLCODE,=F'+100'        SET SQLCODE TO ROW NOT FOUND     00220000
         BR    14                      RETURN TO CALLER                 00221000
         LTORG                                                          00222000
*                                                                       00223000
**********************************************************************  00224000
* SELECT SEQUENTIAL AND OPEN SEQUENTIAL CURSOR STATEMENTS BY PRIMARY    00225000
* KEY:                                                                  00226000
*   THESE STATEMENTS SUPPORT THE GET-GE, GET-GE-LOCK, GET-NEXT,         00227000
*     AND GET-NEXT-LOCK VERBS.                                          00228000
*   A SELECT UPDATE STATEMENT WILL FOLLOW IN THE CASE OF A              00229000
*     GET-GE-LOCK OR GET-NEXT-LOCK VERB.                                00230000
**********************************************************************  00231000
*                                                                       00232000
SELXC0   DS    0H                                                       00233000
         USING SELXC0,12               ESTABLISH BASE REGISTER          00234000
         MVI   SQWKMRP,X'86'           SET HOST KEY 0 & CURSOR POINTER  00235000
         L     15,SQW@SQRX             LOAD INTERFACE ROUTINE ADDRESS   00236000
         BALR  14,15                   MOVE DATA & SET CURSOR POINTER   00237000
         LA    12,SELXC0P              LOAD VECTOR TABLE ADDRESS        00238000
         AH    12,SQWCSRSP             COMPUTE POINTER TO OPEN ROUTINE  00239000
         L     12,0(12)                LOAD OPEN ROUTINE ADDRESS        00240000
         BR    12                      GO TO CURSOR OPEN ROUTINE        00241000
SELXC0P  DC    A(SELGE001)                                              00242000
         DC    (KY0COLMS-01)A(0)                                        00243000
         DC    A(SELGE002)                                              00244000
         DC    (KY0COLMS-02)A(0)                                        00245000
         DC    A(SELGE003)                                              00246000
         LTORG                                                          00247000
*                                                                       00248000
SELGE001 DS    0H                                                       00249000
         USING SELGE001,12             ESTABLISH BASE REGISTER          00250000
         EXEC  SQL DECLARE S06GE001 CURSOR                             *00251000
               WITH ROWSET POSITIONING                                 *00252000
               FOR SELECT                                              *00253000
                   INST_NBR,                                           *00254000
                   RECORD_NBR,                                         *00255000
                   CATEGORY_CODE,                                      *00256000
                   AUDIT_DATE,                                         *00257000
                   AUDIT_TIME,                                         *00258000
                   AUDIT_USER,                                         *00259000
                   AUDIT_ORG,                                          *00260000
                   DESCRIPTION,                                        *00261000
                   BAL_CODE,                                           *00262000
                   BAL_REQD_ENROLL,                                    *00263000
                   BAL_REQD_INCEN                                      *00264000
                 FROM S06                                              *00265000
                 WHERE                                                 *00266000
                   INST_NBR = :INST AND                                *00267000
                   RECORD_NBR = :RECNBR AND                            *00268000
                   CATEGORY_CODE >=                                    *00269000
                     :CATGCODE                                         *00270000
                 ORDER BY CATEGORY_CODE ASC                            *00271000
                 OPTIMIZE FOR 1 ROW FOR READ ONLY                       00272000
         EXEC  SQL OPEN S06GE001                                        00273000
         MVC   SQWCSRCA,=A(CLSGE001)   SET CURSOR CLOSE ROUTINE ADDRESS 00274000
         L     14,SQW@RET              LOAD RETURN ADDRESS              00275000
         BR    14                      RETURN TO CALLER                 00276000
         LTORG                                                          00277000
*                                                                       00278000
SELGE002 DS    0H                                                       00279000
         USING SELGE002,12             ESTABLISH BASE REGISTER          00280000
         EXEC  SQL DECLARE S06GE002 CURSOR                             *00281000
               WITH ROWSET POSITIONING                                 *00282000
               FOR SELECT                                              *00283000
                   INST_NBR,                                           *00284000
                   RECORD_NBR,                                         *00285000
                   CATEGORY_CODE,                                      *00286000
                   AUDIT_DATE,                                         *00287000
                   AUDIT_TIME,                                         *00288000
                   AUDIT_USER,                                         *00289000
                   AUDIT_ORG,                                          *00290000
                   DESCRIPTION,                                        *00291000
                   BAL_CODE,                                           *00292000
                   BAL_REQD_ENROLL,                                    *00293000
                   BAL_REQD_INCEN                                      *00294000
                 FROM S06                                              *00295000
                 WHERE                                                 *00296000
                   INST_NBR = :INST AND                                *00297000
                   RECORD_NBR >=                                       *00298000
                     :RECNBR                                           *00299000
                 ORDER BY RECORD_NBR ASC,                              *00300000
                   CATEGORY_CODE ASC                                   *00301000
                 OPTIMIZE FOR 1 ROW FOR READ ONLY                       00302000
         EXEC  SQL OPEN S06GE002                                        00303000
         MVC   SQWCSRCA,=A(CLSGE002)   SET CURSOR CLOSE ROUTINE ADDRESS 00304000
         L     14,SQW@RET              LOAD RETURN ADDRESS              00305000
         BR    14                      RETURN TO CALLER                 00306000
         LTORG                                                          00307000
*                                                                       00308000
SELGE003 DS    0H                                                       00309000
         USING SELGE003,12             ESTABLISH BASE REGISTER          00310000
         EXEC  SQL DECLARE S06GE003 CURSOR                             *00311000
               WITH ROWSET POSITIONING                                 *00312000
               FOR SELECT                                              *00313000
                   INST_NBR,                                           *00314000
                   RECORD_NBR,                                         *00315000
                   CATEGORY_CODE,                                      *00316000
                   AUDIT_DATE,                                         *00317000
                   AUDIT_TIME,                                         *00318000
                   AUDIT_USER,                                         *00319000
                   AUDIT_ORG,                                          *00320000
                   DESCRIPTION,                                        *00321000
                   BAL_CODE,                                           *00322000
                   BAL_REQD_ENROLL,                                    *00323000
                   BAL_REQD_INCEN                                      *00324000
                 FROM S06                                              *00325000
                 WHERE                                                 *00326000
                   INST_NBR >=                                         *00327000
                     :INST                                             *00328000
                 ORDER BY INST_NBR ASC,                                *00329000
                   RECORD_NBR ASC,                                     *00330000
                   CATEGORY_CODE ASC                                   *00331000
                 OPTIMIZE FOR 1 ROW FOR READ ONLY                       00332000
         EXEC  SQL OPEN S06GE003                                        00333000
         MVC   SQWCSRCA,=A(CLSGE003)   SET CURSOR CLOSE ROUTINE ADDRESS 00334000
         L     14,SQW@RET              LOAD RETURN ADDRESS              00335000
         BR    14                      RETURN TO CALLER                 00336000
         LTORG                                                          00337000
*                                                                       00338000
**********************************************************************  00339000
* SELECT AND OPEN SEQUENTIAL CURSOR STATEMENTS BY PRIMARY KEY:          00340000
*   THIS ROUTINE HANDLES PRIMARY KEY SEQUENTIAL CURSORS.                00341000
**********************************************************************  00342000
*                                                                       00343000
NXTXC0   DS    0H                                                       00344000
         USING NXTXC0,12               ESTABLISH BASE REGISTER          00345000
         MVI   SQWKMRP,X'87'           CLOSE CURSOR & SET HOST KEY 0    00346000
         L     15,SQW@SQRX             LOAD INTERFACE ROUTINE ADDRESS   00347000
         BALR  14,15                   MOVE REQUESTED DATA              00348000
         LH    1,SQWCSRSP              LOAD CURRENT CURSOR POINTER      00349000
         LA    1,4(1)                  INCREMENT TO NEXT CURSOR         00350000
         STH   1,SQWCSRSP              SAVE POINTER FOR NEXT CALL       00351000
         LA    12,NXTXC0P(1)           LOAD POINTER TO NEXT CURSOR      00352000
         L     12,0(12)                LOAD CURSOR ROUTINE ADDRESS      00353000
         BR    12                      GO TO CURRENT CURSOR ROUTINE     00354000
NXTXC0P  DC    A(0)                                                     00355000
         DC    A(NXTGT002)                                              00356000
         DC    A(NXTGT003)                                              00357000
         DC    A(NXTGT099)                                              00358000
         DC    A(NXTGT003)                                              00359000
         DC    A(NXTGT099)                                              00360000
         DC    A(NXTGT099)                                              00361000
NXTGT099 LA    0,4                     LOAD VALUE 4 IN REGISTER 0       00362000
         SR    1,0                     ADJUST BACK TO CURRENT POINTER   00363000
         STH   1,SQWCSRSP              SAVE POINTER FOR CURSOR CLOSE    00364000
         LA    0,100                   LOAD VALUE 100 IN REGISTER 0     00365000
         ST    0,SQLCODE               SET SQLCODE TO NO MORE ROWS      00366000
         L     14,SQW@RET              LOAD RETURN ADDRESS              00367000
         BR    14                      RETURN TO SQI                    00368000
         LTORG                                                          00369000
*                                                                       00370000
NXTGT002 DS    0H                                                       00371000
         USING NXTGT002,12             ESTABLISH BASE REGISTER          00372000
         EXEC  SQL DECLARE S06GT002 CURSOR                             *00373000
               WITH ROWSET POSITIONING                                 *00374000
               FOR SELECT                                              *00375000
                   INST_NBR,                                           *00376000
                   RECORD_NBR,                                         *00377000
                   CATEGORY_CODE,                                      *00378000
                   AUDIT_DATE,                                         *00379000
                   AUDIT_TIME,                                         *00380000
                   AUDIT_USER,                                         *00381000
                   AUDIT_ORG,                                          *00382000
                   DESCRIPTION,                                        *00383000
                   BAL_CODE,                                           *00384000
                   BAL_REQD_ENROLL,                                    *00385000
                   BAL_REQD_INCEN                                      *00386000
                 FROM S06                                              *00387000
                 WHERE                                                 *00388000
                   INST_NBR = :INST AND                                *00389000
                   RECORD_NBR >                                        *00390000
                     :RECNBR                                           *00391000
                 ORDER BY RECORD_NBR ASC,                              *00392000
                   CATEGORY_CODE ASC                                   *00393000
                 OPTIMIZE FOR 1 ROW FOR READ ONLY                       00394000
         EXEC  SQL OPEN S06GT002                                        00395000
         ICM   15,B'1111',SQLCODE      IS RETURN CODE ZERO ?            00396000
         BNZ   *+14                    NO - RETURN ERROR                00397000
         MVC   SQWCSRCA,=A(CLSGT002)   SET CURSOR CLOSE ROUTINE ADDRESS 00398000
         L     12,SQWCSRRA             LOAD RETURN ADDRESS              00399000
         BR    12                      RETURN TO FETCH ROUTINE          00400000
         L     14,SQW@RET              LOAD RETURN ADDRESS              00401000
         BR    14                      RETURN TO CALLER                 00402000
         LTORG                                                          00403000
*                                                                       00404000
NXTGT003 DS    0H                                                       00405000
         USING NXTGT003,12             ESTABLISH BASE REGISTER          00406000
         EXEC  SQL DECLARE S06GT003 CURSOR                             *00407000
               WITH ROWSET POSITIONING                                 *00408000
               FOR SELECT                                              *00409000
                   INST_NBR,                                           *00410000
                   RECORD_NBR,                                         *00411000
                   CATEGORY_CODE,                                      *00412000
                   AUDIT_DATE,                                         *00413000
                   AUDIT_TIME,                                         *00414000
                   AUDIT_USER,                                         *00415000
                   AUDIT_ORG,                                          *00416000
                   DESCRIPTION,                                        *00417000
                   BAL_CODE,                                           *00418000
                   BAL_REQD_ENROLL,                                    *00419000
                   BAL_REQD_INCEN                                      *00420000
                 FROM S06                                              *00421000
                 WHERE                                                 *00422000
                   INST_NBR >                                          *00423000
                     :INST                                             *00424000
                 ORDER BY INST_NBR ASC,                                *00425000
                   RECORD_NBR ASC,                                     *00426000
                   CATEGORY_CODE ASC                                   *00427000
                 OPTIMIZE FOR 1 ROW FOR READ ONLY                       00428000
         EXEC  SQL OPEN S06GT003                                        00429000
         ICM   15,B'1111',SQLCODE      IS RETURN CODE ZERO ?            00430000
         BNZ   *+14                    NO - RETURN ERROR                00431000
         MVC   SQWCSRCA,=A(CLSGT003)   SET CURSOR CLOSE ROUTINE ADDRESS 00432000
         L     12,SQWCSRRA             LOAD RETURN ADDRESS              00433000
         BR    12                      RETURN TO FETCH ROUTINE          00434000
         L     14,SQW@RET              LOAD RETURN ADDRESS              00435000
         BR    14                      RETURN TO CALLER                 00436000
         LTORG                                                          00437000
*                                                                       00438000
**********************************************************************  00439000
* FETCH FROM SEQUENTIAL CURSOR STATEMENT FOR PRIMARY KEY:               00440000
*   THIS STATEMENT SUPPORTS THE GET-GE AND GET-NEXT VERBS.              00441000
*   IT WILL FOLLOW A SUCCESSFUL SELECT SEQUENTIAL STATEMENT TO          00442000
*     RETRIEVE THE ACTUAL ROW.                                          00443000
*   THE GET-GE-LOCK AND GET-NEXT-LOCK VERBS USE A DIFFERENT             00444000
*     FETCH STATEMENT AS ONLY THE KEY FIELDS ARE NEEDED.                00445000
**********************************************************************  00446000
*                                                                       00447000
FETDC0   DS    0H                                                       00448000
         USING FETDC0,12               ESTABLISH BASE REGISTER          00449000
         MVC   SQWCSRRA,=A(FETDC0)     SET RETURN ROUTINE ADDRESS       00450000
         MVC   SQWCSRBR,=A(NXTXC0)     SET CURSOR ROUTINE ADDRESS       00451000
         MVC   SQWRSFVC,=AL2(TBLCOLMS) FETCH ALL COLUMNS IN TABLE       00452000
         LH    1,SQWCSRSP              LOAD CURRENT CURSOR POINTER      00453000
         LA    12,FETDC0P(1)           LOAD POINTER TO FETCH ROUTINE    00454000
         L     12,0(12)                LOAD FETCH ROUTINE ADDRESS       00455000
         BR    12                      GO TO CURRENT FETCH ROUTINE      00456000
FETDC0P  DC    A(FETGE001)                                              00457000
         DC    A(FETGT002)                                              00458000
         DC    A(FETGT003)                                              00459000
         DC    A(FETGE002)                                              00460000
         DC    A(FETGT003)                                              00461000
         DC    A(FETGE003)                                              00462000
         DC    A(0)                                                     00463000
         LTORG                                                          00464000
*                                                                       00465000
**********************************************************************  00466000
* FETCH FROM SEQUENTIAL CURSOR FOR EVENTUAL UPDATE STATEMENT FOR        00467000
* THE PRIMARY KEY:                                                      00468000
*   THIS STATEMENT SUPPORTS THE GET-GE-LOCK AND GET-NEXT-LOCK           00469000
*     VERBS.                                                            00470000
*   IT WILL FOLLOW A SUCCESSFUL SELECT SEQUENTIAL STATEMENT TO          00471000
*     RETRIEVE THE ACTUAL ROW.                                          00472000
*   ONLY THE PRIMARY KEY FIELDS ARE RETRIEVED AS A SELECT FOR UPDATE    00473000
*     STATEMENT WILL FOLLOW AND RETREIVAL OF THE ACTUAL ROW             00474000
*     WILL BE THRU THE UPDATE CURSOR.                                   00475000
**********************************************************************  00476000
*                                                                       00477000
FETKC0   DS    0H                                                       00478000
         USING FETKC0,12               ESTABLISH BASE REGISTER          00479000
         MVC   SQWCSRRA,=A(FETKC0)     SET RETURN ROUTINE ADDRESS       00480000
         MVC   SQWCSRBR,=A(NXTXC0)     SET CURSOR ROUTINE ADDRESS       00481000
         MVC   SQWRSFVC,=AL2(KY0COLMS) ONLY FETCH KEY COLUMNS           00482000
         LH    1,SQWCSRSP              LOAD CURRENT CURSOR POINTER      00483000
         LA    12,FETKC0P(1)           LOAD POINTER TO FETCH ROUTINE    00484000
         L     12,0(12)                LOAD FETCH ROUTINE ADDRESS       00485000
         BR    12                      GO TO CURRENT FETCH ROUTINE      00486000
FETKC0P  DC    A(FETGE001)                                              00487000
         DC    A(FETGT002)                                              00488000
         DC    A(FETGT003)                                              00489000
         DC    A(FETGE002)                                              00490000
         DC    A(FETGT003)                                              00491000
         DC    A(FETGE003)                                              00492000
         DC    A(0)                                                     00493000
         LTORG                                                          00494000
*                                                                       00495000
FETGE001 DS    0H                                                       00496000
         USING FETGE001,12             ESTABLISH BASE REGISTER          00497000
         MVI   SQWKMRP,X'04'           CHECK FOR MORE ROWS IN ROWSET    00498000
         L     15,SQW@SQRX             LOAD INTERFACE ROUTINE ADDRESS   00499000
         BALR  14,15                   MOVE REQUESTED DATA              00500000
         EXEC  SQL FETCH NEXT ROWSET FROM S06GE001                     *00501000
               FOR :SQWRSRMX ROWS INTO DESCRIPTOR :SQDSQLDA             00502000
         MVI   SQWKMRP,X'05'           MOVE HOST ARRAY DATA TO RECORD   00503000
         L     15,SQW@SQRX             LOAD INTERFACE ROUTINE ADDRESS   00504000
         BALR  14,15                   MOVE REQUESTED DATA              00505000
         L     14,SQW@RET              LOAD RETURN ADDRESS              00506000
         BR    14                      RETURN TO CALLER                 00507000
         LTORG                                                          00508000
*                                                                       00509000
FETGE002 DS    0H                                                       00510000
         USING FETGE002,12             ESTABLISH BASE REGISTER          00511000
         MVI   SQWKMRP,X'04'           CHECK FOR MORE ROWS IN ROWSET    00512000
         L     15,SQW@SQRX             LOAD INTERFACE ROUTINE ADDRESS   00513000
         BALR  14,15                   MOVE REQUESTED DATA              00514000
         EXEC  SQL FETCH NEXT ROWSET FROM S06GE002                     *00515000
               FOR :SQWRSRMX ROWS INTO DESCRIPTOR :SQDSQLDA             00516000
         MVI   SQWKMRP,X'05'           MOVE HOST ARRAY DATA TO RECORD   00517000
         L     15,SQW@SQRX             LOAD INTERFACE ROUTINE ADDRESS   00518000
         BALR  14,15                   MOVE REQUESTED DATA              00519000
         L     14,SQW@RET              LOAD RETURN ADDRESS              00520000
         BR    14                      RETURN TO CALLER                 00521000
         LTORG                                                          00522000
*                                                                       00523000
FETGE003 DS    0H                                                       00524000
         USING FETGE003,12             ESTABLISH BASE REGISTER          00525000
         MVI   SQWKMRP,X'04'           CHECK FOR MORE ROWS IN ROWSET    00526000
         L     15,SQW@SQRX             LOAD INTERFACE ROUTINE ADDRESS   00527000
         BALR  14,15                   MOVE REQUESTED DATA              00528000
         EXEC  SQL FETCH NEXT ROWSET FROM S06GE003                     *00529000
               FOR :SQWRSRMX ROWS INTO DESCRIPTOR :SQDSQLDA             00530000
         MVI   SQWKMRP,X'05'           MOVE HOST ARRAY DATA TO RECORD   00531000
         L     15,SQW@SQRX             LOAD INTERFACE ROUTINE ADDRESS   00532000
         BALR  14,15                   MOVE REQUESTED DATA              00533000
         L     14,SQW@RET              LOAD RETURN ADDRESS              00534000
         BR    14                      RETURN TO CALLER                 00535000
         LTORG                                                          00536000
*                                                                       00537000
FETGT002 DS    0H                                                       00538000
         USING FETGT002,12             ESTABLISH BASE REGISTER          00539000
         MVI   SQWKMRP,X'04'           CHECK FOR MORE ROWS IN ROWSET    00540000
         L     15,SQW@SQRX             LOAD INTERFACE ROUTINE ADDRESS   00541000
         BALR  14,15                   MOVE REQUESTED DATA              00542000
         EXEC  SQL FETCH NEXT ROWSET FROM S06GT002                     *00543000
               FOR :SQWRSRMX ROWS INTO DESCRIPTOR :SQDSQLDA             00544000
         MVI   SQWKMRP,X'05'           MOVE HOST ARRAY DATA TO RECORD   00545000
         L     15,SQW@SQRX             LOAD INTERFACE ROUTINE ADDRESS   00546000
         BALR  14,15                   MOVE REQUESTED DATA              00547000
         L     14,SQW@RET              LOAD RETURN ADDRESS              00548000
         BR    14                      RETURN TO CALLER                 00549000
         LTORG                                                          00550000
*                                                                       00551000
FETGT003 DS    0H                                                       00552000
         USING FETGT003,12             ESTABLISH BASE REGISTER          00553000
         MVI   SQWKMRP,X'04'           CHECK FOR MORE ROWS IN ROWSET    00554000
         L     15,SQW@SQRX             LOAD INTERFACE ROUTINE ADDRESS   00555000
         BALR  14,15                   MOVE REQUESTED DATA              00556000
         EXEC  SQL FETCH NEXT ROWSET FROM S06GT003                     *00557000
               FOR :SQWRSRMX ROWS INTO DESCRIPTOR :SQDSQLDA             00558000
         MVI   SQWKMRP,X'05'           MOVE HOST ARRAY DATA TO RECORD   00559000
         L     15,SQW@SQRX             LOAD INTERFACE ROUTINE ADDRESS   00560000
         BALR  14,15                   MOVE REQUESTED DATA              00561000
         L     14,SQW@RET              LOAD RETURN ADDRESS              00562000
         BR    14                      RETURN TO CALLER                 00563000
         LTORG                                                          00564000
*                                                                       00565000
**********************************************************************  00566000
* CLOSE SEQUENTIAL CURSOR STATEMENT FOR PRIMARY KEY:                    00567000
*   THIS STATEMENT SUPPORTS THE GET-GE, GET-GE-LOCK, GET-NEXT,          00568000
*     AND GET-NEXT-LOCK VERBS.                                          00569000
*   IT WILL FOLLOW THE LAST FETCH FROM SEQUENTIAL CURSOR STATEMENT      00570000
*     TO CLOSE THE SEQUENTIAL CURSOR.                                   00571000
**********************************************************************  00572000
*                                                                       00573000
CLSXC0   DS    0H                                                       00574000
         USING CLSXC0,12               ESTABLISH BASE REGISTER          00575000
         L     12,SQWCSRCA             SET CURSOR CLOSE ROUTINE ADDRESS 00576000
         XC    SQWCSRCA,SQWCSRCA       CLEAR CURSOR CLOSE ROUTINE ADDR  00577000
         BR    12                      GO TO CURSOR CLOSE ROUTINE       00578000
         LTORG                                                          00579000
*                                                                       00580000
CLSGE001 DS    0H                                                       00581000
         USING CLSGE001,12             ESTABLISH BASE REGISTER          00582000
         EXEC  SQL CLOSE S06GE001                                       00583000
         L     14,SQW@RET              LOAD RETURN ADDRESS              00584000
         BR    14                      RETURN TO CALLER                 00585000
         LTORG                                                          00586000
*                                                                       00587000
CLSGE002 DS    0H                                                       00588000
         USING CLSGE002,12             ESTABLISH BASE REGISTER          00589000
         EXEC  SQL CLOSE S06GE002                                       00590000
         L     14,SQW@RET                                               00591000
         BR    14                                                       00592000
         LTORG                                                          00593000
*                                                                       00594000
CLSGE003 DS    0H                                                       00595000
         USING CLSGE003,12             ESTABLISH BASE REGISTER          00596000
         EXEC  SQL CLOSE S06GE003                                       00597000
         L     14,SQW@RET                                               00598000
         BR    14                                                       00599000
         LTORG                                                          00600000
*                                                                       00601000
CLSGT002 DS    0H                                                       00602000
         USING CLSGT002,12             ESTABLISH BASE REGISTER          00603000
         EXEC  SQL CLOSE S06GT002                                       00604000
         L     14,SQW@RET              LOAD RETURN ADDRESS              00605000
         BR    14                      RETURN TO CALLER                 00606000
         LTORG                                                          00607000
*                                                                       00608000
CLSGT003 DS    0H                                                       00609000
         USING CLSGT003,12             ESTABLISH BASE REGISTER          00610000
         EXEC  SQL CLOSE S06GT003                                       00611000
         L     14,SQW@RET              LOAD RETURN ADDRESS              00612000
         BR    14                      RETURN TO CALLER                 00613000
         LTORG                                                          00614000
*                                                                       00615000
**********************************************************************  00616000
* ALTERNATE KEY 1 NOT DEFINED                                           00617000
**********************************************************************  00618000
*                                                                       00619000
SELIN1   DS    0H                                                       00620000
SELKY1   DS    0H                                                       00621000
SELXC1   DS    0H                                                       00622000
FETDC1   DS    0H                                                       00623000
FETKC1   DS    0H                                                       00624000
CLSXC1   DS    0H                                                       00625000
         DC    X'00DEAD01'             FORCE S0C1 ABEND                 00626000
*                                                                       00627000
**********************************************************************  00628000
* ALTERNATE KEY 2 NOT DEFINED                                           00629000
**********************************************************************  00630000
*                                                                       00631000
SELIN2   DS    0H                                                       00632000
SELKY2   DS    0H                                                       00633000
SELXC2   DS    0H                                                       00634000
FETDC2   DS    0H                                                       00635000
FETKC2   DS    0H                                                       00636000
CLSXC2   DS    0H                                                       00637000
         DC    X'00DEAD02'             FORCE S0C1 ABEND                 00638000
*                                                                       00639000
**********************************************************************  00640000
* ALTERNATE KEY 3 NOT DEFINED                                           00641000
**********************************************************************  00642000
*                                                                       00643000
SELIN3   DS    0H                                                       00644000
SELKY3   DS    0H                                                       00645000
SELXC3   DS    0H                                                       00646000
FETDC3   DS    0H                                                       00647000
FETKC3   DS    0H                                                       00648000
CLSXC3   DS    0H                                                       00649000
         DC    X'00DEAD03'             FORCE S0C1 ABEND                 00650000
*                                                                       00651000
         DS    0H                      END OF SQL STATEMENTS            00652000
         DC    XL16'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF'                   00653000
*                                                                       00654000
**********************************************************************  00655000
* DUMMY ENTRY POINT DSNHLI                                              00656000
**********************************************************************  00657000
*                                                                       00658000
         ENTRY DSNHLI                                                   00659000
DSNHLI   DS    0H                                                       00660000
         L     15,SQW@CAF              LOAD ENTRY POINT TO ATTACH       00661000
         BR    15                      BRANCH TO ATTACH FACILITY        00662000
*                                                                       00663000
**********************************************************************  00664000
* CONVERSION TABLE VALUES FOR ALL FIELDS IN THIS TABLE                  00665000
**********************************************************************  00666000
*                                                                       00667000
* CONVTAB1 TABLE ENTRY FORMAT IS:                                       00668000
*        DC    H'RRRR',H'VVVV',H'LLLL',X'KK',X'DD'                      00669000
* OR:                                                                   00670000
*        DC    H'RRRR',H'VVVV',X'ZZPP',X'KK',X'DD'                      00671000
* WHERE:                                                                00672000
*   RRRR = RECORD AREA OFFSET                                           00673000
*   VVVV = HOST VARIABLE AREA OFFSET                                    00674000
*   LLLL = HALFWORD LENGTH TO MOVE                                      00675000
*   ZZPP = CONVERT ZONED/PACKED LENGTHS (MINUS 1)                       00676000
*   KK   = KEY FIELD MASK:                                              00677000
*            80 = KEY 0 FIELD                                           00678000
*            40 = KEY 1 FIELD                                           00679000
*            20 = KEY 2 FIELD                                           00680000
*            10 = KEY 3 FIELD                                           00681000
*   DD   = DATA FIELD MASK:                                             00682000
*            80 = RECORD FIELD IS PACKED                                00683000
*            40 = HOST VARIABLE IS PACKED                               00684000
*            20 = NULLABLE FIELD                                        00685000
*            01 = DATE FIELD                                            00686000
*            02 = TIME FIELD                                            00687000
*                                                                       00688000
CONVTAB1 DS    0H                      RECORD/HOST VARIABLE CONVERSIONS 00689000
         DC    H'0000',H'0000',H'0014',X'80',X'00'                      00690000
         DC    H'0014',H'0014',H'0058',X'00',X'00'                      00691000
         DC    8X'FF'                                                   00692000
*                                                                       00693000
* CONVTAB2 TABLE COLUMNS ENTRY FORMAT IS:                               00694000
*        DC    H'RRRR',H'LLLL',H'TTTT'                                  00695000
* OR:                                                                   00696000
*        DC    H'RRRR',X'PPSS',H'TTTT'                                  00697000
* WHERE:                                                                00698000
*   RRRR = RECORD AREA OFFSET                                           00699000
*   LLLL = HALFWORD LENGTH OF HOST VARIABLE (NON-DECIMAL DATA TYPE)     00700000
*   PPSS = PRECISION AND SCALE (DECIMAL DATA TYPE)                      00701000
*   TTTT = SQLDA DATA TYPE:                                             00702000
*            452 = CHAR       453 = CHAR NULLABLE                       00703000
*            484 = DECIMAL    485 = DECIMAL NULLABLE                    00704000
*            496 = INTEGER    497 = INTEGER NULLABLE                    00705000
*            500 = SMALLINT   501 = SMALLINT NULLABLE                   00706000
*                                                                       00707000
CONVTAB2 DS    0F                      RECORD DATA ATTRIBUTE TABLE      00708000
         DC    AL4(TBLCOLMS*44+16)     TOTAL SQLDA SIZE                 00709000
         DC    AL2(TBLCOLMS)           NUMBER OF COLUMNS IN TABLE       00710000
         DC    AL2(KY0COLMS)           NUMBER OF PRIMARY KEY COLUMNS    00711000
         DC    AL2(KY1COLMS)           NUMBER OF ALT1 KEY COLUMNS       00712000
         DC    AL2(KY2COLMS)           NUMBER OF ALT2 KEY COLUMNS       00713000
         DC    AL2(KY3COLMS)           NUMBER OF ALT3 KEY COLUMNS       00714000
         DC    AL2(00072)              SUMMATION OF ALL COLUMN LENGTHS  00715000
         DC    AL2(01000)              PRIMARY MULTIROW FETCH ARRAY     00716000
         DC    AL2(00000)              ALT 1 MULTIROW FETCH ARRAY       00717000
         DC    AL2(00000)              ALT 2 MULTIROW FETCH ARRAY       00718000
         DC    AL2(00000)              ALT 3 MULTIROW FETCH ARRAY       00719000
         DC    AL2(00000)              PRIMARY KEY LOW VALUE LEVEL      00720000
         DC    AL2(00000)              ALT 1 KEY LOW VALUE LEVEL        00721000
         DC    AL2(00000)              ALT 2 KEY LOW VALUE LEVEL        00722000
         DC    AL2(00000)              ALT 3 KEY LOW VALUE LEVEL        00723000
CONVDATA DS    0H                                                       00724000
         DC    H'0000',H'0004',H'452'  INST_NBR                         00725000
         DC    H'0004',H'0004',H'452'  RECORD_NBR                       00726000
         DC    H'0008',H'0006',H'452'  CATEGORY_CODE                    00727000
KEYCOLMS EQU   (*-CONVDATA)/6          NUMBER OF KEY COLUMNS IN TABLE   00728000
         DC    H'0014',X'0900',H'484'  AUDIT_DATE                       00729000
         DC    H'0019',X'0900',H'484'  AUDIT_TIME                       00730000
         DC    H'0024',H'0008',H'452'  AUDIT_USER                       00731000
         DC    H'0032',H'0006',H'452'  AUDIT_ORG                        00732000
         DC    H'0038',H'0020',H'452'  DESCRIPTION                      00733000
         DC    H'0058',H'0002',H'452'  BAL_CODE                         00734000
         DC    H'0060',X'0B02',H'484'  BAL_REQD_ENROLL                  00735000
         DC    H'0066',X'0B02',H'484'  BAL_REQD_INCEN                   00736000
TBLCOLMS EQU   (*-CONVDATA)/6          NUMBER OF COLUMNS IN TABLE       00737000
KY0COLMS EQU   00003                   NUMBER OF PRIMARY KEY COLUMNS    00738000
KY1COLMS EQU   00000                   NUMBER OF ALT 1 KEY COLUMNS      00739000
KY2COLMS EQU   00000                   NUMBER OF ALT 2 KEY COLUMNS      00740000
KY3COLMS EQU   00000                   NUMBER OF ALT 3 KEY COLUMNS      00741000
*                                                                       00742000
         LTORG                                                          00743000
         END                                                            00744000
