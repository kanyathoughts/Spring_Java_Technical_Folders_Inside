###################################################################################################################################
## TEST TAXONOMY CATEGORY
###################################################################################################################################
INSERT INTO TaxonomyCategory SET id=sequence('TaxonomyCategory_Sequence').next(), name="Technical Taxonomies", projectId=1;
INSERT INTO TaxonomyCategory SET id=sequence('TaxonomyCategory_Sequence').next(), name="Business Taxonomies", projectId=1;
INSERT INTO TaxonomyCategory SET id=sequence('TaxonomyCategory_Sequence').next(), name="Technical Taxonomies", projectId=2;
INSERT INTO TaxonomyCategory SET id=sequence('TaxonomyCategory_Sequence').next(), name="Business Taxonomies", projectId=2;
INSERT INTO TaxonomyCategory SET id=sequence('TaxonomyCategory_Sequence').next(), name="Technical Taxonomies", projectId=3;
INSERT INTO TaxonomyCategory SET id=sequence('TaxonomyCategory_Sequence').next(), name="Business Taxonomies", projectId=3;
INSERT INTO TaxonomyCategory SET id=sequence('TaxonomyCategory_Sequence').next(), name="Technical Taxonomies", projectId=4;
INSERT INTO TaxonomyCategory SET id=sequence('TaxonomyCategory_Sequence').next(), name="Business Taxonomies", projectId=4;	

###################################################################################################################################
## UPSERT TEST OBJECTTYPES
###################################################################################################################################
UPDATE ObjectType SET technologyLink=(SELECT FROM TechnologyEnum WHERE name="NATURAL"), typeLink=(SELECT FROM TypeEnum WHERE name="PROGRAM"), storageLink=(SELECT FROM StorageEnum WHERE name="FILE"), originLink=(SELECT FROM OriginEnum WHERE name="CUSTOM") UPSERT RETURN AFTER @rid WHERE technologyLink=(SELECT FROM TechnologyEnum WHERE name="NATURAL") AND typeLink=(SELECT FROM TypeEnum WHERE name="PROGRAM") AND storageLink=(SELECT FROM StorageEnum WHERE name="FILE") AND originLink=(SELECT FROM OriginEnum WHERE name="CUSTOM");
UPDATE ObjectType SET technologyLink=(SELECT FROM TechnologyEnum WHERE name="JCL"), typeLink=(SELECT FROM TypeEnum WHERE name="EXEC_PGM"), storageLink=(SELECT FROM StorageEnum WHERE name="FILE_SECTION"), originLink=(SELECT FROM OriginEnum WHERE name="CUSTOM") UPSERT RETURN AFTER @rid WHERE technologyLink=(SELECT FROM TechnologyEnum WHERE name="JCL") AND typeLink=(SELECT FROM TypeEnum WHERE name="EXEC_PGM") AND storageLink=(SELECT FROM StorageEnum WHERE name="FILE_SECTION") AND originLink=(SELECT FROM OriginEnum WHERE name="CUSTOM");
UPDATE ObjectType SET technologyLink=(SELECT FROM TechnologyEnum WHERE name="COBOL"), typeLink=(SELECT FROM TypeEnum WHERE name="PROGRAM"), storageLink=(SELECT FROM StorageEnum WHERE name="FILE"), originLink=(SELECT FROM OriginEnum WHERE name="CUSTOM") UPSERT RETURN AFTER @rid WHERE technologyLink=(SELECT FROM TechnologyEnum WHERE name="COBOL") AND typeLink=(SELECT FROM TypeEnum WHERE name="PROGRAM") AND storageLink=(SELECT FROM StorageEnum WHERE name="FILE") AND originLink=(SELECT FROM OriginEnum WHERE name="CUSTOM");
UPDATE ObjectType SET technologyLink=(SELECT FROM TechnologyEnum WHERE name="COBOL"), typeLink=(SELECT FROM TypeEnum WHERE name="COPYBOOK"), storageLink=(SELECT FROM StorageEnum WHERE name="FILE"), originLink=(SELECT FROM OriginEnum WHERE name="CUSTOM") UPSERT RETURN AFTER @rid WHERE technologyLink=(SELECT FROM TechnologyEnum WHERE name="COBOL") AND typeLink=(SELECT FROM TypeEnum WHERE name="COPYBOOK") AND storageLink=(SELECT FROM StorageEnum WHERE name="FILE") AND originLink=(SELECT FROM OriginEnum WHERE name="CUSTOM");
UPDATE ObjectType SET technologyLink=(SELECT FROM TechnologyEnum WHERE name="COBOL"), typeLink=(SELECT FROM TypeEnum WHERE name="BMS_MAPSET"), storageLink=(SELECT FROM StorageEnum WHERE name="FILE"), originLink=(SELECT FROM OriginEnum WHERE name="CUSTOM") UPSERT RETURN AFTER @rid WHERE technologyLink=(SELECT FROM TechnologyEnum WHERE name="COBOL") AND typeLink=(SELECT FROM TypeEnum WHERE name="BMS_MAPSET") AND storageLink=(SELECT FROM StorageEnum WHERE name="FILE") AND originLink=(SELECT FROM OriginEnum WHERE name="CUSTOM");
UPDATE ObjectType SET technologyLink=(SELECT FROM TechnologyEnum WHERE name="BASIC"), typeLink=(SELECT FROM TypeEnum WHERE name="OBJECT"), storageLink=(SELECT FROM StorageEnum WHERE name="FILE"), originLink=(SELECT FROM OriginEnum WHERE name="CUSTOM") UPSERT RETURN AFTER @rid WHERE technologyLink=(SELECT FROM TechnologyEnum WHERE name="BASIC") AND typeLink=(SELECT FROM TypeEnum WHERE name="OBJECT") AND storageLink=(SELECT FROM StorageEnum WHERE name="FILE") AND originLink=(SELECT FROM OriginEnum WHERE name="CUSTOM");
UPDATE ObjectType SET technologyLink=(SELECT FROM TechnologyEnum WHERE name="BASIC"), typeLink=(SELECT FROM TypeEnum WHERE name="FUNCTION"), storageLink=(SELECT FROM StorageEnum WHERE name="FILE_SECTION"), originLink=(SELECT FROM OriginEnum WHERE name="CUSTOM") UPSERT RETURN AFTER @rid WHERE technologyLink=(SELECT FROM TechnologyEnum WHERE name="BASIC") AND typeLink=(SELECT FROM TypeEnum WHERE name="FUNCTION") AND storageLink=(SELECT FROM StorageEnum WHERE name="FILE_SECTION") AND originLink=(SELECT FROM OriginEnum WHERE name="CUSTOM");
UPDATE ObjectType SET technologyLink=(SELECT FROM TechnologyEnum WHERE name="BASIC"), typeLink=(SELECT FROM TypeEnum WHERE name="PROGRAM"), storageLink=(SELECT FROM StorageEnum WHERE name="FILE_SECTION"), originLink=(SELECT FROM OriginEnum WHERE name="CUSTOM") UPSERT RETURN AFTER @rid WHERE technologyLink=(SELECT FROM TechnologyEnum WHERE name="BASIC") AND typeLink=(SELECT FROM TypeEnum WHERE name="PROGRAM") AND storageLink=(SELECT FROM StorageEnum WHERE name="FILE_SECTION") AND originLink=(SELECT FROM OriginEnum WHERE name="CUSTOM");
UPDATE ObjectType SET technologyLink=(SELECT FROM TechnologyEnum WHERE name="BASIC"), typeLink=(SELECT FROM TypeEnum WHERE name="DIALOG"), storageLink=(SELECT FROM StorageEnum WHERE name="FILE_SECTION"), originLink=(SELECT FROM OriginEnum WHERE name="CUSTOM") UPSERT RETURN AFTER @rid WHERE technologyLink=(SELECT FROM TechnologyEnum WHERE name="BASIC") AND typeLink=(SELECT FROM TypeEnum WHERE name="DIALOG") AND storageLink=(SELECT FROM StorageEnum WHERE name="FILE_SECTION") AND originLink=(SELECT FROM OriginEnum WHERE name="CUSTOM");

###################################################################################################################################
## TEST MODULES
###################################################################################################################################
INSERT INTO Module SET id=sequence('Module_Sequence').next(), uid=sequence('ModuleUid_Sequence').next(), name="PRGE", path="src/cobol/programs/PRGE.cbl", description="A test program", sourceAttachmentLink=(INSERT INTO SourceObject SET content="       DATA DIVISION.\n       WORKING-STORAGE SECTION.\n       01  MY-HEX-SHOW-CHARS PIC X(16) VALUE '0123456789ABCDEF'.\n       01  REDEFINES MY-HEX-SHOW-CHARS.\n              05 MY-HEX-SHOW-CHAR PIC X(1) OCCURS 16.\n       01  REDEFINES MY-HEX-SHOW-CHARS.\n              05 MY-HEX-SHOW-CHAR2 PIC X(1) OCCURS 16.\n       PROCEDURE DIVISION\n       .\n", contentHash='1', name="PRGE", path="src/cobol/programs/PRGE.cbl", id=sequence('SourceObject_Sequence').next(), contentRevision=1, metaDataRevision=1, technologyLink=(SELECT FROM TechnologyEnum WHERE name='COBOL'),typeLink = (SELECT FROM TypeEnum WHERE name='PROGRAM'), projectId=2 RETURN @rid), projectId=2, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="COBOL") AND typeLink IN (SELECT FROM TypeEnum WHERE name="PROGRAM") AND storageLink IN (SELECT FROM StorageEnum WHERE name="FILE") AND originLink IN (SELECT FROM OriginEnum WHERE name="CUSTOM")), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED"), creator="DISCOVERY";
INSERT INTO Module SET id=sequence('Module_Sequence').next(), uid=sequence('ModuleUid_Sequence').next(), name="MMRS7102", path="src/cobol/programs/MMRS7102.cbl", description="A test description for MMRS7102", sourceAttachmentLink=(INSERT INTO SourceObject SET content="       PROCEDURE DIVISION.\n           DISPLAY '1'\n           .\n", contentHash='1', name="MMRS7102", path="src/cobol/programs/MMRS7102.cbl", id=sequence('SourceObject_Sequence').next(), contentRevision=1, metaDataRevision=1, technologyLink=(SELECT FROM TechnologyEnum WHERE name='COBOL'),typeLink = (SELECT FROM TypeEnum WHERE name='PROGRAM'), projectId=2 RETURN @rid), projectId=2, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="COBOL") AND typeLink IN (SELECT FROM TypeEnum WHERE name="PROGRAM") AND storageLink IN (SELECT FROM StorageEnum WHERE name="FILE") AND originLink IN (SELECT FROM OriginEnum WHERE name="CUSTOM")), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED"), creator="DISCOVERY";
INSERT INTO Module SET id=sequence('Module_Sequence').next(), uid=sequence('ModuleUid_Sequence').next(), name="MMRS7103", path="src/cobol/programs/MMRS7103.cbl", description="A test description for MMRS7103", projectId=2, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="COBOL") AND typeLink IN (SELECT FROM TypeEnum WHERE name="PROGRAM") AND storageLink IN (SELECT FROM StorageEnum WHERE name="FILE") AND originLink IN (SELECT FROM OriginEnum WHERE name="CUSTOM")), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED"), creator="DISCOVERY";
INSERT INTO Module SET id=sequence('Module_Sequence').next(), uid=sequence('ModuleUid_Sequence').next(), name="DUPLICATE", path="src/cobol/programs/DUPLICATE.cbl", description="A spring data import taxonomy test program", projectId=2, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="COBOL") AND typeLink IN (SELECT FROM TypeEnum WHERE name="PROGRAM") AND storageLink IN (SELECT FROM StorageEnum WHERE name="FILE") AND originLink IN (SELECT FROM OriginEnum WHERE name="CUSTOM")), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED"), creator="DISCOVERY";
INSERT INTO Module SET id=sequence('Module_Sequence').next(), uid=sequence('ModuleUid_Sequence').next(), name="DUPLICATE", path="src/natural/programs/DUPLICATE.nsp", description="A spring data import taxonomy test program", projectId=2, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="NATURAL") AND typeLink IN (SELECT FROM TypeEnum WHERE name="PROGRAM") AND storageLink IN (SELECT FROM StorageEnum WHERE name="FILE") AND originLink IN (SELECT FROM OriginEnum WHERE name="CUSTOM")), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED"), creator="DISCOVERY";
INSERT INTO Module SET id=sequence('Module_Sequence').next(), uid=sequence('ModuleUid_Sequence').next(), name="VirtualModule", path="", description="A spring data import taxonomy test program", projectId=2, objectTypeLink=(SELECT FROM ObjectType WHERE technologyLink IN (SELECT FROM TechnologyEnum WHERE name="COBOL") AND typeLink IN (SELECT FROM TypeEnum WHERE name="PROGRAM") AND storageLink IN (SELECT FROM StorageEnum WHERE name="FILE") AND originLink IN (SELECT FROM OriginEnum WHERE name="CUSTOM")), identificationLink=(SELECT FROM IdentificationEnum WHERE name="IDENTIFIED"), creator="DISCOVERY";

###################################################################################################################################
## TEST TAXONOMY FOR MULTIPLE TAXONOMY ASSIGNMENTS FOR TYPES
###################################################################################################################################
INSERT INTO TaxonomyEnum SET name="Program Type", projectId=2, categoryLink = (Select from TaxonomyCategory where name="Technical Taxonomies" and projectId=1);
INSERT INTO TaxonomyEnum SET name="File Access", projectid=2, categoryLink = (Select from TaxonomyCategory where name="Technical Taxonomies" and projectId=1);
INSERT INTO Taxonomy SET id=sequence('Taxonomy_Sequence').next(), name="BATCH", projectId=2, typeLink=(SELECT FROM TaxonomyEnum WHERE name="Program Type" AND projectId=2);
INSERT INTO Taxonomy SET id=sequence('Taxonomy_Sequence').next(), name="UI", projectId=2, typeLink=(SELECT FROM TaxonomyEnum WHERE name="Program Type" AND projectId=2);
INSERT INTO Taxonomy SET id=sequence('Taxonomy_Sequence').next(), name="READ", projectId=2, typeLink=(SELECT FROM TaxonomyEnum WHERE name="File Access" AND projectId=2);
INSERT INTO Taxonomy SET id=sequence('Taxonomy_Sequence').next(), name="WRITE", projectId=2, typeLink=(SELECT FROM TaxonomyEnum WHERE name="File Access" AND projectId=2);
INSERT INTO Taxonomy SET id=sequence('Taxonomy_Sequence').next(), name="DATABASE", projectId=2, typeLink=(SELECT FROM TaxonomyEnum WHERE name="Program Type" AND projectId=2);

###################################################################################################################################
## TEST HAS TAXONOMY
###################################################################################################################################
CREATE EDGE HasTaxonomy FROM (SELECT FROM Module WHERE id=2001) TO (SELECT FROM Taxonomy WHERE name="BATCH") SET id=sequence('Reference_Sequence').next();
CREATE EDGE HasTaxonomy FROM (SELECT FROM Module WHERE id=2001) TO (SELECT FROM Taxonomy WHERE name="UI") SET id=sequence('Reference_Sequence').next();
CREATE EDGE HasTaxonomy FROM (SELECT FROM Module WHERE id=2001) TO (SELECT FROM Taxonomy WHERE name="READ") SET id=sequence('Reference_Sequence').next();
CREATE EDGE HasTaxonomy FROM (SELECT FROM Module WHERE id=2001) TO (SELECT FROM Taxonomy WHERE name="WRITE") SET id=sequence('Reference_Sequence').next();
CREATE EDGE HasTaxonomy FROM (SELECT FROM Module WHERE id=2002) TO (SELECT FROM Taxonomy WHERE name="BATCH") SET id=sequence('Reference_Sequence').next();
CREATE EDGE HasTaxonomy FROM (SELECT FROM Module WHERE id=2002) TO (SELECT FROM Taxonomy WHERE name="UI") SET id=sequence('Reference_Sequence').next();