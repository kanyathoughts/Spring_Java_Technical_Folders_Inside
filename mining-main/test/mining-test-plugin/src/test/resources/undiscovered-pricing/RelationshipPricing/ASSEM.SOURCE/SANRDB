**********************************************************************  00001000
*                                                                       00002000
*  SANRDB .... STATIC SQL READ MODULE                                   00003000
*                                                                       00004000
*  CREATION DATE: 04/28/16                                              00005000
*                                                                       00006000
*  FUNCTIONAL DESCRIPTION: THIS PROGRAM CONTAINS THE STATIC SQL         00007000
*  VECTORS REQUIRED TO SUPPORT I/O TO THE SAN TABLE.  IT IS LOADED      00008000
*  BY THE DB2 I/O MANAGER (BIPDB2X).  THIS PROGRAM WILL BE USED         00009000
*  IN BOTH A CICS AND BATCH ENVIRONMENT AND MUST BE RE-ENTRANT          00010000
*  AND VOID OF SVC CALLS.                                               00011000
*                                                                       00012000
*     ***************************************************************   00013000
*     *                                                             *   00013001
*     *                           NOTICE                            *   00013002
*     *                                                             *   00013003
*     *   THIS SOFTWARE IS THE PROPERTY OF AND CONTAINS             *   00013004
*     *   CONFIDENTIAL INFORMATION OF INFOR AND/OR ITS AFFILIATES   *   00013005
*     *   OR SUBSIDIARIES AND SHALL NOT BE DISCLOSED WITHOUT PRIOR  *   00013006
*     *   WRITTEN PERMISSION. LICENSED CUSTOMERS MAY COPY AND       *   00013007
*     *   ADAPT THIS SOFTWARE FOR THEIR OWN USE IN ACCORDANCE WITH  *   00013008
*     *   THE TERMS OF THEIR SOFTWARE LICENSE AGREEMENT.            *   00013009
*     *   ALL OTHER RIGHTS RESERVED.                                *   00013010
*     *                                                             *   00013011
*     *   (C) COPYRIGHT 2017 INFOR.  ALL RIGHTS RESERVED.           *   00013012
*     *   THE WORD AND DESIGN MARKS SET FORTH HEREIN ARE            *   00013013
*     *   TRADEMARKS AND/OR REGISTERED TRADEMARKS OF INFOR          *   00013014
*     *   AND/OR ITS AFFILIATES AND SUBSIDIARIES. ALL RIGHTS        *   00013015
*     *   RESERVED.  ALL OTHER TRADEMARKS LISTED HEREIN ARE         *   00013016
*     *   THE PROPERTY OF THEIR RESPECTIVE OWNERS.                  *   00013017
*     *                                                             *   00013018
*     ***************************************************************   00013019
*     *     Infopoint Relationship Pricing                          *   00013020
*     *     RP 5.0.01                                               *   00013021
*     ***************************************************************   00013022
*                                                                       00014000
**********************************************************************  00015000
* SQI COMMUNICATION AREA DSECT ADDRESSED BY REGISTER 11                 00016000
**********************************************************************  00017000
*                                                                       00018000
COM#AREA DSECT                         SQI COMMUNICATION AREA           00019000
SQW@CAF  DS    F                       ADDRESS OF CALL ATTACH FACILITY  00020000
SQW@RET  DS    F                       RETURN TO THIS SQI ADDRESS       00021000
SQWSQLCA DS    XL136                   SQLCA FOR I/O MODULE USE         00022000
         ORG   SQWSQLCA                                                 00023000
         EXEC  SQL INCLUDE SQLCA                                        00024000
SQWSQLDL DS    F                       LENGTH OF DYNAMIC SQLDSECT       00025000
SQWSQLD  DS    F                       DYNAMIC SQLDSECT                 00026000
SQW@SQRX DS    F                       SQI INTERFACE ROUTINE ADDRESS    00027000
SQWPARM1 DS    F                       SQI PARAMETER 1 (MODULE ADDRESS) 00028000
SQWINTHV DS    F                       INTEGER HOST VARIABLE            00029000
SQWCSRBR DS    F                       CURSOR ROUTINE BASE REGISTER     00030000
SQWCSRRA DS    F                       CURSOR ROUTINE RETURN ADDRESS    00031000
SQWRSFVC DS    H                       ROWSET FETCH SQLVAR COUNT        00032000
SQWKMRP  DS    CL1                     SQI KEY MASK / ROUTINE POINTER   00033000
         DS    CL5                     RESERVED                         00034000
SQWIOSI  DS    0CL24                   I/O MODULE STATE INFORMATION     00035000
SQWSQLDA DS    F                       ROWSET SQLDA STORAGE ADDRESS     00036000
SQWRSRMX DS    H                       ROWSET MAX NUMBER OF ROWS        00037000
SQWRSRCT DS    H                       ROWSET RETURNED ROW COUNT        00038000
SQWRSROC DS    H                       ROWSET ROW OCCURS COUNT          00039000
SQWRSFCD DS    H                       ROWSET FETCH SQLCODE             00040000
SQWCSRCA DS    F                       READ CURSOR CLOSE ROUTINE ADDR   00041000
SQWCSUCA DS    F                       UPDATE CURSOR CLOSE ROUTINE ADDR 00042000
SQWCSRLV DS    CL1                     CURSOR CASCADE LEVEL LIMIT       00043000
SQWCSRCC DS    CL1                     CURSOR CASCADE COUNT             00044000
SQWCSRSP DS    H                       CURSOR ROUTINE POINTER           00045000
         DS    CL4                     RESERVED                         00046000
SQWCMD   DS    CL2                     DBS COMMAND CODE                 00047000
SQWORG   DS    CL6                     RECORD ORG CODE                  00048000
ASMREC   DS    0F                      ASSEMBLER RECORD (ALIGNED)       00049000
INST     DS    CL4                                                      00050000
IDNBR    DS    CL18                                                     00051000
RELEXIST DS    CL1                                                      00052000
RECID    DS    CL3                                                      00053000
RECSEQ   DS    CL4                                                      00054000
AUDDATE  DS    PL5'0.'                                                  00055000
AUDTIME  DS    PL5'0.'                                                  00056000
AUDUSER  DS    CL8                                                      00057000
AUDORG   DS    CL6                                                      00058000
ENRAREA1 DS    CL250                                                    00059000
ENRAREA2 DS    CL250                                                    00060000
*                                                                       00061000
         ORG   ASMREC+(2000-L'SQWADATA) POINT TO ADDITIONAL DATA        00062000
SQWADATA DS    0CL400                  ADDITIONAL DATA PASSED TO MODULE 00063000
SQWSEGF  DS    CL102                   SEGMENTED FROM KEY VALUE         00064000
SQWSEGT  DS    CL102                   SEGMENTED TO KEY VALUE           00065000
SQWAUDIT DS    CL99                    CALLERS AUDIT DATA               00066000
         DS    CL97                    RESERVED                         00067000
*                                                                       00068000
INDVARS  DS    0H                      NULL INDICATOR VARIABLES         00069000
INDVARX  DS    0H                                                       00070000
INDVARL  EQU   INDVARX-INDVARS         NULL INDICATOR AREA LENGTH       00071000
*                                                                       00072000
*                                                                       00073000
**********************************************************************  00074000
* ROWSET SQLDA AREA ADDRESSED BY REGISTER 2                             00075000
**********************************************************************  00076000
*                                                                       00077000
SQDSQLDA DSECT                         ROWSET SQLDA AREA                00078000
*                                                                       00079000
**********************************************************************  00080000
* PROGRAM TABLE HEADER SECTION:                                         00081000
*   THIS SECTION CONTAINS STATIC DESCRIPTIVE FIELDS.                    00082000
**********************************************************************  00083000
*                                                                       00084000
SANRDB   CSECT                         PROGRAM TABLE SECTION            00085000
SANRDB   AMODE ANY                                                      00086000
SANRDB   RMODE ANY                                                      00087000
         DC    CL8'SANRDB  '           PROGRAM ID                       00088000
         DC    CL1' '                                                   00089000
         DC    CL8'&SYSDATE'           ASSEMBLY DATE                    00090000
         DC    CL1' '                                                   00091000
         DC    CL5'&SYSTIME'           ASSEMBLY TIME                    00092000
         DC    CL1' '                                                   00093000
         DC    A(SQLDLEN)              SQLDSECT SIZE                    00094000
         DC    5A(0)                   RESERVED                         00095000
         DC    AL2(0)                  RESERVED                         00096000
         DC    AL2(INDVARL)            NULL INDICATOR AREA LENGTH       00097000
         DC    A(CONVTAB1)             RECORD/HOST CONVERSION TABLE     00098000
         DC    A(CONVTAB2)             SQLDA DATA TYPE/LENGTH TABLE     00099000
         DC    A(STM#TAB)              STATEMENT TABLE ADDRESS          00100000
         DC    CL43'COPYRIGHT 2017 INFOR. ALL RIGHTS RESERVED. '        00101000
         DC    CL29'WWW.INFOR.COM                '                      00101001
*                                                                       00102000
**********************************************************************  00103000
* STATEMENT TABLE SECTION:                                              00104000
*   THIS SECTION DEFINES AN ENTRY VECTOR FOR EACH SQL STATEMENT.        00105000
**********************************************************************  00106000
*                                                                       00107000
STM#TAB  CSECT                         STATEMENT TABLE SECTION          00108000
STM#TAB  AMODE ANY                                                      00109000
STM#TAB  RMODE ANY                                                      00110000
         DC    A(SELIN0)               SELECT INTO (KEY 0)              00111000
         DC    A(SELIN1)               SELECT INTO (KEY 1)              00112000
         DC    A(SELIN2)               SELECT INTO (KEY 2)              00113000
         DC    A(SELIN3)               SELECT INTO (KEY 3)              00114000
         DC    12A(0)                  UDB MODULE VECTORS               00115000
         DC    A(SELXC0)               SELECT SEQ CURSOR (KEY 0)        00116000
         DC    A(SELXC1)               SELECT SEQ CURSOR (KEY 1)        00117000
         DC    A(SELXC2)               SELECT SEQ CURSOR (KEY 2)        00118000
         DC    A(SELXC3)               SELECT SEQ CURSOR (KEY 3)        00119000
         DC    A(FETDC0)               FETCH SEQ DATA CURSOR (KEY 0)    00120000
         DC    A(FETDC1)               FETCH SEQ DATA CURSOR (KEY 1)    00121000
         DC    A(FETDC2)               FETCH SEQ DATA CURSOR (KEY 2)    00122000
         DC    A(FETDC3)               FETCH SEQ DATA CURSOR (KEY 3)    00123000
         DC    A(FETKC0)               FETCH SEQ KEY CURSOR (KEY 0)     00124000
         DC    A(FETKC1)               FETCH SEQ KEY CURSOR (KEY 1)     00125000
         DC    A(FETKC2)               FETCH SEQ KEY CURSOR (KEY 2)     00126000
         DC    A(FETKC3)               FETCH SEQ KEY CURSOR (KEY 3)     00127000
         DC    A(CLSXC0)               CLOSE SEQ CURSOR (KEY 0)         00128000
         DC    A(CLSXC1)               CLOSE SEQ CURSOR (KEY 1)         00129000
         DC    A(CLSXC2)               CLOSE SEQ CURSOR (KEY 2)         00130000
         DC    A(CLSXC3)               CLOSE SEQ CURSOR (KEY 3)         00131000
         DC    A(SELKY0)               SELECT KEY (KEY 0)               00132000
         DC    A(SELKY1)               SELECT KEY (KEY 1)               00133000
         DC    A(SELKY2)               SELECT KEY (KEY 2)               00134000
         DC    A(SELKY3)               SELECT KEY (KEY 3)               00135000
         DC    10A(0)                  UDB MODULE VECTORS               00136000
         DC    4X'FF'                                                   00137000
*                                                                       00138000
**********************************************************************  00139000
* SQL STATEMENT SECTION:                                                00140000
*   THIS SECTION CONTAINS ALL THE STATIC SQL STATEMENTS REQUIRED        00141000
*     TO SUPPORT THIS TABLE.                                            00142000
*   THE INDICATED STATEMENTS MAY BE MODIFIED, AS LONG AS THE RESULTS    00143000
*     ARE EQUIVALENT.                                                   00144000
**********************************************************************  00145000
*                                                                       00146000
SQL#STMT CSECT                         SQL STATEMENT SECTION            00147000
SQL#STMT AMODE ANY                                                      00148000
SQL#STMT RMODE ANY                                                      00149000
         USING SQDSQLDA,2              ADDRESS ROWSET SQLDA AREA        00150000
         USING SQLDSECT,10             ADDRESS SQLDSECT                 00151000
         USING COM#AREA,11             ADDRESS COMMAREA                 00152000
*                                                                       00153000
**********************************************************************  00154000
* SELECT INTO STATEMENT BY PRIMARY KEY:                                 00155000
*   THIS STATEMENT SUPPORTS THE GET (WITHOUT LOCK) VERB.                00156000
**********************************************************************  00157000
*                                                                       00158000
SELIN0   DS    0H                                                       00159000
         USING SELIN0,12               ESTABLISH BASE REGISTER          00160000
         MVI   SQWKMRP,X'80'           MOVE RECORD TO HOST FOR KEY 0    00161000
         L     15,SQW@SQRX             LOAD INTERFACE ROUTINE ADDRESS   00162000
         BALR  14,15                   MOVE REQUESTED DATA              00163000
         EXEC  SQL SELECT                                              *00164000
                   AUDIT_DATE,                                         *00165000
                   AUDIT_TIME,                                         *00166000
                   AUDIT_USER,                                         *00167000
                   AUDIT_ORG,                                          *00168000
                   ENR_AREA1,                                          *00169000
                   ENR_AREA2                                           *00170000
                 INTO                                                  *00171000
                   :AUDDATE,                                           *00172000
                   :AUDTIME,                                           *00173000
                   :AUDUSER,                                           *00174000
                   :AUDORG,                                            *00175000
                   :ENRAREA1,                                          *00176000
                   :ENRAREA2                                           *00177000
                 FROM SAN                                              *00178000
                 WHERE                                                 *00179000
                   INST_NBR = :INST AND                                *00180000
                   IDENT_NBR = :IDNBR AND                              *00181000
                   REL_EXISTS = :RELEXIST AND                          *00182000
                   RECORD_ID = :RECID AND                              *00183000
                   RECORD_SEQ = :RECSEQ                                *00184000
                 FETCH FIRST 1 ROW ONLY                                 00185000
         MVI   SQWKMRP,X'03'           MOVE HOST VARIABLES TO RECORD    00186000
         L     15,SQW@SQRX             LOAD INTERFACE ROUTINE ADDRESS   00187000
         BALR  14,15                   MOVE REQUESTED DATA              00188000
         L     14,SQW@RET              LOAD RETURN ADDRESS              00189000
         BR    14                      RETURN TO CALLER                 00190000
         LTORG                                                          00191000
*                                                                       00192000
**********************************************************************  00193000
* SELECT COUNT STATEMENT BY PRIMARY KEY:                                00194000
*   THIS STATEMENT SUPPORTS THE LOCATE VERB.                            00195000
**********************************************************************  00196000
*                                                                       00197000
SELKY0   DS    0H                                                       00198000
         USING SELKY0,12               ESTABLISH BASE REGISTER          00199000
         MVI   SQWKMRP,X'80'           MOVE RECORD TO HOST FOR KEY 0    00200000
         L     15,SQW@SQRX             LOAD INTERFACE ROUTINE ADDRESS   00201000
         BALR  14,15                   MOVE REQUESTED DATA              00202000
         EXEC  SQL SELECT                                              *00203000
                   COUNT(*)                                            *00204000
                 INTO                                                  *00205000
                   :SQWINTHV                                           *00206000
                 FROM SAN                                              *00207000
                 WHERE                                                 *00208000
                   INST_NBR = :INST AND                                *00209000
                   IDENT_NBR = :IDNBR AND                              *00210000
                   REL_EXISTS = :RELEXIST AND                          *00211000
                   RECORD_ID = :RECID AND                              *00212000
                   RECORD_SEQ = :RECSEQ                                *00213000
                 FETCH FIRST 1 ROW ONLY                                 00214000
         L     14,SQW@RET              LOAD RETURN ADDRESS              00215000
         CLC   SQLCODE,=F'0'           GOOD RETURN FROM SQL?            00216000
         BNER  14                      NO - RETURN TO CALLER            00217000
         CLC   SQWINTHV,=F'0'          ANY ROWS MATCH WHERE CLAUSE?     00218000
         BNER  14                      YES - RETURN ZERO SQLCODE        00219000
         MVC   SQLCODE,=F'+100'        SET SQLCODE TO ROW NOT FOUND     00220000
         BR    14                      RETURN TO CALLER                 00221000
         LTORG                                                          00222000
*                                                                       00223000
**********************************************************************  00224000
* SELECT SEQUENTIAL AND OPEN SEQUENTIAL CURSOR STATEMENTS BY PRIMARY    00225000
* KEY:                                                                  00226000
*   THESE STATEMENTS SUPPORT THE GET-GE, GET-GE-LOCK, GET-NEXT,         00227000
*     AND GET-NEXT-LOCK VERBS.                                          00228000
*   A SELECT UPDATE STATEMENT WILL FOLLOW IN THE CASE OF A              00229000
*     GET-GE-LOCK OR GET-NEXT-LOCK VERB.                                00230000
**********************************************************************  00231000
*                                                                       00232000
SELXC0   DS    0H                                                       00233000
         USING SELXC0,12               ESTABLISH BASE REGISTER          00234000
         MVI   SQWKMRP,X'86'           SET HOST KEY 0 & CURSOR POINTER  00235000
         L     15,SQW@SQRX             LOAD INTERFACE ROUTINE ADDRESS   00236000
         BALR  14,15                   MOVE DATA & SET CURSOR POINTER   00237000
         LA    12,SELXC0P              LOAD VECTOR TABLE ADDRESS        00238000
         AH    12,SQWCSRSP             COMPUTE POINTER TO OPEN ROUTINE  00239000
         L     12,0(12)                LOAD OPEN ROUTINE ADDRESS        00240000
         BR    12                      GO TO CURSOR OPEN ROUTINE        00241000
SELXC0P  DC    A(SELGE001)                                              00242000
         DC    (KY0COLMS-01)A(0)                                        00243000
         DC    A(SELGE002)                                              00244000
         DC    (KY0COLMS-02)A(0)                                        00245000
         DC    A(SELGE003)                                              00246000
         DC    (KY0COLMS-03)A(0)                                        00247000
         DC    A(SELGE004)                                              00248000
         DC    (KY0COLMS-04)A(0)                                        00249000
         DC    A(SELGE005)                                              00250000
         LTORG                                                          00251000
*                                                                       00252000
SELGE001 DS    0H                                                       00253000
         USING SELGE001,12             ESTABLISH BASE REGISTER          00254000
         EXEC  SQL DECLARE SANGE001 CURSOR                             *00255000
               WITH ROWSET POSITIONING                                 *00256000
               FOR SELECT                                              *00257000
                   INST_NBR,                                           *00258000
                   IDENT_NBR,                                          *00259000
                   REL_EXISTS,                                         *00260000
                   RECORD_ID,                                          *00261000
                   RECORD_SEQ,                                         *00262000
                   AUDIT_DATE,                                         *00263000
                   AUDIT_TIME,                                         *00264000
                   AUDIT_USER,                                         *00265000
                   AUDIT_ORG,                                          *00266000
                   ENR_AREA1,                                          *00267000
                   ENR_AREA2                                           *00268000
                 FROM SAN                                              *00269000
                 WHERE                                                 *00270000
                   INST_NBR = :INST AND                                *00271000
                   IDENT_NBR = :IDNBR AND                              *00272000
                   REL_EXISTS = :RELEXIST AND                          *00273000
                   RECORD_ID = :RECID AND                              *00274000
                   RECORD_SEQ >=                                       *00275000
                     :RECSEQ                                           *00276000
                 ORDER BY RECORD_SEQ ASC                               *00277000
                 OPTIMIZE FOR 1 ROW FOR READ ONLY                       00278000
         EXEC  SQL OPEN SANGE001                                        00279000
         MVC   SQWCSRCA,=A(CLSGE001)   SET CURSOR CLOSE ROUTINE ADDRESS 00280000
         L     14,SQW@RET              LOAD RETURN ADDRESS              00281000
         BR    14                      RETURN TO CALLER                 00282000
         LTORG                                                          00283000
*                                                                       00284000
SELGE002 DS    0H                                                       00285000
         USING SELGE002,12             ESTABLISH BASE REGISTER          00286000
         EXEC  SQL DECLARE SANGE002 CURSOR                             *00287000
               WITH ROWSET POSITIONING                                 *00288000
               FOR SELECT                                              *00289000
                   INST_NBR,                                           *00290000
                   IDENT_NBR,                                          *00291000
                   REL_EXISTS,                                         *00292000
                   RECORD_ID,                                          *00293000
                   RECORD_SEQ,                                         *00294000
                   AUDIT_DATE,                                         *00295000
                   AUDIT_TIME,                                         *00296000
                   AUDIT_USER,                                         *00297000
                   AUDIT_ORG,                                          *00298000
                   ENR_AREA1,                                          *00299000
                   ENR_AREA2                                           *00300000
                 FROM SAN                                              *00301000
                 WHERE                                                 *00302000
                   INST_NBR = :INST AND                                *00303000
                   IDENT_NBR = :IDNBR AND                              *00304000
                   REL_EXISTS = :RELEXIST AND                          *00305000
                   RECORD_ID >=                                        *00306000
                     :RECID                                            *00307000
                 ORDER BY RECORD_ID ASC,                               *00308000
                   RECORD_SEQ ASC                                      *00309000
                 OPTIMIZE FOR 1 ROW FOR READ ONLY                       00310000
         EXEC  SQL OPEN SANGE002                                        00311000
         MVC   SQWCSRCA,=A(CLSGE002)   SET CURSOR CLOSE ROUTINE ADDRESS 00312000
         L     14,SQW@RET              LOAD RETURN ADDRESS              00313000
         BR    14                      RETURN TO CALLER                 00314000
         LTORG                                                          00315000
*                                                                       00316000
SELGE003 DS    0H                                                       00317000
         USING SELGE003,12             ESTABLISH BASE REGISTER          00318000
         EXEC  SQL DECLARE SANGE003 CURSOR                             *00319000
               WITH ROWSET POSITIONING                                 *00320000
               FOR SELECT                                              *00321000
                   INST_NBR,                                           *00322000
                   IDENT_NBR,                                          *00323000
                   REL_EXISTS,                                         *00324000
                   RECORD_ID,                                          *00325000
                   RECORD_SEQ,                                         *00326000
                   AUDIT_DATE,                                         *00327000
                   AUDIT_TIME,                                         *00328000
                   AUDIT_USER,                                         *00329000
                   AUDIT_ORG,                                          *00330000
                   ENR_AREA1,                                          *00331000
                   ENR_AREA2                                           *00332000
                 FROM SAN                                              *00333000
                 WHERE                                                 *00334000
                   INST_NBR = :INST AND                                *00335000
                   IDENT_NBR = :IDNBR AND                              *00336000
                   REL_EXISTS >=                                       *00337000
                     :RELEXIST                                         *00338000
                 ORDER BY REL_EXISTS ASC,                              *00339000
                   RECORD_ID ASC,                                      *00340000
                   RECORD_SEQ ASC                                      *00341000
                 OPTIMIZE FOR 1 ROW FOR READ ONLY                       00342000
         EXEC  SQL OPEN SANGE003                                        00343000
         MVC   SQWCSRCA,=A(CLSGE003)   SET CURSOR CLOSE ROUTINE ADDRESS 00344000
         L     14,SQW@RET              LOAD RETURN ADDRESS              00345000
         BR    14                      RETURN TO CALLER                 00346000
         LTORG                                                          00347000
*                                                                       00348000
SELGE004 DS    0H                                                       00349000
         USING SELGE004,12             ESTABLISH BASE REGISTER          00350000
         EXEC  SQL DECLARE SANGE004 CURSOR                             *00351000
               WITH ROWSET POSITIONING                                 *00352000
               FOR SELECT                                              *00353000
                   INST_NBR,                                           *00354000
                   IDENT_NBR,                                          *00355000
                   REL_EXISTS,                                         *00356000
                   RECORD_ID,                                          *00357000
                   RECORD_SEQ,                                         *00358000
                   AUDIT_DATE,                                         *00359000
                   AUDIT_TIME,                                         *00360000
                   AUDIT_USER,                                         *00361000
                   AUDIT_ORG,                                          *00362000
                   ENR_AREA1,                                          *00363000
                   ENR_AREA2                                           *00364000
                 FROM SAN                                              *00365000
                 WHERE                                                 *00366000
                   INST_NBR = :INST AND                                *00367000
                   IDENT_NBR >=                                        *00368000
                     :IDNBR                                            *00369000
                 ORDER BY IDENT_NBR ASC,                               *00370000
                   REL_EXISTS ASC,                                     *00371000
                   RECORD_ID ASC,                                      *00372000
                   RECORD_SEQ ASC                                      *00373000
                 OPTIMIZE FOR 1 ROW FOR READ ONLY                       00374000
         EXEC  SQL OPEN SANGE004                                        00375000
         MVC   SQWCSRCA,=A(CLSGE004)   SET CURSOR CLOSE ROUTINE ADDRESS 00376000
         L     14,SQW@RET              LOAD RETURN ADDRESS              00377000
         BR    14                      RETURN TO CALLER                 00378000
         LTORG                                                          00379000
*                                                                       00380000
SELGE005 DS    0H                                                       00381000
         USING SELGE005,12             ESTABLISH BASE REGISTER          00382000
         EXEC  SQL DECLARE SANGE005 CURSOR                             *00383000
               WITH ROWSET POSITIONING                                 *00384000
               FOR SELECT                                              *00385000
                   INST_NBR,                                           *00386000
                   IDENT_NBR,                                          *00387000
                   REL_EXISTS,                                         *00388000
                   RECORD_ID,                                          *00389000
                   RECORD_SEQ,                                         *00390000
                   AUDIT_DATE,                                         *00391000
                   AUDIT_TIME,                                         *00392000
                   AUDIT_USER,                                         *00393000
                   AUDIT_ORG,                                          *00394000
                   ENR_AREA1,                                          *00395000
                   ENR_AREA2                                           *00396000
                 FROM SAN                                              *00397000
                 WHERE                                                 *00398000
                   INST_NBR >=                                         *00399000
                     :INST                                             *00400000
                 ORDER BY INST_NBR ASC,                                *00401000
                   IDENT_NBR ASC,                                      *00402000
                   REL_EXISTS ASC,                                     *00403000
                   RECORD_ID ASC,                                      *00404000
                   RECORD_SEQ ASC                                      *00405000
                 OPTIMIZE FOR 1 ROW FOR READ ONLY                       00406000
         EXEC  SQL OPEN SANGE005                                        00407000
         MVC   SQWCSRCA,=A(CLSGE005)   SET CURSOR CLOSE ROUTINE ADDRESS 00408000
         L     14,SQW@RET              LOAD RETURN ADDRESS              00409000
         BR    14                      RETURN TO CALLER                 00410000
         LTORG                                                          00411000
*                                                                       00412000
**********************************************************************  00413000
* SELECT AND OPEN SEQUENTIAL CURSOR STATEMENTS BY PRIMARY KEY:          00414000
*   THIS ROUTINE HANDLES PRIMARY KEY SEQUENTIAL CURSORS.                00415000
**********************************************************************  00416000
*                                                                       00417000
NXTXC0   DS    0H                                                       00418000
         USING NXTXC0,12               ESTABLISH BASE REGISTER          00419000
         MVI   SQWKMRP,X'87'           CLOSE CURSOR & SET HOST KEY 0    00420000
         L     15,SQW@SQRX             LOAD INTERFACE ROUTINE ADDRESS   00421000
         BALR  14,15                   MOVE REQUESTED DATA              00422000
         LH    1,SQWCSRSP              LOAD CURRENT CURSOR POINTER      00423000
         LA    1,4(1)                  INCREMENT TO NEXT CURSOR         00424000
         STH   1,SQWCSRSP              SAVE POINTER FOR NEXT CALL       00425000
         LA    12,NXTXC0P(1)           LOAD POINTER TO NEXT CURSOR      00426000
         L     12,0(12)                LOAD CURSOR ROUTINE ADDRESS      00427000
         BR    12                      GO TO CURRENT CURSOR ROUTINE     00428000
NXTXC0P  DC    A(0)                                                     00429000
         DC    A(NXTGT002)                                              00430000
         DC    A(NXTGT003)                                              00431000
         DC    A(NXTGT004)                                              00432000
         DC    A(NXTGT005)                                              00433000
         DC    A(NXTGT099)                                              00434000
         DC    A(NXTGT003)                                              00435000
         DC    A(NXTGT004)                                              00436000
         DC    A(NXTGT005)                                              00437000
         DC    A(NXTGT099)                                              00438000
         DC    A(NXTGT004)                                              00439000
         DC    A(NXTGT005)                                              00440000
         DC    A(NXTGT099)                                              00441000
         DC    A(NXTGT005)                                              00442000
         DC    A(NXTGT099)                                              00443000
         DC    A(NXTGT099)                                              00444000
NXTGT099 LA    0,4                     LOAD VALUE 4 IN REGISTER 0       00445000
         SR    1,0                     ADJUST BACK TO CURRENT POINTER   00446000
         STH   1,SQWCSRSP              SAVE POINTER FOR CURSOR CLOSE    00447000
         LA    0,100                   LOAD VALUE 100 IN REGISTER 0     00448000
         ST    0,SQLCODE               SET SQLCODE TO NO MORE ROWS      00449000
         L     14,SQW@RET              LOAD RETURN ADDRESS              00450000
         BR    14                      RETURN TO SQI                    00451000
         LTORG                                                          00452000
*                                                                       00453000
NXTGT002 DS    0H                                                       00454000
         USING NXTGT002,12             ESTABLISH BASE REGISTER          00455000
         EXEC  SQL DECLARE SANGT002 CURSOR                             *00456000
               WITH ROWSET POSITIONING                                 *00457000
               FOR SELECT                                              *00458000
                   INST_NBR,                                           *00459000
                   IDENT_NBR,                                          *00460000
                   REL_EXISTS,                                         *00461000
                   RECORD_ID,                                          *00462000
                   RECORD_SEQ,                                         *00463000
                   AUDIT_DATE,                                         *00464000
                   AUDIT_TIME,                                         *00465000
                   AUDIT_USER,                                         *00466000
                   AUDIT_ORG,                                          *00467000
                   ENR_AREA1,                                          *00468000
                   ENR_AREA2                                           *00469000
                 FROM SAN                                              *00470000
                 WHERE                                                 *00471000
                   INST_NBR = :INST AND                                *00472000
                   IDENT_NBR = :IDNBR AND                              *00473000
                   REL_EXISTS = :RELEXIST AND                          *00474000
                   RECORD_ID >                                         *00475000
                     :RECID                                            *00476000
                 ORDER BY RECORD_ID ASC,                               *00477000
                   RECORD_SEQ ASC                                      *00478000
                 OPTIMIZE FOR 1 ROW FOR READ ONLY                       00479000
         EXEC  SQL OPEN SANGT002                                        00480000
         ICM   15,B'1111',SQLCODE      IS RETURN CODE ZERO ?            00481000
         BNZ   *+14                    NO - RETURN ERROR                00482000
         MVC   SQWCSRCA,=A(CLSGT002)   SET CURSOR CLOSE ROUTINE ADDRESS 00483000
         L     12,SQWCSRRA             LOAD RETURN ADDRESS              00484000
         BR    12                      RETURN TO FETCH ROUTINE          00485000
         L     14,SQW@RET              LOAD RETURN ADDRESS              00486000
         BR    14                      RETURN TO CALLER                 00487000
         LTORG                                                          00488000
*                                                                       00489000
NXTGT003 DS    0H                                                       00490000
         USING NXTGT003,12             ESTABLISH BASE REGISTER          00491000
         EXEC  SQL DECLARE SANGT003 CURSOR                             *00492000
               WITH ROWSET POSITIONING                                 *00493000
               FOR SELECT                                              *00494000
                   INST_NBR,                                           *00495000
                   IDENT_NBR,                                          *00496000
                   REL_EXISTS,                                         *00497000
                   RECORD_ID,                                          *00498000
                   RECORD_SEQ,                                         *00499000
                   AUDIT_DATE,                                         *00500000
                   AUDIT_TIME,                                         *00501000
                   AUDIT_USER,                                         *00502000
                   AUDIT_ORG,                                          *00503000
                   ENR_AREA1,                                          *00504000
                   ENR_AREA2                                           *00505000
                 FROM SAN                                              *00506000
                 WHERE                                                 *00507000
                   INST_NBR = :INST AND                                *00508000
                   IDENT_NBR = :IDNBR AND                              *00509000
                   REL_EXISTS >                                        *00510000
                     :RELEXIST                                         *00511000
                 ORDER BY REL_EXISTS ASC,                              *00512000
                   RECORD_ID ASC,                                      *00513000
                   RECORD_SEQ ASC                                      *00514000
                 OPTIMIZE FOR 1 ROW FOR READ ONLY                       00515000
         EXEC  SQL OPEN SANGT003                                        00516000
         ICM   15,B'1111',SQLCODE      IS RETURN CODE ZERO ?            00517000
         BNZ   *+14                    NO - RETURN ERROR                00518000
         MVC   SQWCSRCA,=A(CLSGT003)   SET CURSOR CLOSE ROUTINE ADDRESS 00519000
         L     12,SQWCSRRA             LOAD RETURN ADDRESS              00520000
         BR    12                      RETURN TO FETCH ROUTINE          00521000
         L     14,SQW@RET              LOAD RETURN ADDRESS              00522000
         BR    14                      RETURN TO CALLER                 00523000
         LTORG                                                          00524000
*                                                                       00525000
NXTGT004 DS    0H                                                       00526000
         USING NXTGT004,12             ESTABLISH BASE REGISTER          00527000
         EXEC  SQL DECLARE SANGT004 CURSOR                             *00528000
               WITH ROWSET POSITIONING                                 *00529000
               FOR SELECT                                              *00530000
                   INST_NBR,                                           *00531000
                   IDENT_NBR,                                          *00532000
                   REL_EXISTS,                                         *00533000
                   RECORD_ID,                                          *00534000
                   RECORD_SEQ,                                         *00535000
                   AUDIT_DATE,                                         *00536000
                   AUDIT_TIME,                                         *00537000
                   AUDIT_USER,                                         *00538000
                   AUDIT_ORG,                                          *00539000
                   ENR_AREA1,                                          *00540000
                   ENR_AREA2                                           *00541000
                 FROM SAN                                              *00542000
                 WHERE                                                 *00543000
                   INST_NBR = :INST AND                                *00544000
                   IDENT_NBR >                                         *00545000
                     :IDNBR                                            *00546000
                 ORDER BY IDENT_NBR ASC,                               *00547000
                   REL_EXISTS ASC,                                     *00548000
                   RECORD_ID ASC,                                      *00549000
                   RECORD_SEQ ASC                                      *00550000
                 OPTIMIZE FOR 1 ROW FOR READ ONLY                       00551000
         EXEC  SQL OPEN SANGT004                                        00552000
         ICM   15,B'1111',SQLCODE      IS RETURN CODE ZERO ?            00553000
         BNZ   *+14                    NO - RETURN ERROR                00554000
         MVC   SQWCSRCA,=A(CLSGT004)   SET CURSOR CLOSE ROUTINE ADDRESS 00555000
         L     12,SQWCSRRA             LOAD RETURN ADDRESS              00556000
         BR    12                      RETURN TO FETCH ROUTINE          00557000
         L     14,SQW@RET              LOAD RETURN ADDRESS              00558000
         BR    14                      RETURN TO CALLER                 00559000
         LTORG                                                          00560000
*                                                                       00561000
NXTGT005 DS    0H                                                       00562000
         USING NXTGT005,12             ESTABLISH BASE REGISTER          00563000
         EXEC  SQL DECLARE SANGT005 CURSOR                             *00564000
               WITH ROWSET POSITIONING                                 *00565000
               FOR SELECT                                              *00566000
                   INST_NBR,                                           *00567000
                   IDENT_NBR,                                          *00568000
                   REL_EXISTS,                                         *00569000
                   RECORD_ID,                                          *00570000
                   RECORD_SEQ,                                         *00571000
                   AUDIT_DATE,                                         *00572000
                   AUDIT_TIME,                                         *00573000
                   AUDIT_USER,                                         *00574000
                   AUDIT_ORG,                                          *00575000
                   ENR_AREA1,                                          *00576000
                   ENR_AREA2                                           *00577000
                 FROM SAN                                              *00578000
                 WHERE                                                 *00579000
                   INST_NBR >                                          *00580000
                     :INST                                             *00581000
                 ORDER BY INST_NBR ASC,                                *00582000
                   IDENT_NBR ASC,                                      *00583000
                   REL_EXISTS ASC,                                     *00584000
                   RECORD_ID ASC,                                      *00585000
                   RECORD_SEQ ASC                                      *00586000
                 OPTIMIZE FOR 1 ROW FOR READ ONLY                       00587000
         EXEC  SQL OPEN SANGT005                                        00588000
         ICM   15,B'1111',SQLCODE      IS RETURN CODE ZERO ?            00589000
         BNZ   *+14                    NO - RETURN ERROR                00590000
         MVC   SQWCSRCA,=A(CLSGT005)   SET CURSOR CLOSE ROUTINE ADDRESS 00591000
         L     12,SQWCSRRA             LOAD RETURN ADDRESS              00592000
         BR    12                      RETURN TO FETCH ROUTINE          00593000
         L     14,SQW@RET              LOAD RETURN ADDRESS              00594000
         BR    14                      RETURN TO CALLER                 00595000
         LTORG                                                          00596000
*                                                                       00597000
**********************************************************************  00598000
* FETCH FROM SEQUENTIAL CURSOR STATEMENT FOR PRIMARY KEY:               00599000
*   THIS STATEMENT SUPPORTS THE GET-GE AND GET-NEXT VERBS.              00600000
*   IT WILL FOLLOW A SUCCESSFUL SELECT SEQUENTIAL STATEMENT TO          00601000
*     RETRIEVE THE ACTUAL ROW.                                          00602000
*   THE GET-GE-LOCK AND GET-NEXT-LOCK VERBS USE A DIFFERENT             00603000
*     FETCH STATEMENT AS ONLY THE KEY FIELDS ARE NEEDED.                00604000
**********************************************************************  00605000
*                                                                       00606000
FETDC0   DS    0H                                                       00607000
         USING FETDC0,12               ESTABLISH BASE REGISTER          00608000
         MVC   SQWCSRRA,=A(FETDC0)     SET RETURN ROUTINE ADDRESS       00609000
         MVC   SQWCSRBR,=A(NXTXC0)     SET CURSOR ROUTINE ADDRESS       00610000
         MVC   SQWRSFVC,=AL2(TBLCOLMS) FETCH ALL COLUMNS IN TABLE       00611000
         LH    1,SQWCSRSP              LOAD CURRENT CURSOR POINTER      00612000
         LA    12,FETDC0P(1)           LOAD POINTER TO FETCH ROUTINE    00613000
         L     12,0(12)                LOAD FETCH ROUTINE ADDRESS       00614000
         BR    12                      GO TO CURRENT FETCH ROUTINE      00615000
FETDC0P  DC    A(FETGE001)                                              00616000
         DC    A(FETGT002)                                              00617000
         DC    A(FETGT003)                                              00618000
         DC    A(FETGT004)                                              00619000
         DC    A(FETGT005)                                              00620000
         DC    A(FETGE002)                                              00621000
         DC    A(FETGT003)                                              00622000
         DC    A(FETGT004)                                              00623000
         DC    A(FETGT005)                                              00624000
         DC    A(FETGE003)                                              00625000
         DC    A(FETGT004)                                              00626000
         DC    A(FETGT005)                                              00627000
         DC    A(FETGE004)                                              00628000
         DC    A(FETGT005)                                              00629000
         DC    A(FETGE005)                                              00630000
         DC    A(0)                                                     00631000
         LTORG                                                          00632000
*                                                                       00633000
**********************************************************************  00634000
* FETCH FROM SEQUENTIAL CURSOR FOR EVENTUAL UPDATE STATEMENT FOR        00635000
* THE PRIMARY KEY:                                                      00636000
*   THIS STATEMENT SUPPORTS THE GET-GE-LOCK AND GET-NEXT-LOCK           00637000
*     VERBS.                                                            00638000
*   IT WILL FOLLOW A SUCCESSFUL SELECT SEQUENTIAL STATEMENT TO          00639000
*     RETRIEVE THE ACTUAL ROW.                                          00640000
*   ONLY THE PRIMARY KEY FIELDS ARE RETRIEVED AS A SELECT FOR UPDATE    00641000
*     STATEMENT WILL FOLLOW AND RETREIVAL OF THE ACTUAL ROW             00642000
*     WILL BE THRU THE UPDATE CURSOR.                                   00643000
**********************************************************************  00644000
*                                                                       00645000
FETKC0   DS    0H                                                       00646000
         USING FETKC0,12               ESTABLISH BASE REGISTER          00647000
         MVC   SQWCSRRA,=A(FETKC0)     SET RETURN ROUTINE ADDRESS       00648000
         MVC   SQWCSRBR,=A(NXTXC0)     SET CURSOR ROUTINE ADDRESS       00649000
         MVC   SQWRSFVC,=AL2(KY0COLMS) ONLY FETCH KEY COLUMNS           00650000
         LH    1,SQWCSRSP              LOAD CURRENT CURSOR POINTER      00651000
         LA    12,FETKC0P(1)           LOAD POINTER TO FETCH ROUTINE    00652000
         L     12,0(12)                LOAD FETCH ROUTINE ADDRESS       00653000
         BR    12                      GO TO CURRENT FETCH ROUTINE      00654000
FETKC0P  DC    A(FETGE001)                                              00655000
         DC    A(FETGT002)                                              00656000
         DC    A(FETGT003)                                              00657000
         DC    A(FETGT004)                                              00658000
         DC    A(FETGT005)                                              00659000
         DC    A(FETGE002)                                              00660000
         DC    A(FETGT003)                                              00661000
         DC    A(FETGT004)                                              00662000
         DC    A(FETGT005)                                              00663000
         DC    A(FETGE003)                                              00664000
         DC    A(FETGT004)                                              00665000
         DC    A(FETGT005)                                              00666000
         DC    A(FETGE004)                                              00667000
         DC    A(FETGT005)                                              00668000
         DC    A(FETGE005)                                              00669000
         DC    A(0)                                                     00670000
         LTORG                                                          00671000
*                                                                       00672000
FETGE001 DS    0H                                                       00673000
         USING FETGE001,12             ESTABLISH BASE REGISTER          00674000
         MVI   SQWKMRP,X'04'           CHECK FOR MORE ROWS IN ROWSET    00675000
         L     15,SQW@SQRX             LOAD INTERFACE ROUTINE ADDRESS   00676000
         BALR  14,15                   MOVE REQUESTED DATA              00677000
         EXEC  SQL FETCH NEXT ROWSET FROM SANGE001                     *00678000
               FOR :SQWRSRMX ROWS INTO DESCRIPTOR :SQDSQLDA             00679000
         MVI   SQWKMRP,X'05'           MOVE HOST ARRAY DATA TO RECORD   00680000
         L     15,SQW@SQRX             LOAD INTERFACE ROUTINE ADDRESS   00681000
         BALR  14,15                   MOVE REQUESTED DATA              00682000
         L     14,SQW@RET              LOAD RETURN ADDRESS              00683000
         BR    14                      RETURN TO CALLER                 00684000
         LTORG                                                          00685000
*                                                                       00686000
FETGE002 DS    0H                                                       00687000
         USING FETGE002,12             ESTABLISH BASE REGISTER          00688000
         MVI   SQWKMRP,X'04'           CHECK FOR MORE ROWS IN ROWSET    00689000
         L     15,SQW@SQRX             LOAD INTERFACE ROUTINE ADDRESS   00690000
         BALR  14,15                   MOVE REQUESTED DATA              00691000
         EXEC  SQL FETCH NEXT ROWSET FROM SANGE002                     *00692000
               FOR :SQWRSRMX ROWS INTO DESCRIPTOR :SQDSQLDA             00693000
         MVI   SQWKMRP,X'05'           MOVE HOST ARRAY DATA TO RECORD   00694000
         L     15,SQW@SQRX             LOAD INTERFACE ROUTINE ADDRESS   00695000
         BALR  14,15                   MOVE REQUESTED DATA              00696000
         L     14,SQW@RET              LOAD RETURN ADDRESS              00697000
         BR    14                      RETURN TO CALLER                 00698000
         LTORG                                                          00699000
*                                                                       00700000
FETGE003 DS    0H                                                       00701000
         USING FETGE003,12             ESTABLISH BASE REGISTER          00702000
         MVI   SQWKMRP,X'04'           CHECK FOR MORE ROWS IN ROWSET    00703000
         L     15,SQW@SQRX             LOAD INTERFACE ROUTINE ADDRESS   00704000
         BALR  14,15                   MOVE REQUESTED DATA              00705000
         EXEC  SQL FETCH NEXT ROWSET FROM SANGE003                     *00706000
               FOR :SQWRSRMX ROWS INTO DESCRIPTOR :SQDSQLDA             00707000
         MVI   SQWKMRP,X'05'           MOVE HOST ARRAY DATA TO RECORD   00708000
         L     15,SQW@SQRX             LOAD INTERFACE ROUTINE ADDRESS   00709000
         BALR  14,15                   MOVE REQUESTED DATA              00710000
         L     14,SQW@RET              LOAD RETURN ADDRESS              00711000
         BR    14                      RETURN TO CALLER                 00712000
         LTORG                                                          00713000
*                                                                       00714000
FETGE004 DS    0H                                                       00715000
         USING FETGE004,12             ESTABLISH BASE REGISTER          00716000
         MVI   SQWKMRP,X'04'           CHECK FOR MORE ROWS IN ROWSET    00717000
         L     15,SQW@SQRX             LOAD INTERFACE ROUTINE ADDRESS   00718000
         BALR  14,15                   MOVE REQUESTED DATA              00719000
         EXEC  SQL FETCH NEXT ROWSET FROM SANGE004                     *00720000
               FOR :SQWRSRMX ROWS INTO DESCRIPTOR :SQDSQLDA             00721000
         MVI   SQWKMRP,X'05'           MOVE HOST ARRAY DATA TO RECORD   00722000
         L     15,SQW@SQRX             LOAD INTERFACE ROUTINE ADDRESS   00723000
         BALR  14,15                   MOVE REQUESTED DATA              00724000
         L     14,SQW@RET              LOAD RETURN ADDRESS              00725000
         BR    14                      RETURN TO CALLER                 00726000
         LTORG                                                          00727000
*                                                                       00728000
FETGE005 DS    0H                                                       00729000
         USING FETGE005,12             ESTABLISH BASE REGISTER          00730000
         MVI   SQWKMRP,X'04'           CHECK FOR MORE ROWS IN ROWSET    00731000
         L     15,SQW@SQRX             LOAD INTERFACE ROUTINE ADDRESS   00732000
         BALR  14,15                   MOVE REQUESTED DATA              00733000
         EXEC  SQL FETCH NEXT ROWSET FROM SANGE005                     *00734000
               FOR :SQWRSRMX ROWS INTO DESCRIPTOR :SQDSQLDA             00735000
         MVI   SQWKMRP,X'05'           MOVE HOST ARRAY DATA TO RECORD   00736000
         L     15,SQW@SQRX             LOAD INTERFACE ROUTINE ADDRESS   00737000
         BALR  14,15                   MOVE REQUESTED DATA              00738000
         L     14,SQW@RET              LOAD RETURN ADDRESS              00739000
         BR    14                      RETURN TO CALLER                 00740000
         LTORG                                                          00741000
*                                                                       00742000
FETGT002 DS    0H                                                       00743000
         USING FETGT002,12             ESTABLISH BASE REGISTER          00744000
         MVI   SQWKMRP,X'04'           CHECK FOR MORE ROWS IN ROWSET    00745000
         L     15,SQW@SQRX             LOAD INTERFACE ROUTINE ADDRESS   00746000
         BALR  14,15                   MOVE REQUESTED DATA              00747000
         EXEC  SQL FETCH NEXT ROWSET FROM SANGT002                     *00748000
               FOR :SQWRSRMX ROWS INTO DESCRIPTOR :SQDSQLDA             00749000
         MVI   SQWKMRP,X'05'           MOVE HOST ARRAY DATA TO RECORD   00750000
         L     15,SQW@SQRX             LOAD INTERFACE ROUTINE ADDRESS   00751000
         BALR  14,15                   MOVE REQUESTED DATA              00752000
         L     14,SQW@RET              LOAD RETURN ADDRESS              00753000
         BR    14                      RETURN TO CALLER                 00754000
         LTORG                                                          00755000
*                                                                       00756000
FETGT003 DS    0H                                                       00757000
         USING FETGT003,12             ESTABLISH BASE REGISTER          00758000
         MVI   SQWKMRP,X'04'           CHECK FOR MORE ROWS IN ROWSET    00759000
         L     15,SQW@SQRX             LOAD INTERFACE ROUTINE ADDRESS   00760000
         BALR  14,15                   MOVE REQUESTED DATA              00761000
         EXEC  SQL FETCH NEXT ROWSET FROM SANGT003                     *00762000
               FOR :SQWRSRMX ROWS INTO DESCRIPTOR :SQDSQLDA             00763000
         MVI   SQWKMRP,X'05'           MOVE HOST ARRAY DATA TO RECORD   00764000
         L     15,SQW@SQRX             LOAD INTERFACE ROUTINE ADDRESS   00765000
         BALR  14,15                   MOVE REQUESTED DATA              00766000
         L     14,SQW@RET              LOAD RETURN ADDRESS              00767000
         BR    14                      RETURN TO CALLER                 00768000
         LTORG                                                          00769000
*                                                                       00770000
FETGT004 DS    0H                                                       00771000
         USING FETGT004,12             ESTABLISH BASE REGISTER          00772000
         MVI   SQWKMRP,X'04'           CHECK FOR MORE ROWS IN ROWSET    00773000
         L     15,SQW@SQRX             LOAD INTERFACE ROUTINE ADDRESS   00774000
         BALR  14,15                   MOVE REQUESTED DATA              00775000
         EXEC  SQL FETCH NEXT ROWSET FROM SANGT004                     *00776000
               FOR :SQWRSRMX ROWS INTO DESCRIPTOR :SQDSQLDA             00777000
         MVI   SQWKMRP,X'05'           MOVE HOST ARRAY DATA TO RECORD   00778000
         L     15,SQW@SQRX             LOAD INTERFACE ROUTINE ADDRESS   00779000
         BALR  14,15                   MOVE REQUESTED DATA              00780000
         L     14,SQW@RET              LOAD RETURN ADDRESS              00781000
         BR    14                      RETURN TO CALLER                 00782000
         LTORG                                                          00783000
*                                                                       00784000
FETGT005 DS    0H                                                       00785000
         USING FETGT005,12             ESTABLISH BASE REGISTER          00786000
         MVI   SQWKMRP,X'04'           CHECK FOR MORE ROWS IN ROWSET    00787000
         L     15,SQW@SQRX             LOAD INTERFACE ROUTINE ADDRESS   00788000
         BALR  14,15                   MOVE REQUESTED DATA              00789000
         EXEC  SQL FETCH NEXT ROWSET FROM SANGT005                     *00790000
               FOR :SQWRSRMX ROWS INTO DESCRIPTOR :SQDSQLDA             00791000
         MVI   SQWKMRP,X'05'           MOVE HOST ARRAY DATA TO RECORD   00792000
         L     15,SQW@SQRX             LOAD INTERFACE ROUTINE ADDRESS   00793000
         BALR  14,15                   MOVE REQUESTED DATA              00794000
         L     14,SQW@RET              LOAD RETURN ADDRESS              00795000
         BR    14                      RETURN TO CALLER                 00796000
         LTORG                                                          00797000
*                                                                       00798000
**********************************************************************  00799000
* CLOSE SEQUENTIAL CURSOR STATEMENT FOR PRIMARY KEY:                    00800000
*   THIS STATEMENT SUPPORTS THE GET-GE, GET-GE-LOCK, GET-NEXT,          00801000
*     AND GET-NEXT-LOCK VERBS.                                          00802000
*   IT WILL FOLLOW THE LAST FETCH FROM SEQUENTIAL CURSOR STATEMENT      00803000
*     TO CLOSE THE SEQUENTIAL CURSOR.                                   00804000
**********************************************************************  00805000
*                                                                       00806000
CLSXC0   DS    0H                                                       00807000
         USING CLSXC0,12               ESTABLISH BASE REGISTER          00808000
         L     12,SQWCSRCA             SET CURSOR CLOSE ROUTINE ADDRESS 00809000
         XC    SQWCSRCA,SQWCSRCA       CLEAR CURSOR CLOSE ROUTINE ADDR  00810000
         BR    12                      GO TO CURSOR CLOSE ROUTINE       00811000
         LTORG                                                          00812000
*                                                                       00813000
CLSGE001 DS    0H                                                       00814000
         USING CLSGE001,12             ESTABLISH BASE REGISTER          00815000
         EXEC  SQL CLOSE SANGE001                                       00816000
         L     14,SQW@RET              LOAD RETURN ADDRESS              00817000
         BR    14                      RETURN TO CALLER                 00818000
         LTORG                                                          00819000
*                                                                       00820000
CLSGE002 DS    0H                                                       00821000
         USING CLSGE002,12             ESTABLISH BASE REGISTER          00822000
         EXEC  SQL CLOSE SANGE002                                       00823000
         L     14,SQW@RET                                               00824000
         BR    14                                                       00825000
         LTORG                                                          00826000
*                                                                       00827000
CLSGE003 DS    0H                                                       00828000
         USING CLSGE003,12             ESTABLISH BASE REGISTER          00829000
         EXEC  SQL CLOSE SANGE003                                       00830000
         L     14,SQW@RET                                               00831000
         BR    14                                                       00832000
         LTORG                                                          00833000
*                                                                       00834000
CLSGE004 DS    0H                                                       00835000
         USING CLSGE004,12             ESTABLISH BASE REGISTER          00836000
         EXEC  SQL CLOSE SANGE004                                       00837000
         L     14,SQW@RET                                               00838000
         BR    14                                                       00839000
         LTORG                                                          00840000
*                                                                       00841000
CLSGE005 DS    0H                                                       00842000
         USING CLSGE005,12             ESTABLISH BASE REGISTER          00843000
         EXEC  SQL CLOSE SANGE005                                       00844000
         L     14,SQW@RET                                               00845000
         BR    14                                                       00846000
         LTORG                                                          00847000
*                                                                       00848000
CLSGT002 DS    0H                                                       00849000
         USING CLSGT002,12             ESTABLISH BASE REGISTER          00850000
         EXEC  SQL CLOSE SANGT002                                       00851000
         L     14,SQW@RET              LOAD RETURN ADDRESS              00852000
         BR    14                      RETURN TO CALLER                 00853000
         LTORG                                                          00854000
*                                                                       00855000
CLSGT003 DS    0H                                                       00856000
         USING CLSGT003,12             ESTABLISH BASE REGISTER          00857000
         EXEC  SQL CLOSE SANGT003                                       00858000
         L     14,SQW@RET              LOAD RETURN ADDRESS              00859000
         BR    14                      RETURN TO CALLER                 00860000
         LTORG                                                          00861000
*                                                                       00862000
CLSGT004 DS    0H                                                       00863000
         USING CLSGT004,12             ESTABLISH BASE REGISTER          00864000
         EXEC  SQL CLOSE SANGT004                                       00865000
         L     14,SQW@RET              LOAD RETURN ADDRESS              00866000
         BR    14                      RETURN TO CALLER                 00867000
         LTORG                                                          00868000
*                                                                       00869000
CLSGT005 DS    0H                                                       00870000
         USING CLSGT005,12             ESTABLISH BASE REGISTER          00871000
         EXEC  SQL CLOSE SANGT005                                       00872000
         L     14,SQW@RET              LOAD RETURN ADDRESS              00873000
         BR    14                      RETURN TO CALLER                 00874000
         LTORG                                                          00875000
*                                                                       00876000
**********************************************************************  00877000
* ALTERNATE KEY 1 NOT DEFINED                                           00878000
**********************************************************************  00879000
*                                                                       00880000
SELIN1   DS    0H                                                       00881000
SELKY1   DS    0H                                                       00882000
SELXC1   DS    0H                                                       00883000
FETDC1   DS    0H                                                       00884000
FETKC1   DS    0H                                                       00885000
CLSXC1   DS    0H                                                       00886000
         DC    X'00DEAD01'             FORCE S0C1 ABEND                 00887000
*                                                                       00888000
**********************************************************************  00889000
* ALTERNATE KEY 2 NOT DEFINED                                           00890000
**********************************************************************  00891000
*                                                                       00892000
SELIN2   DS    0H                                                       00893000
SELKY2   DS    0H                                                       00894000
SELXC2   DS    0H                                                       00895000
FETDC2   DS    0H                                                       00896000
FETKC2   DS    0H                                                       00897000
CLSXC2   DS    0H                                                       00898000
         DC    X'00DEAD02'             FORCE S0C1 ABEND                 00899000
*                                                                       00900000
**********************************************************************  00901000
* ALTERNATE KEY 3 NOT DEFINED                                           00902000
**********************************************************************  00903000
*                                                                       00904000
SELIN3   DS    0H                                                       00905000
SELKY3   DS    0H                                                       00906000
SELXC3   DS    0H                                                       00907000
FETDC3   DS    0H                                                       00908000
FETKC3   DS    0H                                                       00909000
CLSXC3   DS    0H                                                       00910000
         DC    X'00DEAD03'             FORCE S0C1 ABEND                 00911000
*                                                                       00912000
         DS    0H                      END OF SQL STATEMENTS            00913000
         DC    XL16'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF'                   00914000
*                                                                       00915000
**********************************************************************  00916000
* DUMMY ENTRY POINT DSNHLI                                              00917000
**********************************************************************  00918000
*                                                                       00919000
         ENTRY DSNHLI                                                   00920000
DSNHLI   DS    0H                                                       00921000
         L     15,SQW@CAF              LOAD ENTRY POINT TO ATTACH       00922000
         BR    15                      BRANCH TO ATTACH FACILITY        00923000
*                                                                       00924000
**********************************************************************  00925000
* CONVERSION TABLE VALUES FOR ALL FIELDS IN THIS TABLE                  00926000
**********************************************************************  00927000
*                                                                       00928000
* CONVTAB1 TABLE ENTRY FORMAT IS:                                       00929000
*        DC    H'RRRR',H'VVVV',H'LLLL',X'KK',X'DD'                      00930000
* OR:                                                                   00931000
*        DC    H'RRRR',H'VVVV',X'ZZPP',X'KK',X'DD'                      00932000
* WHERE:                                                                00933000
*   RRRR = RECORD AREA OFFSET                                           00934000
*   VVVV = HOST VARIABLE AREA OFFSET                                    00935000
*   LLLL = HALFWORD LENGTH TO MOVE                                      00936000
*   ZZPP = CONVERT ZONED/PACKED LENGTHS (MINUS 1)                       00937000
*   KK   = KEY FIELD MASK:                                              00938000
*            80 = KEY 0 FIELD                                           00939000
*            40 = KEY 1 FIELD                                           00940000
*            20 = KEY 2 FIELD                                           00941000
*            10 = KEY 3 FIELD                                           00942000
*   DD   = DATA FIELD MASK:                                             00943000
*            80 = RECORD FIELD IS PACKED                                00944000
*            40 = HOST VARIABLE IS PACKED                               00945000
*            20 = NULLABLE FIELD                                        00946000
*            01 = DATE FIELD                                            00947000
*            02 = TIME FIELD                                            00948000
*                                                                       00949000
CONVTAB1 DS    0H                      RECORD/HOST VARIABLE CONVERSIONS 00950000
         DC    H'0000',H'0000',H'0030',X'80',X'00'                      00951000
         DC    H'0030',H'0030',H'0524',X'00',X'00'                      00952000
         DC    8X'FF'                                                   00953000
*                                                                       00954000
* CONVTAB2 TABLE COLUMNS ENTRY FORMAT IS:                               00955000
*        DC    H'RRRR',H'LLLL',H'TTTT'                                  00956000
* OR:                                                                   00957000
*        DC    H'RRRR',X'PPSS',H'TTTT'                                  00958000
* WHERE:                                                                00959000
*   RRRR = RECORD AREA OFFSET                                           00960000
*   LLLL = HALFWORD LENGTH OF HOST VARIABLE (NON-DECIMAL DATA TYPE)     00961000
*   PPSS = PRECISION AND SCALE (DECIMAL DATA TYPE)                      00962000
*   TTTT = SQLDA DATA TYPE:                                             00963000
*            452 = CHAR       453 = CHAR NULLABLE                       00964000
*            484 = DECIMAL    485 = DECIMAL NULLABLE                    00965000
*            496 = INTEGER    497 = INTEGER NULLABLE                    00966000
*            500 = SMALLINT   501 = SMALLINT NULLABLE                   00967000
*                                                                       00968000
CONVTAB2 DS    0F                      RECORD DATA ATTRIBUTE TABLE      00969000
         DC    AL4(TBLCOLMS*44+16)     TOTAL SQLDA SIZE                 00970000
         DC    AL2(TBLCOLMS)           NUMBER OF COLUMNS IN TABLE       00971000
         DC    AL2(KY0COLMS)           NUMBER OF PRIMARY KEY COLUMNS    00972000
         DC    AL2(KY1COLMS)           NUMBER OF ALT1 KEY COLUMNS       00973000
         DC    AL2(KY2COLMS)           NUMBER OF ALT2 KEY COLUMNS       00974000
         DC    AL2(KY3COLMS)           NUMBER OF ALT3 KEY COLUMNS       00975000
         DC    AL2(00554)              SUMMATION OF ALL COLUMN LENGTHS  00976000
         DC    AL2(01000)              PRIMARY MULTIROW FETCH ARRAY     00977000
         DC    AL2(00000)              ALT 1 MULTIROW FETCH ARRAY       00978000
         DC    AL2(00000)              ALT 2 MULTIROW FETCH ARRAY       00979000
         DC    AL2(00000)              ALT 3 MULTIROW FETCH ARRAY       00980000
         DC    AL2(00000)              PRIMARY KEY LOW VALUE LEVEL      00981000
         DC    AL2(00000)              ALT 1 KEY LOW VALUE LEVEL        00982000
         DC    AL2(00000)              ALT 2 KEY LOW VALUE LEVEL        00983000
         DC    AL2(00000)              ALT 3 KEY LOW VALUE LEVEL        00984000
CONVDATA DS    0H                                                       00985000
         DC    H'0000',H'0004',H'452'  INST_NBR                         00986000
         DC    H'0004',H'0018',H'452'  IDENT_NBR                        00987000
         DC    H'0022',H'0001',H'452'  REL_EXISTS                       00988000
         DC    H'0023',H'0003',H'452'  RECORD_ID                        00989000
         DC    H'0026',H'0004',H'452'  RECORD_SEQ                       00990000
KEYCOLMS EQU   (*-CONVDATA)/6          NUMBER OF KEY COLUMNS IN TABLE   00991000
         DC    H'0030',X'0900',H'484'  AUDIT_DATE                       00992000
         DC    H'0035',X'0900',H'484'  AUDIT_TIME                       00993000
         DC    H'0040',H'0008',H'452'  AUDIT_USER                       00994000
         DC    H'0048',H'0006',H'452'  AUDIT_ORG                        00995000
         DC    H'0054',H'0250',H'452'  ENR_AREA1                        00996000
         DC    H'0304',H'0250',H'452'  ENR_AREA2                        00997000
TBLCOLMS EQU   (*-CONVDATA)/6          NUMBER OF COLUMNS IN TABLE       00998000
KY0COLMS EQU   00005                   NUMBER OF PRIMARY KEY COLUMNS    00999000
KY1COLMS EQU   00000                   NUMBER OF ALT 1 KEY COLUMNS      01000000
KY2COLMS EQU   00000                   NUMBER OF ALT 2 KEY COLUMNS      01001000
KY3COLMS EQU   00000                   NUMBER OF ALT 3 KEY COLUMNS      01002000
*                                                                       01003000
         LTORG                                                          01004000
         END                                                            01005000
