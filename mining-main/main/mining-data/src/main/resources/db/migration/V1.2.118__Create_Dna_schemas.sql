CREATE CLASS ModuleUnit IF NOT EXISTS Extends V ABSTRACT;

CREATE CLASS DnaString IF NOT EXISTS EXTENDS V;
CREATE PROPERTY DnaString.projectLink IF NOT EXISTS LINK Project (NOTNULL, MANDATORY TRUE);
CREATE PROPERTY DnaString.sequencerId IF NOT EXISTS STRING (NOTNULL, MANDATORY TRUE);
CREATE PROPERTY DnaString.generatedOn IF NOT EXISTS DATETIME (NOTNULL, MANDATORY TRUE);
CREATE PROPERTY DnaString.length IF NOT EXISTS INTEGER (NOTNULL, MANDATORY TRUE);
CREATE PROPERTY DnaString.moduleUnitLink IF NOT EXISTS LINK ModuleUnit (NOTNULL, MANDATORY TRUE);
CREATE PROPERTY DnaString.contentHash IF NOT EXISTS STRING (NOTNULL, MANDATORY TRUE);

CREATE CLASS DnaStringElement IF NOT EXISTS EXTENDS V;
CREATE PROPERTY DnaStringElement.stringLink IF NOT EXISTS LINK DnaString (NOTNULL, MANDATORY TRUE);
CREATE PROPERTY DnaStringElement.index IF NOT EXISTS INTEGER (NOTNULL, MANDATORY TRUE);
CREATE PROPERTY DnaStringElement.location IF NOT EXISTS EMBEDDED ModuleLocation;
CREATE PROPERTY DnaStringElement.value IF NOT EXISTS STRING (NOTNULL, MANDATORY TRUE);

CREATE CLASS DnaSimilarity IF NOT EXISTS EXTENDS V;
CREATE PROPERTY DnaSimilarity.projectLink IF NOT EXISTS LINK Project (NOTNULL, MANDATORY TRUE);
CREATE PROPERTY DnaSimilarity.sequencerId IF NOT EXISTS STRING (NOTNULL, MANDATORY TRUE);
CREATE PROPERTY DnaSimilarity.similarityId IF NOT EXISTS STRING (NOTNULL, MANDATORY TRUE);
CREATE PROPERTY DnaSimilarity.fromDnaString IF NOT EXISTS LINK DnaString (NOTNULL, MANDATORY TRUE);
CREATE PROPERTY DnaSimilarity.toDnaString IF NOT EXISTS LINK DnaString (NOTNULL, MANDATORY TRUE);
CREATE PROPERTY DnaSimilarity.similarity IF NOT EXISTS DOUBLE (NOTNULL, MANDATORY TRUE);

CREATE CLASS DnaSnapshot IF NOT EXISTS EXTENDS V;
CREATE PROPERTY DnaSnapshot.projectLink IF NOT EXISTS LINK Project (NOTNULL, MANDATORY TRUE);
CREATE PROPERTY DnaSnapshot.name IF NOT EXISTS STRING;
CREATE PROPERTY DnaSnapshot.updatedOn IF NOT EXISTS DATETIME (NOTNULL, MANDATORY TRUE);
CREATE PROPERTY DnaSnapshot.totalModuleCount IF NOT EXISTS INTEGER (NOTNULL, DEFAULT 0);
CREATE PROPERTY DnaSnapshot.similarityThreshold IF NOT EXISTS DOUBLE (NOTNULL, DEFAULT 0.85);
CREATE PROPERTY DnaSnapshot.maxLevels IF NOT EXISTS INTEGER (NOTNULL, DEFAULT 5);
CREATE PROPERTY DnaSnapshot.maxIterations IF NOT EXISTS INTEGER (NOTNULL, DEFAULT 10);
CREATE PROPERTY DnaSnapshot.defaultTolerance IF NOT EXISTS DOUBLE (NOTNULL, DEFAULT 0.0001);
CREATE PROPERTY DnaSnapshot.filterEmptyDNA IF NOT EXISTS BOOLEAN (NOTNULL, DEFAULT TRUE);
CREATE PROPERTY DnaSnapshot.minDNALength IF NOT EXISTS INTEGER (NOTNULL, DEFAULT 20);

CREATE CLASS BelongsToCluster IF NOT EXISTS Extends E;

CREATE CLASS DnaCommunity IF NOT EXISTS EXTENDS V;
CREATE PROPERTY DnaCommunity.projectLink IF NOT EXISTS LINK Project (NOTNULL, MANDATORY TRUE);
CREATE PROPERTY DnaCommunity.snapshotLink IF NOT EXISTS LINK DnaSnapshot (NOTNULL, MANDATORY TRUE);
CREATE PROPERTY DnaCommunity.title IF NOT EXISTS STRING;
CREATE PROPERTY DnaCommunity.sequencerId IF NOT EXISTS STRING (NOTNULL, MANDATORY TRUE);
CREATE PROPERTY DnaCommunity.similarityId IF NOT EXISTS STRING (NOTNULL, MANDATORY TRUE);
CREATE PROPERTY DnaCommunity.clusterAlgorithmId IF NOT EXISTS STRING (NOTNULL, MANDATORY TRUE);
CREATE PROPERTY DnaCommunity.clusterId IF NOT EXISTS STRING (NOTNULL, MANDATORY TRUE);

CREATE PROPERTY DnaCommunity.in_BelongsToCluster IF NOT EXISTS LINKLIST BelongsToCluster;
CREATE PROPERTY ModuleUnit.out_BelongsToCluster IF NOT EXISTS LINKLIST BelongsToCluster;
CREATE PROPERTY BelongsToCluster.out IF NOT EXISTS LINK ModuleUnit (NOTNULL, MANDATORY TRUE);
CREATE PROPERTY BelongsToCluster.in IF NOT EXISTS LINK DnaCommunity (NOTNULL, MANDATORY TRUE);

ALTER CLASS DnaString STRICTMODE TRUE;
ALTER CLASS DnaStringElement STRICTMODE TRUE;
ALTER CLASS DnaSimilarity STRICTMODE TRUE;
ALTER CLASS DnaSnapshot STRICTMODE TRUE;
ALTER CLASS BelongsToCluster STRICTMODE TRUE;
ALTER CLASS DnaCommunity STRICTMODE TRUE;
ALTER CLASS ModuleUnit STRICTMODE TRUE;

CREATE INDEX DnaSimilarity.projectLink_sequencerId_similarityId IF NOT EXISTS ON DnaSimilarity (projectLink, sequencerId, similarityId) NOTUNIQUE;
CREATE INDEX DnaSimilarity.projectLink_sequencerId_similarityId_fromDnaString IF NOT EXISTS ON DnaSimilarity (projectLink, sequencerId, similarityId, fromDnaString) NOTUNIQUE;
CREATE INDEX DnaSimilarity.projectLink_sequencerId_similarityId_toDnaString IF NOT EXISTS ON DnaSimilarity (projectLink, sequencerId, similarityId, toDnaString) NOTUNIQUE;
CREATE INDEX DnaSnapshot.projectLink_updatedOn IF NOT EXISTS ON DnaSnapshot (projectLink, updatedOn) UNIQUE;
CREATE INDEX DnaString.projectLink_generatedOn IF NOT EXISTS ON DnaString (projectLink, generatedOn) NOTUNIQUE;
CREATE INDEX DnaString.projectLink_moduleUnitLink IF NOT EXISTS ON DnaString (projectLink, moduleUnitLink) NOTUNIQUE;
CREATE INDEX DnaStringElement.stringLink IF NOT EXISTS ON DnaStringElement(stringLink) NOTUNIQUE;
CREATE INDEX DnaCommunity.snapshotLink_sequencerId_similarityId IF NOT EXISTS ON DnaCommunity (snapshotLink, sequencerId, similarityId) NOTUNIQUE;
CREATE INDEX DnaCommunity.projectLink_sequencerId IF NOT EXISTS ON DnaCommunity (projectLink, sequencerId) NOTUNIQUE;

ALTER CLASS Module SUPERCLASS +ModuleUnit;