# Modules
"Uid","Parent Uid","Name","Path","Language","Type","Representation","Complexity","Errors (Nodes)","Source Lines of Code","Comment Lines of Code","Physical Lines of Code","Statements (Nodes)","SQL Statements","Offset","Length"
2272,"","EMP","","SQL","SQL_TABLE","VIRTUAL",-1,0,-1,-1,-1,0,0,-1,-1
2270,"","IW_SQL_TEST","","SQL","SQL_TABLE","VIRTUAL",-1,0,-1,-1,-1,0,0,-1,-1
2265,2264,"main","","C","C_FUNCTION","VIRTUAL",-1,0,-1,-1,-1,0,0,-1,-1
2264,"","PGM1","src/c/WMIN3829/PGM1.c","C","C_PROGRAM","PHYSICAL",1,10,60,0,62,0,16,-1,-1
2263,"","PGM2","src/cobol/WMIN3829/programs/PGM2.cbl","COBOL","COBOL_PROGRAM","PHYSICAL",3,0,28,0,33,2,2,-1,-1
2269,"","sdfg1","","SQL","SQL_STORED_PROCEDURE","VIRTUAL",-1,0,-1,-1,-1,0,0,-1,-1
2267,"","STORE.PROC1","","SQL","SQL_STORED_PROCEDURE","VIRTUAL",-1,0,-1,-1,-1,0,0,-1,-1
2268,"","STORE.PROC3","","SQL","SQL_STORED_PROCEDURE","VIRTUAL",-1,0,-1,-1,-1,0,0,-1,-1
2276,"","TABLE1","","SQL","SQL_TABLE","VIRTUAL",-1,0,-1,-1,-1,0,0,-1,-1
2266,"","TPL.ME10077","","SQL","SQL_STORED_PROCEDURE","VIRTUAL",-1,0,-1,-1,-1,0,0,-1,-1
2274,"","UTT_ADT_HEAD","","SQL","SQL_TABLE","VIRTUAL",-1,0,-1,-1,-1,0,0,-1,-1
2273,"","UTT_MKTR","","SQL","SQL_TABLE","VIRTUAL",-1,0,-1,-1,-1,0,0,-1,-1
2275,"","UTT_OA","","SQL","SQL_TABLE","VIRTUAL",-1,0,-1,-1,-1,0,0,-1,-1
# Statements
"Uid","Module Name","Statement","String"
2263,"PGM2","CONDITIONAL","IF FIELD-1 EQ 'P'"
2263,"PGM2","CONDITIONAL","IF FIELD-1 EQ 'R'"
# SQL
"Uid","Module Name","Statement","SQL Length","Tables","Distinct Tables","Custom Complexity","Halstead Complexity","Halstead Difficulty","String"
2264,"PGM1","UNKNOWN",29,0,0,0,0.00,0.00,"$PREPARE STMT1 FROM STATEMENT"
2264,"PGM1","UNKNOWN",21,0,0,0,0.00,0.00,"BEGIN DECLARE SECTION"
2264,"PGM1","CALL",47,0,0,0,0.00,0.00,"CALL :PROC (:VAR1, :VAR2, 'A CONSTANT', 123.45)"
2264,"PGM1","CALL",61,0,0,0,0.00,0.00,"CALL TPL.ME10077 (:ALPHASHORT, 'HELLO OO', -1, 5, 'HELLO OO')"
2264,"PGM1","DECLARE_TABLE",657,0,0,0,0.00,0.00,"DECLARE DSN8C10.EMP TABLE 
            EMPNO     CHAR(6)     NOT NULL, 
            FIRSTNME  VARCHAR(12) NOT NULL,
            MIDINIT   CHAR(1)     NOT NULL,
            LASTNAME  VARCHAR(15) NOT NULL,
            WORKDEPT  CHAR(3)             ,
            PHONENO   CHAR(4)             ,
            HIREDATE  DATE                ,
            JOB       CHAR(8)             ,
            EDLEVEL   SMALLINT            ,
            SEX       CHAR(1)             ,
            BIRTHDATE DATE                ,
            SALARY    DECIMAL(9,2)        ,
            BONUS     DECIMAL(9,2)        ,
            COMM      DECIMAL(9,2)        )"
2264,"PGM1","UNKNOWN",19,0,0,0,0.00,0.00,"END DECLARE SECTION"
2264,"PGM1","EXECUTE",101,0,0,0,0.00,0.00,"EXECUTE
     BEGIN
       INSERT INTO TPL.IW_SQL_TEST (ALPHA_SHORT)
         VALUES (:ALPHA-SHORT)"
2264,"PGM1","INSERT",169,3,3,9,9.25,2.50,"INSERT INTO UTT_ADT_HEAD (CRT_TS) SELECT CURRENT TIMESTAMP FROM UTT_OA  OAGT ,UTT_MKTR MRKR WHERE OAGT.CNTR_NUM = :WS-CHLD-CON AND OAGT.MKTR_FOCAL_SUBJ_ID = MRKR.SUBJ_ID"
2264,"PGM1","INSERT",169,3,3,9,9.25,2.50,"INSERT INTO UTT_ADT_HEAD (CRT_TS) SELECT CURRENT TIMESTAMP FROM UTT_OA  OAGT ,UTT_MKTR MRKR WHERE OAGT.CNTR_NUM = :WS-CHLD-CON AND OAGT.MKTR_FOCAL_SUBJ_ID = MRKR.SUBJ_ID"
2264,"PGM1","OPEN",13,0,0,0,0.00,0.00,"OPEN mycursor"
2264,"PGM1","PREPARE",30,0,0,0,0.00,0.00,"PREPARE mystmt FROM :prep_stmt"
2264,"PGM1","SELECT",95,1,1,4,2.32,1.00,"SELECT
        ALPHA_SHORT
        INTO 
        $ALPHA-SHORT 
        FROM TPL.IW_SQL_TEST"
2264,"PGM1","SELECT",20,1,1,2,0.79,0.50,"SELECT * FROM TABLE1"
2264,"PGM1","WHENEVER",27,0,0,0,0.00,0.00,"WHENEVER NOT FOUND GOTO out"
2264,"PGM1","SELECT",101,0,0,0,0.00,0.00,"WITH DATA_1 AS (SELECT * FROM
     TPL.IW_SQL_TEST)
     SELECT ALPHA_SHORT FROM DATA_1 INTO :ALPHA"
2264,"PGM1","SELECT",93,1,1,4,2.32,1.00,"select
        ALPHA_SHORT
        INTO
        :ALPHA-SHORT
        FROM TPL.IW_SQL_TEST"
2263,"PGM2","SELECT",57,1,1,4,2.32,1.00,"SELECT
ALPHA_SHORT
INTO
$ALPHA-SHORT
FROM TPL.IW_SQL_TEST"
2263,"PGM2","SELECT",20,1,1,2,0.79,0.50,"SELECT * FROM TABLE1"
# Dependencies
"Uid","Module Name","Target Uid","Target Name","Target Language","Target Type","Relationship","Reached From Uids","Binding","Attributes","fromLocationOffset","fromLocationLength","toLocationOffset","toLocationLength"
2264,"PGM1",2272,"EMP","SQL","SQL_TABLE","Accesses","","LATE","{""DB_ACCESS_TYPE"":[""OTHER""]}",-1,-1,-1,-1
2264,"PGM1",2270,"IW_SQL_TEST","SQL","SQL_TABLE","Accesses","","LATE","{""DB_ACCESS_TYPE"":[""READ""]}",-1,-1,-1,-1
2264,"PGM1",2270,"IW_SQL_TEST","SQL","SQL_TABLE","Accesses","","LATE","{""DB_ACCESS_TYPE"":[""READ""]}",-1,-1,-1,-1
2264,"PGM1",2267,"STORE.PROC1","SQL","SQL_STORED_PROCEDURE","Calls","","LATE","{}",-1,-1,-1,-1
2264,"PGM1",2268,"STORE.PROC3","SQL","SQL_STORED_PROCEDURE","Calls","","LATE","{}",-1,-1,-1,-1
2264,"PGM1",2276,"TABLE1","SQL","SQL_TABLE","Accesses","","LATE","{""DB_ACCESS_TYPE"":[""READ""]}",-1,-1,-1,-1
2264,"PGM1",2266,"TPL.ME10077","SQL","SQL_STORED_PROCEDURE","Calls","","LATE","{}",-1,-1,-1,-1
2264,"PGM1",2274,"UTT_ADT_HEAD","SQL","SQL_TABLE","Accesses","","LATE","{""DB_ACCESS_TYPE"":[""READ""]}",-1,-1,-1,-1
2264,"PGM1",2274,"UTT_ADT_HEAD","SQL","SQL_TABLE","Accesses","","LATE","{""DB_ACCESS_TYPE"":[""STORE""]}",-1,-1,-1,-1
2264,"PGM1",2273,"UTT_MKTR","SQL","SQL_TABLE","Accesses","","LATE","{""DB_ACCESS_TYPE"":[""STORE""]}",-1,-1,-1,-1
2264,"PGM1",2273,"UTT_MKTR","SQL","SQL_TABLE","Accesses","","LATE","{""DB_ACCESS_TYPE"":[""READ""]}",-1,-1,-1,-1
2264,"PGM1",2275,"UTT_OA","SQL","SQL_TABLE","Accesses","","LATE","{""DB_ACCESS_TYPE"":[""STORE""]}",-1,-1,-1,-1
2264,"PGM1",2275,"UTT_OA","SQL","SQL_TABLE","Accesses","","LATE","{""DB_ACCESS_TYPE"":[""READ""]}",-1,-1,-1,-1
2264,"PGM1",2269,"sdfg1","SQL","SQL_STORED_PROCEDURE","Calls","","LATE","{}",-1,-1,-1,-1
2263,"PGM2",2270,"IW_SQL_TEST","SQL","SQL_TABLE","Accesses","","LATE","{""DB_ACCESS_TYPE"":[""READ""]}",286,203,-1,-1
2263,"PGM2",0,"SQLCA","COBOL","COPYBOOK","Includes","","EARLY","{}",-1,-1,-1,-1
2263,"PGM2",2276,"TABLE1","SQL","SQL_TABLE","Accesses","","LATE","{""DB_ACCESS_TYPE"":[""READ""]}",499,132,-1,-1
2265,"main",-1,"printf","C","C_FUNCTION","Calls","","LATE","{}",-1,-1,-1,-1
# Errors
"Uid","Module Name","Severity","Key","Cause","Offset","Length"
2264,"PGM1","WARNING","PARSE_ERROR","SqlParseException while collecting SQL Metrics for SQL: END DECLARE SECTION",-1,-1
2264,"PGM1","WARNING","PARSE_ERROR","SqlParseException while collecting SQL Metrics for SQL: BEGIN DECLARE SECTION",-1,-1
2264,"PGM1","WARNING","PARSE_ERROR","SqlParseException while collecting SQL Metrics for SQL: $PREPARE STMT1 FROM STATEMENT",-1,-1
2264,"PGM1","WARNING","PARSE_ERROR","SqlParseException while collecting SQL Metrics for SQL: WITH DATA_1 AS (SELECT * FROM
     TPL.IW_SQL_TEST)
     SELECT ALPHA_SHORT FROM DATA_1 INTO :ALPHA",-1,-1
2264,"PGM1","WARNING","PARSE_ERROR","SqlParseException while collecting SQL Metrics for SQL: CALL :PROC (:VAR1, :VAR2, 'A CONSTANT', 123.45)",-1,-1
2264,"PGM1","ERROR","PARSE_ERROR","Code is not implemented",-1,-1
2264,"PGM1","WARNING","PARSE_ERROR","SqlParseException while collecting SQL Metrics for SQL: EXECUTE
     BEGIN
       INSERT INTO TPL.IW_SQL_TEST (ALPHA_SHORT)
         VALUES (:ALPHA-SHORT)",-1,-1
2264,"PGM1","WARNING","PARSE_ERROR","SqlParseException while collecting SQL Metrics for SQL: DECLARE DSN8C10.EMP TABLE 
            EMPNO     CHAR(6)     NOT NULL, 
            FIRSTNME  VARCHAR(12) NOT NULL,
            MIDINIT   CHAR(1)     NOT NULL,
            LASTNAME  VARCHAR(15) NOT NULL,
            WORKDEPT  CHAR(3)             ,
            PHONENO   CHAR(4)             ,
            HIREDATE  DATE                ,
            JOB       CHAR(8)             ,
            EDLEVEL   SMALLINT            ,
            SEX       CHAR(1)             ,
            BIRTHDATE DATE                ,
            SALARY    DECIMAL(9,2)        ,
            BONUS     DECIMAL(9,2)        ,
            COMM      DECIMAL(9,2)        )",-1,-1
2264,"PGM1","WARNING","PARSE_ERROR","SqlParseException while collecting SQL Metrics for SQL: WHENEVER NOT FOUND GOTO out",-1,-1
2264,"PGM1","WARNING","PARSE_ERROR","SqlParseException while collecting SQL Metrics for SQL: PREPARE mystmt FROM :prep_stmt",-1,-1
# Undiscovered
"Uid","Name","Path"
# Dead Code
"Uid","Module Name","DeadCode","Starting Line","Number of Lines"
