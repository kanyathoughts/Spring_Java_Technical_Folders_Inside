PARM SSID(DP0G)                                                                 
***********************************************************************         
*----------------------------------------------------------------------         
DEFINE SE-NAME                W  20  A   VALUE 'RAMONA ABAD         '           
DEFINE TEAM-TRK-ITEM-TYPE     W   1  A   VALUE 'T'                              
DEFINE TEAM-TRK-ITEM          W   6  A   VALUE '665155'                         
DEFINE WS-ROWS-TO-BE-PROC     W   4  B 0 VALUE  00001                           
***********************************************************************         
***********************************************************************         
DEFINE WS-ROWS-ACTUALLY-PROC  W   4  B 0 VALUE  000                             
*                                                                               
* THIS IS THE DRIVER FILE WITH RECORD KEY AND NEW VALUE                         
FILE FILEIN FB (120 0)                                                          
IN-REC                 1  120 A                                                 
IN-N-P-ACCT-POSN-ID    1  15  N 0                                               
IN-TCKR-SYM           18  10  A                                                 
IN-BRKG-ACCT          29  08  A                                                 
IN-ACCT-ID            38  15  N 0                                               
IN-ACCT-POSN-ID       54  15  N 0                                               
IN-P-ACCT-POSN-ID     70  15  N 0                                               
IN-INS-ID             86  10  N 0                                               
IN-SECTY-ACCT-TYP-CD  97  01  A                                                 
IN-EFFTV-BGN-DT-RL1   99  10  A                                                 
IN-EFFTV-BGN-DT-POSN 110  10  A                                                 
*                                                                               
DEFINE OUT-REC         W    100 A                                               
DEFINE OUT-LAB1         OUT-REC     10 A                                00840000
DEFINE OUT-P-ACCT-POSN  OUT-REC +11 15 N                                00840000
DEFINE OUT-LAB2         OUT-REC +27 10 A                                00840000
DEFINE OUT-ACCT-ID      OUT-REC +37 15 N                                        
DEFINE OUT-LAB3         OUT-REC +53 04 A                                00840000
DEFINE OUT-ACCT-POSN-ID OUT-REC +58 15 N                                        
DEFINE OUT-LAB4         OUT-REC +74 10 A                                00840000
DEFINE OUT-EFF-BGN      OUT-REC +84 10 A                                        
DEFINE OUT-ACTION-CD    OUT-REC +95 01 A                                        
*                                                                               
DEFINE DI-P-ACCT-POSN-ID    W   8  P 0 MASK('999999999999999')                  
DEFINE DI-ACCT-ID           W   8  P 0 MASK('999999999999999')                  
DEFINE DI-ACCT-POSN-ID      W   8  P 0 MASK('999999999999999')                  
DEFINE DI-EFFTV-BGN-DT      W  10  A                                            
DEFINE DI-PO-ID             W   4  B 0 MASK('9999999999')                       
DEFINE DI-NULL-IND          W   2  B 0 VALUE 0                                  
DEFINE WS-COUNT             W   6  N 0 VALUE 0                                  
DEFINE WS-INPUT-COUNT       W   6  N 0 VALUE 0                                  
DEFINE WS-ERROR-COUNT       W   6  N 0 VALUE 0                                  
DEFINE WS-SQL-CODE          W   3  N 0 VALUE 0                                  
DEFINE RTN-CODE             W   4  B 0 VALUE 8.                                 
DEFINE OLD-P-ACCT-POSN      W   8  P   VALUE 0                                  
DEFINE OLD-ACCT-ID          W   8  P   VALUE 0                                  
DEFINE OLD-ACCT-POSN-ID     W   8  P   VALUE 0                                  
DEFINE OLD-EFF-BGN-DT       W  10  A   VALUE '          '.                      
DEFINE WS-LST-UPDTD-USER-ID W   8  A   VALUE '        '.                        
DEFINE WS-LST-UPDTD-TS      W  26  A   VALUE '          '.                      
*                                                                               
DEFINE UPD-REC         W     80  A                                              
DEFINE UPD-DATE         UPD-REC     8 A                                         
DEFINE UPD-TIME         UPD-REC +10 5 A                                         
DEFINE UPD-SCR-TYPE     UPD-REC +16 1 A                                         
DEFINE UPD-TTI          UPD-REC +17 6 A                                         
DEFINE UPD-SE-NAME      UPD-REC +24 20 A                                        
DEFINE UPD-DISP         UPD-REC +45 4 A                                         
DEFINE UPD-SQL-LIT      UPD-REC +50 4 A                                         
DEFINE UPD-SQL-SIGN     UPD-REC +54 1 A                                         
DEFINE UPD-SQL-CODE     UPD-REC +55 3 N 0                                       
DEFINE UPD-ROWS-LIT     UPD-REC +59 5 A                                         
DEFINE UPD-ROWS-ACTUAL  UPD-REC +65 3 N 0 MASK('ZZ9')                           
DEFINE UPD-SLASH        UPD-REC +68 1 A                                         
DEFINE UPD-ROWS-TRIED   UPD-REC +69 3 N 0 MASK('ZZ9')                           
*                                                                               
 SQL DECLARE CUR1 CURSOR FOR                              +                     
    SELECT  PARNT_ACCT_POSN_ID                            +                     
           ,ACCT_ID                                       +                     
           ,ACCT_POSN_ID                                  +                     
           ,EFFTV_BGN_DT                                  +                     
    FROM AVGI00.VPOSN_RLSHP                               +                     
      WHERE PARNT_ACCT_POSN_ID = :DI-P-ACCT-POSN-ID       +                     
    WITH UR                                                                     
                                                                                
JOB INPUT NULL                                                                  
 GET FILEIN                                                                     
 IF EOF FILEIN                                                                  
    PERFORM FINISH-RTN                                                          
 ELSE                                                                           
     WS-INPUT-COUNT = WS-INPUT-COUNT + 1                                        
     IF WS-INPUT-COUNT = 1                                                      
        GO TO JOB                                                               
     END-IF                                                                     
 END-IF                                                                         
                                                                                
* SET DB2 LOOKUP KEY AND NEW VALUE IN WORKING STORAGE                           
 DI-P-ACCT-POSN-ID    = IN-N-P-ACCT-POSN-ID                                     
 DI-ACCT-ID           = IN-ACCT-ID                                              
 DI-ACCT-POSN-ID      = IN-ACCT-POSN-ID                                         
 DI-EFFTV-BGN-DT      = IN-EFFTV-BGN-DT-RL1                                     
                                                                                
PERFORM GET-BEFORE-IMAGE                                                        
IF RETURN-CODE = 8                                                              
  WS-SQL-CODE = SQLCODE                                                         
  DISPLAY 'ABORTING BECAUSE OF SELECT SQLCODE ' +                               
          IN-N-P-ACCT-POSN-ID, IN-TCKR-SYM, IN-BRKG-ACCT                        
  PERFORM FINISH-RTN                                                            
END-IF                                                                          
IF WS-COUNT EQ 0                                                                
    DISPLAY 'EMPTY CURSOR PROCEED WITH INSERT ' +                               
          IN-N-P-ACCT-POSN-ID, IN-TCKR-SYM, IN-BRKG-ACCT                        
*   GO TO JOB                                                                   
END-IF                                                                          
                                                                                
*   SKIPPED IF NOT AN EMPTY CURSOR                                              
IF WS-COUNT GT 0                                                                
    DISPLAY 'SKIPPED TO PREVENT UNEXPECTED INSERT ' +                           
          IN-N-P-ACCT-POSN-ID, IN-TCKR-SYM, IN-BRKG-ACCT                        
    GO TO JOB                                                                   
END-IF                                                                          
                                                                                
      SQL  INSERT INTO AVGI00.VPOSN_RLSHP         +                             
                 (  ACCT_ID                                        +            
                  , ACCT_POSN_ID                                   +            
                  , POSN_RLSHP_TYP_CD                              +            
                  , PARNT_ACCT_ID                                  +            
                  , PARNT_ACCT_POSN_ID                             +            
                  , EFFTV_BGN_DT                                   +            
                  , EFFTV_END_DT                                   +            
                  , LST_UPDTD_USER_ID                              +            
                  , LST_UPDTD_TS                                   +            
                 )                                                 +            
           VALUES ( :DI-ACCT-ID,                  +                             
                    :DI-ACCT-POSN-ID,             +                             
                    'BKMF',                       +                             
                    :DI-ACCT-ID,                  +                             
                    :DI-P-ACCT-POSN-ID,           +                             
                    :DI-EFFTV-BGN-DT,             +                             
                    '9999-12-31',                 +                             
                    'DF665155',                   +                             
                    CURRENT TIMESTAMP)                                          
*                                                                               
CASE SQLCODE                                                                    
   WHEN 0                                                                       
      PERFORM BUILD-AUDIT-RECA                                                  
      DISPLAY 'ROW ADDED ' OUT-REC                                              
      WS-ROWS-ACTUALLY-PROC = WS-ROWS-ACTUALLY-PROC + SQLERRD(3)                
   WHEN 100                                                                     
      DISPLAY 'NO ROW FOUND TO UPDATE ', +                                      
          IN-N-P-ACCT-POSN-ID, IN-TCKR-SYM, IN-BRKG-ACCT                        
      WS-ERROR-COUNT = WS-ERROR-COUNT + 1                                       
   OTHERWISE                                                                    
      DISPLAY ' BAD SQLCODE... ' SQLCODE ' ON ' +                               
          IN-N-P-ACCT-POSN-ID, IN-TCKR-SYM, IN-BRKG-ACCT                        
      MOVE RTN-CODE TO RETURN-CODE                                              
END-CASE                                                                        
GO TO JOB                                                                       
*                                                                               
*                                                                               
GET-BEFORE-IMAGE. PROC.                                                         
 SQL OPEN CUR1                                                                  
 WS-COUNT = 0                                                                   
 IF SQLCODE NE 0                                                                
     DISPLAY ' BAD SQL ON OPEN CURSOR, SQLCODE = ' SQLCODE                      
     MOVE RTN-CODE TO RETURN-CODE                                               
 END-IF                                                                         
*                                                                               
OLD-P-ACCT-POSN  = 0                                                            
OLD-ACCT-ID      = 0                                                            
OLD-ACCT-POSN-ID = 0                                                            
OLD-EFF-BGN-DT   = '          '                                                 
                                                                                
FETCH-CUR1.                                                                     
 SQL FETCH CUR1 +                                                               
   INTO :OLD-P-ACCT-POSN  +                                                     
       ,:OLD-ACCT-ID      +                                                     
       ,:OLD-ACCT-POSN-ID +                                                     
       ,:OLD-EFF-BGN-DT                                                         
 IF SQLCODE EQ 0                                                                
      WS-COUNT   = WS-COUNT   + 1                                               
      PERFORM BUILD-AUDIT-RECB                                                  
 ELSE                                                                           
   IF SQLCODE EQ +100                                                           
     GO TO CLOSE-CUR1                                                           
   ELSE                                                                         
     DISPLAY ' BAD SQL ON FETCH CURSOR, SQLCODE = ' SQLCODE                     
     MOVE RTN-CODE TO RETURN-CODE                                               
     IF SQLCODE EQ -501                                                         
        WS-SQL-CODE = SQLCODE                                                   
        DISPLAY 'ABORTING BECAUSE OF FETCH SQLCODE ' +                          
          IN-N-P-ACCT-POSN-ID, IN-TCKR-SYM, IN-BRKG-ACCT                        
        PERFORM FINISH-RTN                                                      
     END-IF                                                                     
   END-IF                                                                       
 END-IF                                                                         
 GO TO FETCH-CUR1                                                               
*                                                                               
CLOSE-CUR1.                                                                     
 SQL CLOSE CUR1                                                                 
 IF SQLCODE NE 0                                                                
     DISPLAY ' BAD SQL ON CLOSE CURSOR, SQLCODE = ' SQLCODE                     
     MOVE RTN-CODE TO RETURN-CODE                                               
 END-IF                                                                         
END-PROC.                                                                       
*                                                                               
*                                                                               
BUILD-AUDIT-RECB. PROC.                                                         
 OUT-LAB1              = 'P ACCTPSN '                                           
 OUT-P-ACCT-POSN       = OLD-P-ACCT-POSN                                        
 OUT-LAB2              = 'ACCOUNT   '                                           
 OUT-ACCT-ID           = OLD-ACCT-ID                                            
 OUT-LAB3              = 'POSN'                                                 
 OUT-ACCT-POSN-ID      = OLD-ACCT-POSN-ID                                       
 OUT-LAB4              = 'EFFTV BGN '                                           
 OUT-EFF-BGN           = OLD-EFF-BGN-DT                                         
 OUT-ACTION-CD         = ' '                                                    
 *UT FILEOUT                                                                    
END-PROC.                                                                       
*                                                                               
BUILD-AUDIT-RECA. PROC.                                                         
 OUT-LAB1              = 'P ACCTPSN '                                           
 OUT-P-ACCT-POSN       = DI-P-ACCT-POSN-ID                                      
 OUT-LAB2              = 'ACCOUNT   '                                           
 OUT-ACCT-ID           = DI-ACCT-ID                                             
 OUT-LAB3              = 'POSN'                                                 
 OUT-ACCT-POSN-ID      = DI-ACCT-POSN-ID                                        
 OUT-LAB4              = 'EFFTV BGN '                                           
 OUT-EFF-BGN           = DI-EFFTV-BGN-DT                                        
 OUT-ACTION-CD         = 'A'                                                    
 *UT FILEOUT                                                                    
END-PROC.                                                                       
*                                                                               
*                                                                               
FINISH-RTN. PROC.                                                               
DISPLAY ' '                                                                     
DISPLAY ' TOTAL INPUT RECORDS = '  WS-INPUT-COUNT                               
DISPLAY ' TOTAL NOT FOUND     = '  WS-ERROR-COUNT                               
DISPLAY ' EXPECTED NUMBER OF ROWS WAS: '  WS-ROWS-TO-BE-PROC                    
DISPLAY '   ACTUAL NUMBER OF ROWS WAS: '  WS-ROWS-ACTUALLY-PROC                 
IF WS-ROWS-ACTUALLY-PROC > WS-ROWS-ACTUALLY-PROC                                
     MOVE RTN-CODE TO RETURN-CODE                                               
     DISPLAY 'ROLLING BACK: #PROCESSED RECS EXCEEDS ESTIMATE'                   
     SQL ROLLBACK                                                               
ELSE                                                                            
     DISPLAY 'COMMITING DB2 UPDATES'                                            
     SQL  COMMIT                                                                
END-IF                                                                          
* PREPARE AND WRITE LOG RECORD                                                  
UPD-DATE  = SYSDATE                                                             
UPD-TIME  = SYSTIME                                                             
UPD-SCR-TYPE  = TEAM-TRK-ITEM-TYPE                                              
UPD-TTI  = TEAM-TRK-ITEM                                                        
UPD-SE-NAME = SE-NAME                                                           
IF RETURN-CODE > 0                                                              
   UPD-DISP = 'FAIL'                                                            
ELSE                                                                            
   UPD-DISP = 'CMPL'                                                            
END-IF                                                                          
UPD-SQL-LIT   = 'SQL='                                                          
IF WS-SQL-CODE < 0                                                              
   UPD-SQL-SIGN = '-'                                                           
   UPD-SQL-CODE = 0 - WS-SQL-CODE                                               
ELSE                                                                            
   UPD-SQL-SIGN = ' '                                                           
   UPD-SQL-CODE = WS-SQL-CODE                                                   
END-IF                                                                          
UPD-ROWS-LIT  = '#ROWS'                                                         
UPD-ROWS-ACTUAL =    WS-ROWS-ACTUALLY-PROC                                      
UPD-SLASH = '/'                                                                 
UPD-ROWS-TRIED =     WS-ROWS-TO-BE-PROC                                         
*UT UPDLOG                                                                      
STOP                                                                            
END-PROC.                                                                       
