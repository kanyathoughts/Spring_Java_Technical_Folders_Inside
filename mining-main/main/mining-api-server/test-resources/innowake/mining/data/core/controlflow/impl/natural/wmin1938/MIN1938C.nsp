DEFINE DATA
LOCAL
**************************************
* Alphanumeric test
**************************************
01 #A8      (A8) INIT <'23456'>
01 #A9      (A9) INIT <'23456,78'>
01 #A8-N    (A8) INIT <'-23456'>
01 #A9-N    (A9) INIT <'-23456,78'>
**************************************
* Numeric test
**************************************
01 #O-N5    (N5)   INIT <12345>
01 #O-N52   (N5.2) INIT <12345.67>
01 #O-N5-N  (N5)   INIT <-12345>
01 #O-N52-N (N5.2) INIT <-12345.67>
**************************************
* Packed test
**************************************
01 #O-P5    (P5)   INIT <12345>
01 #O-P52   (P5.2) INIT <12345.67>
01 #O-P5-N  (P5)   INIT <-12345>
01 #O-P52-N (P5.2) INIT <-12345.67>
**************************************
* For INPUT from stack
**************************************
01 #I-N5    (N5)
01 #I-N52   (N5.2)
01 #I-N5-N  (N5)
01 #I-N52-N (N5.2)
END-DEFINE
FORMAT (1) PS=0
SET CONTROL 'N'

* required for running the solid tests on StMELF
* SET GLOBALS DC=',' THSEPCH='.'

WRITE (1) NOTITLE *PROGRAM
PERFORM ALPHANUMERIC-TEST
PERFORM NUMERIC-TEST
PERFORM PACKED-TEST

DEFINE SUBROUTINE ALPHANUMERIC-TEST
  WRITE (1) NOTITLE 'ALPHANUMERIC-TEST'
  STACK TOP DATA  #A8 #A9 #A8-N #A9-N
  INPUT #I-N5 #I-N52 #I-N5-N #I-N52-N
  WRITE (1) NOTITLE 'to stack:  ' '=' #A8 '=' #A9 '=' #A8-N '=' #A9-N
  IF #I EQ 0
    ESCAPE ROUTINE
  END-IF
  WRITE (1) NOTITLE 'from stack:' '=' #I-N5 '=' #I-N52 '=' #I-N5-N '=' #I-N52-N
END-SUBROUTINE

DEFINE SUBROUTINE NUMERIC-TEST
  WRITE (1) NOTITLE 'NUMERIC-TEST'
  STACK TOP DATA #O-N5 #O-N52 #O-N5-N #O-N52-N
  INPUT #I-N5 #I-N52 #I-N5-N #I-N52-N
  WRITE (1) NOTITLE 'to stack:  ' '=' #O-N5 '=' #O-N52 '=' #O-N5-N '=' #O-N52-N
  IF #I EQ 0
    ESCAPE MODULE
  END-IF
  WRITE (1) NOTITLE 'from stack:' '=' #I-N5 '=' #I-N52 '=' #I-N5-N '=' #I-N52-N
  
    ESCAPE ROUTINE
    
  WRITE (1) NOTITLE 'from stack:' '=' #I-N5 '=' #I-N52 '=' #I-N5-N '=' #I-N52-N
  WRITE (1) NOTITLE 'from stack:' '=' #I-N5 '=' #I-N52 '=' #I-N5-N '=' #I-N52-N
  WRITE (1) NOTITLE 'from stack:' '=' #I-N5 '=' #I-N52 '=' #I-N5-N '=' #I-N52-N
END-SUBROUTINE

DEFINE SUBROUTINE PACKED-TEST
  WRITE (1) NOTITLE 'PACKED-TEST'
  STACK TOP DATA  #O-P5 #O-P52 #O-P5-N #O-P52-N
  INPUT #I-N5 #I-N52 #I-N5-N #I-N52-N
  WRITE (1) NOTITLE 'to stack:  ' '=' #O-P5 '=' #O-P52 '=' #O-P5-N '=' #O-P52-N
  WRITE (1) NOTITLE 'from stack:' '=' #I-N5 '=' #I-N52 '=' #I-N5-N '=' #I-N52-N
  PERFORM ALPHANUMERIC-TEST
  PERFORM NUMERIC-TEST
END-SUBROUTINE
*
END